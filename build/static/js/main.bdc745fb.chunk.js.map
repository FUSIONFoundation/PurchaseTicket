{"version":3,"sources":["images/radioOn.svg","images/radioOff.svg","images/checkboxOn.svg","images/check_off.svg","images/lineGraph.svg","images/times.svg","images/explorer-logo.svg","history.js","Components/colors.js","Components/constants.js","api/web3api.js","api/currentDataState.js","Components/UnlockAccount.js","Components/Input/CheckBox.js","Components/PurchaseTicket.js","utils/index.js","Components/Status.js","Components/BlockDisplayer.js","Components/NodeSelect.js","Components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","createHistory","Colors","Constants","web3FusionExtend","require","web3Api","Object","classCallCheck","this","eventEmitter","EventEmitter","_web3","provider","connectedOnce","lastNodeAddress","attempForMonitor","lastBlock","walletAddress","setupMonitor","bind","monitoringBlocks","ticketPurchasing","newNodeAddress","httpOnly","_this","console","log","nextMonitorCall","clearTimeout","subscriptionFSNCallAddress","unsubscribe","a","indexOf","providers","WebsocketProvider","e","setTimeout","emit","on","mustGetOneBalance","HttpProvider","setProvider","wb","w3","extend","eth","getBlockNumber","then","block","catch","error","setNodeAddress","add","blockNumberToDisplay","lastestBlockListener","_this2","bl","valid","keys","length","removeEventListener","getting","getBlock","err","errObject","_this4","startFilterEngine","_walletAddress","number","fsn","getAllBalances","res","allBalances","allTicketsByAddress","allTickets","loadsOfInfo","ticketPrice","assign","getGasPrice","gasPrice","totalNumberOfTickets","totalTickets","latestBlock","eventName","listener","removeListener","event","payload","arguments","undefined","data","cb","_this5","currentDataState","purchaseStarted","activeTicketPurchase","ticketsPurchased","startBlock","lastStatus","lastTicketCheckTimer","timerFunc","purchaseOneTicket","lastCall","step","ticketQuantity","_this6","fsntx","buildBuyTicketTx","from","tx","signAndTransmit","signInfo","signTransaction","txHash","waitForTransactionToComplete","r","status","Error","transID","_this7","getTransactionReceipt","receipt","address","web3interface","web3api","BN","web3","utils","datablock","accountUnlocked","autoBuyOn","balanceOfFSN","numberOfTicketsToPurchase","numberOfTickets","autoBuy","autoReinvestReward","rewardsToDate","repeat","lastUpdateTime","Date","walletBalance","autoBuyStopTime","moment","lastTicketExpires","toString","styles","selectFileTitle","glb_selectFiles","balanceInfo","radioOn","radioOff","SelectKeyStoreFile","withSelectFiles","_ref","check","selectFiles","react_default","createElement","key","className","style","color","colors","successGreen","marginRight","Text","selectWalletFileText","UnlockAccount","state","accessViaPrivateKey","secureEntry","password","btnStyle","unlockWalletButtonDisabled","enabled","privateKeyOK","unlockWalletButton","keyData","View","container","innerContainer","title","accessBox","textHowToAccess","flexDirection","TouchableOpacity","onPress","setState","unlockError","Image","source","resizeMode","width","height","radioSelectionText","selectionBox","privateKeyRender","keyStoreRender","disabled","accounts","privateKeyToAccount","obj","crypto","Crypto","decrypt","version","history","push","_this3","fileSelectColor","white","borderColor","errorRed","orderGrey","multiple","files","reader","FileReader","onload","target","result","JSON","parse","onerror","readAsText","selectWalletBox","backgroundColor","errorText","labelText","passwordInputBox","TextInput","passwordInput","placeholder","autoCorrect","autoComplete","secureTextEntry","placeholderTextColor","maxLength","value","onChangeText","val","backgroundGrey","flex","justifyContent","alignItems","text","isHexStrict","class","Component","StyleSheet","create","flexGrow","flexShrink","flexBasis","fontSize","fontFamily","constants","fontWeight","boldFont","textBlue","marginTop","alignSelf","marginBottom","regularFont","marginLeft","borderRadius","borderWidth","overflow","boxShadow","paddingTop","paddingBottom","paddingLeft","paddingRight","labelGrey","mediumFont","textAlign","disabledBlue","padding","linkBlue","checkOn","checkOff","CheckBox","props","possibleConstructorReturn","getPrototypeOf","call","textWidth","opacity","containerInner","questionText","subText","questionSubText","children","Utils","newValue","suffixNum","Math","floor","shortValue","precision","parseFloat","pow","toPrecision","replace","toFixed","str","index","substr","len","insert","removeZeros","charAt","trailing","leading","decimal","before","after","trimTrailingZeros","units","split","displayNumber","abs","power","min","Status","daysQuantity","totalCost","daysError","totalCostString","autoBuyTickets","reinvestReward","autoBuyStopDate","totalPrice","repaintKey","date","getTime","onChangeDate","assertThisInitialized","balanceListener","setBalanceInfo","calcDisplay","stakeTextColor","daysTextcolor","purchaseTicketButtonDisabled","purchaseText","purchaseTicketButton","concat","displayPercent","Auto_Buy_Stake_Monit","activeButton","walletBox","walletLabel","Clipboard","setString","walletLabelAddress","stakeDetailBox","infoText","window","open","infoTextLink","orderBorder","fundsDetailRow","labelLineText","statText","formatWei","stakeTextFSN","stakeDetailRow","valText","errorForFundsBox","errorForFunds","position","left","ticketQuantityInput","valGas","valTik","num","div","toNumber","maxIt","days","parseInt","isNaN","costCalcLineText","stakeTextVal","CheckBox_CheckBox","es","onChange","selected","minDate","showTimeSelect","dateFormat","purchaseTicket","footerText","buyTickets","purchasingTicket","dt","x","mul","gt","sectionTitle","lineHeight","sectionNumberTitle","info","imageUploadSection","actionButtonDisabled","actionButtonTextDisabled","actionButton","actionButtonText","label","balanceBox","lastUpdated","simpleLineText","textGreen","lightSuccessGreen","stopAutoBuyButton","startAutoBuyButton","inActiveButton","stakingMonitorActive","stakingMonitorActivePercent","largeMetricBox","viewTicketDetails","dateValue","textGrey","rewardsGivenBox","rewardHolderView","rwcTextViewbox","rewardHolderViewText","rewardHolderViewGradient","backgroundImage","rewardGivenBoxTextHolder","textNumberOfRewardsGivenType","textNumberOfRewardsGivenTypeSmaller","textNumberOfRewardsGiven","textNumberOfRewardsGivenSmaller","rewardsGivenBoxRewardCount","lineGraph","tagGrey","stakeDetailText","stakesPurchaseTicketButtton","primaryBlue","stakesStopAutoBuy","stakesStopAutoBuyText","outline","disabledGrey","BlockDisplayer","expand","displayLeftRight","match","params","blockNumber","transactions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","return","cleanupBlock","setupBlock","blockDetailRow","timestamp","hash","parentHash","miner","nonce","size","gasUsed","gasLimit","totalDifficulty","stakeDetailSmall","blockToUse","closebutton","paintKey","ticketDisplayOn","lastTicketStatus","purchaseTikStatus","rewardStyle","rewardNumber","ticketText","ticketPurchaseStatus","ticketStatus","msg","dtDisplay","tickets","ticketViews","_i","ticket","t","txt","ExpireTime","format","ticketDetailRow","ID","closeButton","titleBox","BlockDisplayer_BlockDisplayer","alert","handleStakeButtons","totalStake","right","top","NodeSelect","initedNode","currentNodeAddress","testing","connectionListener","localStorage","getItem","didOneUpdate","prevProps","arg","connectionError","setItem","nodeString","testingBackground","testingNode","ActivityIndicator","animating","errorBackground","adjustsFontSizeToFit","inputNodeMode","inputBackground","nodeInput","clearButtonMode","autoFocus","onBlur","onKeyPress","charCode","selectNode","standardBackground","standardNode","NODESELECT_WIDTH","NODESELECT_HEIGHT","black","fusionLogo","Header","titleAutoBuy","programVersion","nodeSelectBox","NodeSelect_NodeSelect","borderTitle","grey","App","Header_Header","Router","Route","exact","path","component","PurchaseTicket","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bdc745fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/radioOn.0ef10e99.svg\";","module.exports = __webpack_public_path__ + \"static/media/radioOff.53ea8205.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkboxOn.70a8f228.svg\";","module.exports = __webpack_public_path__ + \"static/media/check_off.f24d3320.svg\";","module.exports = __webpack_public_path__ + \"static/media/lineGraph.c0fc5779.svg\";","module.exports = __webpack_public_path__ + \"static/media/times.a3c0a79b.svg\";","module.exports = __webpack_public_path__ + \"static/media/explorer-logo.516c3873.svg\";","import createHistory from 'history/createBrowserHistory';\nexport default createHistory();\n","export default class Colors\n{\n    static get textBlue () {\n        return '#062144'\n    }\n\n    static get primaryBlue() {\n        return '#2a65b0'\n    }\n\n    static get backgroundGrey() {\n        return '#f5f7fa'\n    }\n\n    static get white() {\n        return '#ffffff'\n    }\n\n    static get grey() {\n        return '#e4e9f0'\n    }\n\n    static get disabledBlue() {\n        return \"#94b2d7\"\n    }\n\n    static get disabledGrey() {\n        return '#a6a9ad'\n    }\n\n    static get coolGrey() {\n        return '#a6a9ad'\n    }\n\n    static get orderGrey() {\n        return '#bec5cf'\n    }\n\n    static get linkBlue() {\n        return '#2b99ff'\n    }\n\n    static get textGreen() {\n        return '#5fa11a'\n    }\n\n    static get successGreen() {\n        return '#7ed321'\n    }\n\n    static get lightSuccessGreen() {\n        return '#e5f6d3'\n    }\n\n    static get errorRed() {\n        return '#d0021b'\n    }\n\n    static get labelGrey() {\n        return '#6a6f75'\n    }\n\n    static get tagGrey() {\n        return '#e4e9f0'\n    }\n\n    static get textGrey() {\n        return '#4a4a4a'\n    }\n\n    static get sexyPurple() {\n        return '#462ab0;'\n    } \n\n    static get tagPurple() {\n     return '#dad4ef';\n    }\n}\n","export default class Constants\n{\n    static get boldFont () {\n        return '700'\n    }\n\n    static get mediumFont () {\n        return '500'\n    }\n\n    static get regularFont () {\n        return '400'\n    }\n\n    static get fontFamily() {\n        return 'Roboto, san-serif'\n    }\n}","import _web3 from \"web3\";\nimport EventEmitter from \"events\";\nimport currentDataState from \"./currentDataState\";\nvar web3FusionExtend = require('web3-fusion-extend')\n\n// _web3.setProvider(new _web3.providers.HttpProvider(\"http://localhost:5488\"));\n\n/**\n *   a helper api component that enables monitoring\n *   and keep of a alive of an end point\n *\n */\nexport default class web3Api {\n  /**\n   * Initiate the web3 api handler\n   */\n  constructor() {\n    this.eventEmitter = new EventEmitter();\n    this._web3 = null;\n    this.provider = null;\n    this.connectedOnce = false;\n    this.lastNodeAddress = \"\";\n    this.attempForMonitor = 0;\n    this.lastBlock = {};\n    this.walletAddress = \"\";\n    this.setupMonitor = this.setupMonitor.bind(this);\n    this.monitoringBlocks = {};\n    this.ticketPurchasing = {}\n  }\n\n  static get web3() {\n    if (!this._web3) {\n      this._web3 = new _web3();\n    }\n    return this._web3;\n  }\n\n  setNodeAddress(newNodeAddress) {\n    let httpOnly;\n\n    console.log(\"Attempting connect\");\n\n    if (this.connectedOnce && newNodeAddress !== this.lastNodeAddress) {\n      this.connectedOnce = false;\n    }\n\n    this.lastNodeAddress = newNodeAddress;\n\n    if (this.nextMonitorCall) {\n      clearTimeout(this.nextMonitorCall);\n      this.nextMonitorCall = null;\n    }\n\n    if (this.subscriptionFSNCallAddress) {\n      this.subscriptionFSNCallAddress.unsubscribe(a => {});\n      this.subscriptionFSNCallAddress = null;\n    }\n\n    if (newNodeAddress.indexOf(\"ws\") === 0) {\n      try {\n        this.provider = new _web3.providers.WebsocketProvider(newNodeAddress);\n      } catch (e) {\n        setTimeout(() => {\n          this.emit(\"connectstatus\", [\"error\"], e);\n        }, 1);\n        return;\n      }\n      httpOnly = false;\n      this.provider.on(\"connect\", () => {\n        console.log(\"blockchain connected\");\n        this.connectedOnce = true;\n        this.emit(\"connectstatus\", [\"connected\"], null);\n        this.mustGetOneBalance = true\n        this.setupMonitor();\n      });\n    } else {\n      this.provider = new _web3.providers.HttpProvider(newNodeAddress);\n      httpOnly = true;\n    }\n\n    if (!this._web3) {\n      let wb = new _web3(this.provider)\n      let w3 = web3FusionExtend.extend( wb);\n      this._web3 = w3;\n    } else {\n      this._web3.setProvider(this.provider);\n    }\n\n    if (httpOnly) {\n      // http c\n      this._web3.eth\n        .getBlockNumber()\n        .then(block => {\n          this.emit(\"connectstatus\", [\"connected\", block], null);\n          this.setupMonitor();\n        })\n        .catch(e => {\n          console.log(\"error web3api connect \", e);\n          this.emit(\"connectstatus\", [\"error\"], e);\n        });\n      return;\n    }\n\n    this.provider.on(\"error\", e => {\n      console.error(\"Blockchain WS Error\", e);\n      this.emit(\"connectstatus\", [\"error\"], e);\n    });\n\n    this.provider.on(\"end\", e => {\n      this._web3 = null;\n      console.log(\n        \"Blockchain disconnected will try to reconnect in 15 seconds\"\n      );\n      setTimeout(() => {\n        this.emit(\"connectstatus\", [\"disconnected\"], null);\n        if (this.connectedOnce === true) {\n          this.setNodeAddress(newNodeAddress);\n        }\n      }, 1);\n    });\n  }\n\n  getBlock(add, blockNumberToDisplay, lastestBlockListener) {\n    let bl = this.monitoringBlocks[blockNumberToDisplay];\n    let valid = bl ? (Object.keys(bl).length > 1 ? true : false) : false;\n\n    if (add) {\n      this.on(\"block\" + blockNumberToDisplay, lastestBlockListener);\n    } else {\n      this.removeEventListener(\n        \"block\" + blockNumberToDisplay,\n        lastestBlockListener\n      );\n    }\n    if (valid) {\n      lastestBlockListener(bl);\n      return\n    } else {\n      this.monitoringBlocks[bl] = { getting: true };\n    }\n\n    this._web3.eth\n      .getBlock(blockNumberToDisplay)\n      .then(block => {\n        this.monitoringBlocks[blockNumberToDisplay] = block;\n        this.emit(\"block\" + blockNumberToDisplay, block);\n      })\n      .catch(err => {\n        this.monitoringBlocks[blockNumberToDisplay] = {\n          error: true,\n          errObject: err\n        };\n        this.emit(\n          \"block\" + blockNumberToDisplay,\n          this.monitoringBlocks[blockNumberToDisplay]\n        );\n      });\n  }\n\n  set walletAddress(address) {\n    this._walletAddress = address;\n    this.mustGetOneBalance = true\n  }\n\n  get walletAddress() {\n    return this._walletAddress;\n  }\n\n  startFilterEngine() {\n    return ; // will be doing soon\n    //debugger\n    let dt = new Date();\n    this.filterEngineOn = dt;\n\n    this.subscriptionFSNCallAddress = this._web3.eth.subscribe(\n      \"logs\",\n      {\n        address: this._web3.fsn.consts.FSNCallAddress,\n        fromBlock: \"0x0\",\n        topics: [this._web3.fsn.consts.FSNCallAddress_Topic_BuyTicketFunc]\n      },\n      (error, result) => {\n        debugger\n        if (!error) {\n          //debugger\n          if (result.topics.length > 0) {\n            let topic = parseInt(result.topics[0].substr(2));\n            let callType = this._web3.fsn.consts.FSNCallAddress_Topic_To_Function[topic];\n            console.log(callType, result);\n            this._web3.eth.getTransaction(result.transactionHash, (err, tx) => {\n              console.log(\"tx\", err, tx);\n              if (!err) {\n                if (tx.from === currentDataState.data.signInfo.address) {\n                  console.log(\"got a ticket \");\n                }\n              }\n            });\n\n            //if ( )\n          }\n        }\n      }\n    );\n  }\n\n  setupMonitor() {\n    if (!this.subscriptionFSNCallAddress) {\n      this.startFilterEngine();\n    }\n    let walletAddress = this._walletAddress;\n    this.attempForMonitor += 1;\n    let nextMonitorCall = this.attempForMonitor;\n    console.log(\"checking connection \");\n    this._web3.eth\n      .getBlock(\"latest\")\n      .then(block => {\n        this.emit(\"connectstatus\", [\"stillgood\"], false);\n        if (this.lastBlock.number !== block.number ||  this.mustGetOneBalance) {\n          this.mustGetOneBalance = false\n          this.lastBlock = block;\n          console.log(block);\n          this.emit(\"latestBlock\", block);\n\n          if (!walletAddress || walletAddress !== this._walletAddress) {\n            return true;\n          }\n          return this._web3.fsn\n            .getAllBalances(walletAddress)\n            .then(res => {\n              console.log(\"all balances\", res);\n              return res;\n            })\n            .then(allBalances => {\n              return this._web3.fsn\n                .allTicketsByAddress(walletAddress)\n                .then(res => {\n                  console.log(\"all tickets\", res);\n                  return { allBalances, allTickets: res };\n                });\n            })\n            .then(loadsOfInfo => {\n              return this._web3.fsn.ticketPrice().then(res => {\n                return Object.assign(loadsOfInfo, { ticketPrice: res });\n              });\n            })\n            .then(loadsOfInfo => {\n              return this._web3.eth.getGasPrice().then(gasPrice => {\n                return Object.assign(loadsOfInfo, { gasPrice });\n              });\n            })\n            .then(loadsOfInfo => {\n              return this._web3.fsn\n                .totalNumberOfTickets()\n                .then(totalTickets => {\n                  return Object.assign(loadsOfInfo, {\n                    totalTickets,\n                    latestBlock: block\n                  });\n                });\n            })\n            .then(loadsOfInfo => {\n              this.emit(\"balanceInfo\", loadsOfInfo, false);\n            });\n        }\n      })\n      .then(res => {\n        setTimeout(() => {\n          this.setupMonitor();\n        }, 5 * 1000);\n      })\n      .catch(e => {\n        console.log(\"monitor error \", e);\n        if (this.attempForMonitor === nextMonitorCall) {\n          this.emit(\"connectstatus\", [\"error\"], e);\n          setTimeout(() => {\n            this.setupMonitor();\n          }, 7 * 1000);\n        }\n      });\n  }\n\n  /**\n   * Adds the @listener function to the end of the listeners array\n   * for the event named @eventName\n   * Will ensure that only one time the listener added for the event\n   *\n   * @param {string} eventName\n   * @param {function} listener\n   */\n  on(eventName, listener) {\n    this.eventEmitter.on(eventName, listener);\n  }\n\n  /**\n   * Will temove the specified @listener from @eventname list\n   *\n   * @param {string} eventName\n   * @param {function} listener\n   */\n  removeEventListener(eventName, listener) {\n    this.eventEmitter.removeListener(eventName, listener);\n  }\n  /**\n   * Will emit the event on the evetn name with the @payload\n   * and if its an error set the @error value\n   *\n   * @param {string} event\n   * @param {object} payload\n   * @param {boolean} error\n   */\n  emit(event, payload, error = false) {\n    this.eventEmitter.emit(event, payload, error);\n  }\n  /**\n   * Returns the event emitter\n   * Used for testing purpose and avoid using this during development\n   */\n  getEventEmitter() {\n    return this.eventEmitter;\n  }\n\n  buyTickets( data ) {\n    currentDataState.data.ticketPurchasing = data\n    data.purchaseStarted = true\n    data.activeTicketPurchase = true\n    data.ticketsPurchased = 0\n    data.startBlock = this.lastBlock.number\n    data.lastStatus = \"\"\n\n    if ( this.lastTicketCheckTimer ) {\n      clearTimeout( this.lastTicketCheckTimer )\n      this.lastTicketCheckTimer = null\n    }\n\n    let cb;\n\n    let timerFunc =  ()=> { \n      this.lastTicketCheckTimer = null\n      if ( data.startBlock < this.lastBlock.number ) {\n          this.purchaseOneTicket( data, cb )\n      } else {\n        data.lastStatus = \"Wait for new block...\" \n        data.lastCall = \"purchaseWaitForNewBlock\"\n        this.emit(\"purchaseWaitForNewBlock\", data )\n        this.lastTicketCheckTimer = setTimeout( timerFunc\n          , 1000  )\n      }\n    }\n    timerFunc = timerFunc.bind(this)\n\n    cb =  (err, step)=> {\n      if ( !err ) {\n        data.ticketsPurchased += 1\n      }\n      data.lastStatus = step\n      if ( data.ticketsPurchased < data.ticketQuantity ) {\n        // schedule another purchase\n        if ( !err ) {\n            data.lastStatus = \"Purchase next ticket\"\n        }\n        data.lastCall = \"purchaseAgain\"\n        this.emit(\"purchaseAgain\", data )\n        this.lastTicketCheckTimer = setTimeout( timerFunc\n         , 1000  )\n      } else {\n        data.lastStatus = \"Completed\"\n        data.activeTicketPurchase = false\n        data.lastCall = \"purchaseCompleted\"\n        this.emit(\"purchaseCompleted\", data )\n      }\n    }\n\n    cb = cb.bind(this)\n\n    this.purchaseOneTicket(data, cb )\n    data.lastCall = \"purchaseStarted\"\n    this.emit(\"purchaseStarted\", data )\n  }\n\n  purchaseOneTicket(data , cb) {\n    this._web3.fsntx.buildBuyTicketTx( {from: this._walletAddress } )\n    .then( (tx) => { \n        return this._web3.fsn.signAndTransmit( tx, currentDataState.data.signInfo.signTransaction )\n    })\n    .then( (txHash)=> {\n      data.lastStatus = \"Submitted:\" + txHash\n      data.lastCall = \"purchaseSubmitTicket\"\n      this.emit(\"purchaseSubmitTicket\", data )\n      return this.waitForTransactionToComplete( txHash).then( (r)=>{\n          if ( r.status ) {\n            cb( null, \"Ticket bought\" )\n          } else {\n            cb( new Error(\"failed to buy\"), \"Failed to buy ticket will retry\" )\n          }    \n      }).catch ( (err)=> {\n          cb( err ,  \"Error waiting for ticket to complete\") \n      })\n    })\n    .catch( (err) =>  {\n      cb(err, \"unknown\")\n    })\n  }\n\n  waitForTransactionToComplete(transID)  {\n    return this._web3.eth\n      .getTransactionReceipt(transID)\n      .then(receipt => {\n        if (!receipt) {\n          // assume not scheduled yet\n          return this.waitForTransactionToComplete(transID);\n        }\n        return receipt;\n      })\n      .catch(err => {\n        throw err;\n      });\n  }\n}\n\n\n\n// _web3.eth.filter('latest').watch(function(err,log) {\n//     _web3.fsn.buyTicket({from:_web3.fsn.coinbase},password)\n// });\n\n//fsn.assetToTimeLock({from:fsn.coinbase,to:fsn.coinbase,asset:\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",start:\"0x0\",end:\"0x1\",value:\"0x1111111\"},\"123456\")\n","import moment from \"moment\";\n\nimport web3api from \"./web3api.js\";\nlet web3interface = new web3api();\n\nvar BN = web3api.web3.utils.BN;\n\nvar datablock = {\n  web3api: web3interface,\n  BN,\n  latestBlock : {},\n  accountUnlocked: true,\n  autoBuyOn: false,\n  balanceOfFSN: 0,\n  numberOfTicketsToPurchase:  0,\n  numberOfTickets: 0,\n  autoBuy: false,\n  autoReinvestReward: false,\n  totalTickets: 0,\n  rewardsToDate: new BN(\"678\" + \"0\".repeat(18)),\n  lastUpdateTime: new Date(),\n  signInfo: {\n    address: \"0x4A5a7Aa4130e407d3708dE56db9000F059200C62\"\n  },\n  gasPrice: new BN(\"0\"),\n  //123456789012345678\n  ticketPrice: new BN(\"200\" + \"0\".repeat(18)),\n  walletBalance: new BN(\"0\"),\n  autoBuyStopTime: moment(\"20190214\", \"YYYYMMDD\"),\n  lastTicketExpires: moment(\"20190101\", \"YYYYMMDD\")\n};\n\nconsole.log(\"WE\", datablock.walletBalance.toString());\n\nexport default class currentDataState {\n  static get BN() {\n    return BN;\n  }\n  static get web3api() {\n    return web3interface;\n  }\n  static get data() {\n    return datablock;\n  }\n\n  static setBalanceInfo( balanceInfo ) {\n      console.log( \"balance info \",  balanceInfo )\n      datablock.lastUpdateTime = new Date()\n\n      if (balanceInfo.ticketPrice) {\n        datablock.ticketPrice = new BN( balanceInfo.ticketPrice )\n      }\n      if ( balanceInfo.allBalances ) {\n          datablock.walletBalance = new BN( balanceInfo.allBalances[\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"])\n      }\n      if ( balanceInfo.gasPrice ) {\n          datablock.gasPrice = new BN( balanceInfo.gasPrice )\n      }\n      if ( balanceInfo.totalTickets ) {\n          datablock.totalTickets = balanceInfo.totalTickets\n      }\n      if ( balanceInfo.allTickets ) {\n          datablock.numberOfTickets =  Object.keys(balanceInfo.allTickets).length\n          datablock.allTickets = balanceInfo.allTickets\n      }\n      if ( balanceInfo.latestBlock ) {\n          datablock.latestBlock = balanceInfo.latestBlock\n      }\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity\n} from \"react-native\";\n\nimport \"../App.css\";\nimport history from \"../history.js\";\nimport colors from \"./colors\";\nimport constants from \"./constants\";\nimport currentDataState from \"../api/currentDataState\";\nimport withSelectFiles from \"react-select-files\";\nimport \"font-awesome/css/font-awesome.min.css\";\nvar web3api = currentDataState.web3api\nvar styles;\n\n\nlet radioOn = require(\"../images/radioOn.svg\");\nlet radioOff = require(\"../images/radioOff.svg\");\nlet selectFileTitle;\n\nvar glb_selectFiles;\n\nconst SelectKeyStoreFile = withSelectFiles(\"selectFiles\")(function({\n  selectFiles\n}) {\n  glb_selectFiles = selectFiles;\n  let check;\n  if ( selectFileTitle === \"Wallet File Valid\") {\n    check = <i key =\"c11\" className=\"fa fa-check-circle\" style={{color:colors.successGreen,marginRight:4}}/>\n  }\n  return (\n    <Text key={selectFileTitle} style={styles.selectWalletFileText}>\n    {check}\n    {selectFileTitle}</Text>\n  );\n});\n\nexport default class UnlockAccount extends Component {\n  state = {\n    accessViaPrivateKey: false,\n    secureEntry: true,\n    password : ''\n  };\n\n  render() {\n    let accessViaPrivateKey = this.state.accessViaPrivateKey;\n\n    let btnStyle = styles.unlockWalletButtonDisabled;\n    let enabled = false;\n\n    if ( accessViaPrivateKey && this.state.privateKeyOK ) {\n      btnStyle = styles.unlockWalletButton;\n      enabled = true;\n    } else if ( !accessViaPrivateKey && this.state.keyData && this.state.privateKeyOK ) {\n      btnStyle = styles.unlockWalletButton;\n      enabled = true;\n    }\n\n    return (\n      <View style={styles.container}>\n        <View style={styles.innerContainer}>\n          <Text style={styles.title}>Access Your Wallet</Text>\n        </View>\n        <View style={styles.accessBox}>\n          <Text style={styles.textHowToAccess}>\n            How would you like to access your wallet?\n          </Text>\n          <View style={{ flexDirection: \"row\" }}>\n            <TouchableOpacity\n              onPress={() => {\n                this.setState({ unlockError : false, keyData : null, privateKeyOK: false, password : null,  accessViaPrivateKey: !accessViaPrivateKey });\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                <Image\n                  source={!accessViaPrivateKey ? radioOn : radioOff}\n                  resizeMode=\"contain\"\n                  style={{ width: 14, height: 14 }}\n                />\n                <Text style={styles.radioSelectionText}>\n                  Keystore / JSON File\n                </Text>\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                this.setState({ unlockError : false,  keyData : null, privateKeyOK: false, password : null,  accessViaPrivateKey: !accessViaPrivateKey });\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                <Image\n                  source={accessViaPrivateKey ? radioOn : radioOff}\n                  resizeMode=\"contain\"\n                  style={{ width: 14, height: 14 }}\n                />\n                <Text style={styles.radioSelectionText}>Private Key</Text>\n              </View>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.selectionBox}>\n            {accessViaPrivateKey\n              ? this.privateKeyRender()\n              : this.keyStoreRender()}\n          </View>\n          <TouchableOpacity\n            disabled = {!enabled}\n            onPress={() => {\n              if ( !this.state.accessViaPrivateKey ) {\n                    try {\n                      let obj = this.state.keyData\n                      let crypto = obj.Crypto || obj.crypto\n                      currentDataState.data.accountUnlocked = true\n                      currentDataState.data.signInfo = web3api._web3.eth.accounts.decrypt( {crypto , version:obj.version}, this.state.password )\n                      web3api.walletAddress = currentDataState.data.signInfo.address\n                    } catch (e) {\n                      this.setState( { unlockError : true } );\n                      return;\n                    }\n              } else {\n                currentDataState.data.accountUnlocked = true\n                currentDataState.data.signInfo = web3api._web3.eth.accounts.privateKeyToAccount(this.state.password);\n                web3api.walletAddress = currentDataState.data.signInfo.address\n              }\n              history.push('/Status')\n            }}\n          >\n            <View>\n              <Text style={btnStyle}>Unlock Wallet</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n\n  keyStoreRender() {\n    let fileSelectColor = colors.white;\n\n    let borderColor = this.state.unlockError ? colors.errorRed : colors.orderGrey;\n\n    selectFileTitle = this.state.keyData ?  \"Wallet File Valid\"  : \"Select a Wallet File...\"\n\n    return (\n      <View key=\"accek\">\n        <Text style={styles.textHowToAccess}>\n          Select your wallet file and enter your password. Please ensure that\n          the above URL is correct before loading wallets or entering passwords.\n        </Text>\n        <TouchableOpacity\n          onPress={() => {\n            glb_selectFiles({multiple: false}).then( (files) => {\n              console.log(files)\n              if ( files.length === 1 ) {\n                // read the \n                let reader = new FileReader();\n                reader.onload = (event) => {\n                  let data = event.target.result;\n                  if ( !data ) {\n                    this.setState( {error:'Unable to read file', keyData : null})\n                  }\n                  try {\n                    let obj = JSON.parse( data );\n                    console.log(obj);\n                    if ( !obj.address ) {\n                      this.setState( {error:'Invalid key store file ', keyData : null})\n                    } else {\n                      this.setState( {error: null , keyData : obj } );\n                      // console.log( web3.eth.accounts.decrypt( {crypto:obj.Crypto, version:obj.version}, \"password\") )\n                    }\n                  } catch (e) {\n                    this.setState( {error:'Unable to read file', keyData : null })\n                  }\n                  console.log(event.target.result);\n                };\n                reader.onerror = (event) => {\n                  this.setState( {error:'Unable to read file', keyData : null})\n                }\n                reader.readAsText(files[0]);\n              }\n            })\n          }}\n        >\n          <View style={[styles.selectWalletBox, {backgroundColor:fileSelectColor}]}>\n            <SelectKeyStoreFile />\n          </View>\n        </TouchableOpacity>\n        {this.state.error && (\n          <Text style={styles.errorText}>{this.state.error}</Text>\n        )}\n        <Text style={styles.labelText}>Enter Your Password</Text>\n        <View style={[styles.passwordInputBox,{borderColor}]}>\n          <TextInput\n            style={styles.passwordInput}\n            placeholder=\"Password\"\n            autoCorrect={false}\n            autoComplete=\"current-password\"\n            secureTextEntry={this.state.secureEntry}\n            placeholderTextColor={colors.orderGrey}\n            maxLength={128}\n            value = {this.state.password}\n            onChangeText={ (val)=> {\n                this.setState( { unlockError : false, password : val, privateKeyOK : val && val.length })\n            }}\n          />\n          <View\n            style={{ width: 1, height: 36, backgroundColor: colors.orderGrey }}\n          />\n          <TouchableOpacity onPress={() => {\n            this.setState( { secureEntry : !this.state.secureEntry })\n          }}>\n            <View\n              style={{\n                backgroundColor: colors.backgroundGrey,\n                width: 32,\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              {this.state.secureEntry ? (\n                <i className=\"fa fa-eye\" />\n              ) : (\n                <i className=\"fa fa-eye-slash\" />\n              )}\n            </View>\n          </TouchableOpacity>\n        </View>\n        {this.state.unlockError && (\n          <View>\n            <View style={{height:4,width:3}}/>\n            <Text style={styles.errorText}>The password provided is invalid.</Text>\n          </View>\n        )}\n      </View>\n    );\n  }\n\n  privateKeyRender() {\n    return (\n      <View key=\"prik\">\n        <Text style={styles.textHowToAccess}>\n          Enter your private keys. Please ensure that the above URL is correct\n          before loading wallets or entering passwords.\n        </Text>\n        <View style={{height:8,width : 1}}/>\n        <Text style={styles.labelText}>Enter Your Private Key</Text>\n        <View style={styles.passwordInputBox}>\n          <TextInput\n            style={styles.passwordInput}\n            placeholder=\"Private Key - starts with 0x\"\n            autoCorrect={false}\n            autoComplete=\"current-password\"\n            secureTextEntry={this.state.secureEntry}\n            placeholderTextColor={colors.orderGrey}\n            maxLength={66}\n            value={this.state.password}\n            onChangeText={(text)=>{\n              if ( text.length < 66 ) {\n                this.setState( { privateKeyOK : false , password : text })\n              } else {\n                this.setState( { privateKeyOK : \n                  web3api.web3.utils.isHexStrict( text )\n                  , password : text })\n              }\n            }}\n          />\n          <View\n            style={{ width: 1, height: 36, backgroundColor: colors.orderGrey }}\n          />\n          <TouchableOpacity onPress={() => {\n            this.setState( { secureEntry : !this.state.secureEntry })\n          }}>\n            <View\n              style={{\n                backgroundColor: colors.backgroundGrey,\n                width: 32,\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              {this.state.secureEntry ? (\n                <i class=\"fa fa-eye\" />\n              ) : (\n                <i class=\"fa fa-eye-slash\" />\n              )}\n            </View>\n          </TouchableOpacity>\n        </View>\n        <View style={{height:32,width : 1}}/>\n      </View>\n    );\n  }\n}\n\nstyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  innerContainer: {\n    width: 620,\n    flexGrow: 1,\n    flex: 1,\n    flexShrink: 0,\n    justifyContent: \"center\",\n    alignItems: \"flex-start\"\n  },\n  title: {\n    fontSize: 24,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont,\n    color: colors.textBlue,\n    marginTop: 35,\n    alignSelf: \"flex-start\",\n    marginBottom: 16\n  },\n  textHowToAccess: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue,\n    alignSelf: \"flex-start\",\n    marginBottom: 16\n  },\n  radioSelectionText: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue,\n    marginRight: 16,\n    marginLeft: 8\n  },\n  accessBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    alignItems: \"flex-start\",\n    width: 620,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\",\n    paddingTop: 24,\n    paddingBottom: 24,\n    paddingLeft: 32,\n    paddingRight: 32\n  },\n  selectWalletBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    width: 516,\n    height: 48,\n    overflow: \"visible\",\n    //boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\",\n    flex: 1,\n    flexBasis: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 16\n  },\n  passwordInputBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    height: 36,\n    width: 512,\n    marginTop: 4\n  },\n  passwordInput: {\n    fontSize: 13,\n    color: colors.textBlue,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    width: 482,\n    paddingLeft: 6\n  },\n  selectionBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: colors.backgroundGrey,\n    borderWidth: 1,\n    width: 556,\n    alignItems: \"flex-start\",\n    paddingTop: 16,\n    paddingBottom: 16,\n    paddingLeft: 20,\n    paddingRight: 20,\n    marginTop: 20\n  },\n  labelText: {\n    fontSize: 12,\n    color: colors.labelGrey,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont\n  },\n  selectWalletFileText: {\n    fontSize: 16,\n    color: colors.textBlue,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    textAlign: \"center\"\n  },\n  errorText : {\n    fontSize: 12,\n    color: colors.errorRed,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    marginBottom : 8\n  },\n  unlockWalletButtonDisabled : {\n    fontSize: 16,\n    width: 556,\n    borderRadius: 3,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.white,\n    backgroundColor: colors.disabledBlue,\n    textAlign: \"center\",\n    padding: 12,\n    marginTop: 20\n  },\n  unlockWalletButton: {\n    fontSize: 16,\n    width: 556,\n    borderRadius: 3,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.white,\n    backgroundColor: colors.linkBlue,\n    textAlign: \"center\",\n    padding: 12,\n    marginTop: 20\n  }\n});\n","import React, { Component } from \"react\";\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from \"react-native\";\nimport colors from \"../colors.js\";\nimport constants from \"../constants.js\";\n\nvar styles;\n\nvar checkOn = require(\"../../images/checkboxOn.svg\");\nvar checkOff = require(\"../../images/check_off.svg\");\n\nexport default class CheckBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textWidth: this.props.textWidth || 620\n    };\n  }\n\n  render() {\n    return (\n      <View style={[styles.container, { width: this.state.textWidth , opacity : this.props.disabled ? .40 : 1}]}>\n        <View style={styles.containerInner}>\n          <TouchableOpacity\n            disabled={this.props.disabled}\n            onPress={() => {\n              this.props.onPress(!this.props.on);\n            }}\n          >\n            <Image\n              source={this.props.on ? checkOn : checkOff}\n              style={styles.checkOn}\n            />\n          </TouchableOpacity>\n          <View>\n            <Text style={styles.questionText}>{this.props.text}</Text>\n\n            {this.props.subText && (\n              <Text\n                style={[\n                  styles.questionSubText,\n                  { width: this.state.textWidth }\n                ]}\n              >\n                {this.props.subText}\n              </Text>\n            )}\n            {this.props.children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nstyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"transparent\",\n    marginTop: 10\n  },\n  containerInner: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"transparent\"\n  },\n  checkOn: {\n    marginRight: 15,\n    width: 20,\n    height: 20\n  },\n  questionText: {\n    fontSize: 14,\n    color: colors.textBlue,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    marginBottom: 6\n  },\n  questionSubText: {\n    fontSize: 14,\n    color: colors.labelGrey,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    marginBottom: 16\n  }\n});\n","import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Clipboard,\n  TextInput,\n  TouchableOpacity\n} from \"react-native\";\n\nimport \"../App.css\";\nimport history from \"../history.js\";\nimport CheckBox from \"./Input/CheckBox.js\";\nimport colors from \"./colors\";\nimport constants from \"./constants\";\nimport utils from \"../utils\";\nimport currentDataState from \"../api/currentDataState\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nvar BN = currentDataState.data.BN;\n\nvar styles;\n\nclass Status extends Component {\n  // this is what i use for production\n  state = {\n    ticketQuantity: undefined,\n    daysQuantity : \"30\",\n    totalCost: 0,\n    daysError : false , \n    totalCostString: \"0\",\n    autoBuyTickets: false,\n    reinvestReward: false,\n    autoBuyStopDate: false,\n    totalPrice: new BN(0),\n    error: false,\n    repaintKey : 0,\n    date: new Date(new Date().getTime() + 1000 * 60 * 60 * 24)\n  };\n\n  constructor(props) {\n    super();\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.balanceListener = this.balanceListener.bind(this)\n  }\n\n  totalStake(data) {\n    return data.numberOfTickets * data.ticketPrice;\n  }\n\n  balanceListener( balanceInfo ) {\n    currentDataState.setBalanceInfo( balanceInfo )\n    this.calcDisplay(currentDataState.data, this.state.ticketQuantity );\n    this.setState( { repaintKey : this.state.repaintKey + 1 })\n  }\n\n  componentDidMount() {\n    currentDataState.web3api.on(\"balanceInfo\", this.balanceListener);\n  }\n\n  componentWillUnmount() {\n    currentDataState.web3api.removeEventListener(\"balanceInfo\", this.balanceListener);\n  }\n\n  render() {\n    let data = currentDataState.data;\n\n    let btnStyle = styles.purchaseTicketButtonDisabled;\n    let enabled = false;\n    let purchaseText = \"Purchase Tickets\";\n\n    if ( data.accountUnlocked ) {\n      data.web3api.walletAddress = data.signInfo.address;\n    }\n\n    if (this.state.ticketQuantity > 0) {\n      btnStyle = styles.purchaseTicketButton;\n      enabled = true;\n      if (this.state.ticketQuantity === 1) {\n        purchaseText = \"Purchase 1 Ticket\";\n      } else {\n        purchaseText = `Purchase ${this.state.ticketQuantity} Tickets`;\n      }\n    }\n\n    let stakeTextColor;\n\n    if (this.state.error) {\n      enabled = false;\n      btnStyle = styles.purchaseTicketButtonDisabled;\n      stakeTextColor = colors.errorRed;\n    } else {\n      stakeTextColor = colors.textBlue;\n    }\n\n    let daysTextcolor \n    if ( this.state.daysError ) {\n      enabled = false;\n      btnStyle = styles.purchaseTicketButtonDisabled;\n      daysTextcolor = colors.errorRed;\n    } else {\n      daysTextcolor = colors.textBlue\n    }\n\n    let displayPercent =\n      data.totalTickets > 0\n        ? utils.displayPercent(data.numberOfTickets / data.totalTickets)\n        : \"0.00\";\n\n    if (displayPercent === \"0.00\" && data.numberOfTickets > 0) {\n      displayPercent = \"< 0.01\";\n    }\n\n    if (!data.accountUnlocked) {\n      return (\n        <View style={{ padding: 15 }}>\n          <Text style={styles.Auto_Buy_Stake_Monit}>\n            You Account Must be unlocked to use this screen.\n          </Text>\n          <TouchableOpacity\n            style={{ width: 100 }}\n            onPress={() => {\n              history.push(\"/UnlockAccount\");\n            }}\n          >\n            <Text style={styles.activeButton}>Select An Account</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n\n    let borderColor = this.state.error ? colors.errorRed : colors.orderGrey;\n\n    return (\n      <View style={{ marginLeft: 30, backgroundColor: colors.backgroundGrey }}>\n        <View style={styles.container}>\n          <Text style={styles.Auto_Buy_Stake_Monit}>\n            Purchase Staking Tickets\n          </Text>\n          <View style={styles.walletBox}>\n            <Text style={styles.walletLabel}>Wallet Address</Text>\n            <TouchableOpacity\n              onPress={() => {\n                Clipboard.setString(data.signInfo.address);\n              }}\n            >\n              <Text style={styles.walletLabelAddress}>\n                {data.signInfo.address}\n                <i style={{ marginLeft: 4 }} className=\"fa fa-copy\" />\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.stakeDetailBox}>\n            <Text style={styles.infoText}>\n              Earn rewards by purchasing staking tickets. You will earn a reward\n              of 2.5 FSN per selected ticket. If your ticket is not selected,\n              your FSN will be returned when the ticket expires (30 days after\n              purchase). NOTE: Only one ticket at a time can be purchased per\n              block for an address.\n              <TouchableOpacity\n                onPress={() => {\n                  //TODO: once article is up point to it\n                  window.open(\"https://fusion.org\");\n                }}\n              >\n                <Text style={[styles.infoTextLink, { marginLeft: 4 }]}>\n                  Learn More\n                </Text>\n              </TouchableOpacity>\n            </Text>\n            <View style={{ height: 20 }} />\n            <View style={styles.orderBorder} />\n            <View\n              style={[\n                styles.fundsDetailRow,\n                { backgroundColor: colors.backgroundGrey }\n              ]}\n            >\n              <Text style={styles.labelLineText}>Funds Available</Text>\n              <View>\n                <Text style={styles.statText}>\n                  {utils.formatWei(data.walletBalance)}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>Ticket Price</Text>\n              <View>\n                <Text style={styles.valText}>\n                  {utils.formatWei(data.ticketPrice)}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>Gas Price</Text>\n              <View>\n                <Text style={styles.valText}>\n                  {utils.formatWei(data.gasPrice)}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={[styles.stakeDetailRow, { height: 78 }]}>\n              <Text style={styles.labelLineText}>Ticket Quantity</Text>\n              <View>\n                <View style={{ flex: 1, flexDirection: \"row\" }}>\n                  {this.state.error && (\n                    <View style={styles.errorForFundsBox}>\n                      <Text style={styles.errorForFunds}>\n                        You don't have enough FSN\n                      </Text>\n                      <i\n                        style={{\n                          position: \"relative\",\n                          left: -1,\n                          color: colors.errorRed\n                        }}\n                        className=\"fa fa-caret-right\"\n                      />\n                    </View>\n                  )}\n                  <TextInput\n                    style={[\n                      styles.ticketQuantityInput,\n                      { borderColor: borderColor }\n                    ]}\n                    placeholder=\"0\"\n                    autoCorrect={false}\n                    placeholderTextColor={colors.orderGrey}\n                    maxLength={10}\n                    value={\"\" + (this.state.ticketQuantity || \"\")}\n                    onChangeText={val => {\n                      this.calcDisplay(data, val);\n                    }}\n                  />\n                </View>\n                <TouchableOpacity\n                  onPress={() => {\n                    let valGas = new BN(data.gasPrice);\n                    let valTik = new BN(data.ticketPrice);\n                    valTik = valTik.add(valGas);\n                    let num = data.walletBalance.div(valTik);\n                    this.calcDisplay(data, num.toNumber());\n                  }}\n                >\n                  <Text style={styles.maxIt}>Max Quantity</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={[styles.stakeDetailRow, { height: 78 }]}>\n              <Text style={styles.labelLineText}>Ticket Days</Text>\n              <View>\n                <View style={{ flex: 1, flexDirection: \"row\" }}>\n                  <TextInput\n                    style={[\n                      styles.ticketQuantityInput,\n                      { color : daysTextcolor,\n                        borderColor: this.state.daysError ? colors.errorRed : colors.orderGrey }\n                    ]}\n                    placeholder=\"30\"\n                    autoCorrect={false}\n                    placeholderTextColor={colors.orderGrey}\n                    maxLength={10}\n                    value={\"\" + (this.state.daysQuantity || \"\")}\n                    onChangeText={val => {\n                      let days = parseInt( val )\n                      if ( isNaN(days) || days < 1 || days > 100 ) {\n                        this.setState(  { daysQuantity : val, daysError : true })\n                      } else {\n                        this.setState( { daysQuantity : days, daysError  : false  } )\n                      }\n                    }}\n                  />\n                </View>\n                <Text style={[styles.maxIt,{color : colors.orderGrey}]}>(1-100)</Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={{ height: 16, width: 1 }} />\n            <View style={[styles.stakeDetailRow, { height: 30 }]}>\n              <Text style={styles.labelLineText}>Total Cost</Text>\n              <View>\n                <Text style={styles.costCalcLineText}>\n                  Ticket Cost {this.state.ticketQuantity || \"0\"} x{\" \"}\n                  {utils.formatWei(data.ticketPrice)} FSN\n                </Text>\n              </View>\n            </View>\n            <View>\n              <Text style={styles.costCalcLineText}>\n                Gas Cost {this.state.ticketQuantity || \"0\"} x{\" \"}\n                {utils.formatWei(data.gasPrice)} FSN\n              </Text>\n              <View style={{ height: 16, width: 1 }} />\n              <View>\n                <Text style={[styles.stakeTextVal, { color: stakeTextColor }]}>\n                  {this.state.totalCostString}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={{ height: 20, width: 1 }} />\n            <View style={styles.orderBorder} />\n            <View style={{ height: 16, width: 1 }} />\n            <CheckBox\n              textWidth={512}\n              onPress={() => {\n                let obj = { autoBuyTickets: !this.state.autoBuyTickets }\n                if ( !obj.autoBuyTickets ) {\n                    obj.autoBuyStopDate = false\n                }\n                this.setState(obj);\n              }}\n              on={this.state.autoBuyTickets}\n              text=\"Auto Buy Tickets\"\n              subText=\"Tickets will be repurchased when they expire or when they win rewards\"\n            />\n            <CheckBox\n              textWidth={512}\n              onPress={() => {\n                this.setState({ reinvestReward: !this.state.reinvestReward });\n              }}\n              on={this.state.reinvestReward}\n              text=\"Reinvest Reward\"\n              subText=\"Rewards that are won will be reinvested to purchase more tickets when enough rewards are collected.\"\n            />\n            <CheckBox\n              textWidth={512}\n              disabled={!this.state.autoBuyTickets}\n              onPress={() => {\n                this.setState({ autoBuyStopDate: !this.state.autoBuyStopDate });\n              }}\n              on={this.state.autoBuyStopDate}\n              text=\"Auto Buy Stop Date\"\n              subText=\"Auto Buy will stop on desired date\"\n            >\n              {this.state.autoBuyStopDate && (\n                <DatePicker\n                  onChange={this.onChangeDate}\n                  selected={this.state.date}\n                  minDate={new Date(new Date().getTime() + 1000 * 60 * 60 * 24)}\n                  showTimeSelect\n                  dateFormat=\"Pp\"\n                />\n              )}\n            </CheckBox>\n            <TouchableOpacity disabled={!enabled} onPress={() => {\n                this.purchaseTicket()\n            }}>\n              <View>\n                <Text style={btnStyle}>{purchaseText}</Text>\n              </View>\n            </TouchableOpacity>\n            <View style={{ height: 16, width: 1 }} />\n            <Text style={styles.footerText}>\n              Funds used to purchase tickets will be sent back after tickets\n              have expired. Tickets expire 30 days after date of purchase. Your\n              browser window must remain open to continue autobuy.\n            </Text>\n          </View>\n        </View>\n        {/* {this.state.purchasingTicket && (\n            <View style={{position:'absolute', backgroundColor : 'rgba(0,0,0,.3)' , top:0, left : 0, width : '100%', height : '100%'}}>\n              <Text style={{fontSize:30}}> Buying Tickets </Text>\n            </View>\n        )} */}\n      </View>\n    );\n  }\n\n  purchaseTicket() {\n    currentDataState.web3api.buyTickets( this.state )\n    this.setState({purchasingTicket:true})\n    history.push(\"/Status\");\n  }\n\n  onChangeDate(date) {\n    let dt = new Date(new Date().getTime() + 1000 * 60 * 60 * 24);\n    if (date.getTime() < dt.getTime()) {\n      date = dt;\n    }\n    this.setState({ date });\n  }\n\n  calcDisplay(data, val) {\n    let x = parseInt(val);\n    if (!x && (x !== 0 || x < 0)) {\n      x = 0;\n    }\n    let valGas = new BN(x);\n    valGas = valGas.mul(data.gasPrice);\n    let valTik = new BN(x);\n    valTik = valTik.mul(data.ticketPrice);\n    valGas = valGas.add(valTik);\n    let totalCostString = utils.formatWei(valGas.toString());\n    this.setState({\n      ticketQuantity: x,\n      totalPrice: valGas,\n      totalCostString,\n      error: valGas.gt(data.walletBalance)\n    });\n  }\n}\n\nstyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginTop: 15,\n    marginLeft: 15,\n    backgroundColor: colors.backgroundGrey\n  },\n  sectionTitle: {\n    fontSize: 24,\n    lineHeight: 32,\n    fontFamily: \"Roboto, san-serif\",\n    fontWeight: constants.boldFont,\n    color: colors.textBlue\n  },\n  sectionNumberTitle: {\n    fontSize: 18,\n    color: \"rgb(22,22,22)\",\n    marginTop: 30,\n    marginBottom: 10\n  },\n  info: {\n    fontSize: 16,\n    color: \"rgba(22,22,22, .5)\"\n  },\n  imageUploadSection: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"transparent\",\n    marginLeft: 35,\n    marginTop: 15\n  },\n  actionButtonDisabled: {\n    backgroundColor: \"#20C0FF\",\n    height: 35,\n    width: 130,\n    opacity: 0.5,\n    boxShadow: \"5px 10px 18px #888888\"\n  },\n  actionButtonTextDisabled: {\n    color: \"#7f7f7f\",\n    fontSize: 19,\n    marginTop: 7,\n    textAlign: \"center\"\n  },\n  actionButton: {\n    backgroundColor: \"#20C0FF\",\n    height: 35,\n    width: 130,\n    boxShadow: \"5px 10px 18px #888888\"\n  },\n  actionButtonText: {\n    color: \"#FFFFFF\",\n    fontSize: 19,\n    marginTop: 7,\n    textAlign: \"center\"\n  },\n  label: {\n    fontSize: 14,\n    color: \"rgba(22,22,22,.5)\",\n    width: 160,\n    marginBottom: 5\n  },\n  balanceBox: {\n    width: 160,\n    marginBottom: 5,\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    flexBasis: \"100%\"\n  },\n  Auto_Buy_Stake_Monit: {\n    fontSize: 24,\n    lineHeight: 32,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont,\n    color: colors.textBlue,\n    marginBottom: 4\n  },\n  lastUpdated: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.labelGrey\n  },\n  labelLineText: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.labelGrey\n  },\n  simpleLineText: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue\n  },\n  activeButton: {\n    color: colors.textGreen,\n    fontSize: 14,\n    backgroundColor: colors.lightSuccessGreen,\n    fontFamily: constants.fontFamily,\n    padding: 8,\n    fontWeight: constants.regularFont\n  },\n  stopAutoBuyButton: {\n    padding: 8,\n    fontSize: 14,\n    color: colors.errorRed,\n    fontWeight: constants.regularFont\n  },\n  startAutoBuyButton: {\n    color: colors.textBlue,\n    padding: 8,\n    fontSize: 14,\n    fontWeight: constants.regularFont\n  },\n  inActiveButton: {\n    color: colors.textBlue,\n    fontSize: 14,\n    backgroundColor: colors.backgroundGrey,\n    fontFamily: constants.fontFamily,\n    padding: 8,\n    fontWeight: constants.regularFont\n  },\n  stakingMonitorActive: {\n    fontSize: 32,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 8,\n    marginBottom: 4\n  },\n  stakingMonitorActivePercent: {\n    fontSize: 32,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 4,\n    marginBottom: 4,\n    marginLeft: 1\n  },\n  largeMetricBox: {\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 20,\n    width: 620\n  },\n  stakeTextFSN: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.regularFont,\n    marginLeft: 4\n  },\n  viewTicketDetails: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.regularFont,\n    color: colors.linkBlue\n  },\n  maxIt: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.mediumFont,\n    color: colors.linkBlue,\n    alignSelf: \"flex-end\"\n  },\n  stakeTextVal: {\n    fontSize: 18,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont,\n    color: colors.textBlue,\n    alignSelf: \"flex-end\"\n  },\n  valText: {\n    fontSize: 18,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    color: colors.textBlue,\n    alignSelf: \"flex-end\"\n  },\n  dateValue: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue\n  },\n  statText: {\n    fontSize: 18,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    color: colors.textBlue\n  },\n  infoText: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    color: colors.textGrey,\n    lineHeight: \"1.71\"\n  },\n  infoTextLink: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    color: colors.linkBlue\n  },\n  orderBorder: {\n    backgroundColor: colors.orderGrey,\n    height: 1,\n    width: 556\n  },\n  rewardsGivenBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: 200,\n    height: 132,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  stakeDetailBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    width: 620,\n    padding: 32,\n    flex: 1,\n    flexBasis: \"100%\",\n    marginTop: 24,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  rewardHolderView: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: 388,\n    height: 132,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  rwcTextViewbox: {\n    marginBottom: 16\n  },\n  rewardHolderViewText: {\n    width: 227,\n    marginLeft: 32,\n    flex: 1,\n    flexBasis: \"100%\",\n    justifyContent: \"center\"\n  },\n  rewardHolderViewGradient: {\n    backgroundImage:\n      \"linear-gradient(to right, #ffffff, rgba(255, 255, 255, 0))\",\n    width: 40,\n    marginLeft: 32,\n    position: \"absolute\",\n    height: 130,\n    left: 138\n  },\n  rewardGivenBoxTextHolder: {\n    marginLeft: 32,\n    paddingTop: 8\n  },\n  textNumberOfRewardsGivenType: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.regularFont,\n    marginBottom: 10,\n    marginLeft: 4\n  },\n  textNumberOfRewardsGivenTypeSmaller: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.regularFont,\n    marginBottom: 6,\n    marginLeft: 4\n  },\n  textNumberOfRewardsGiven: {\n    fontSize: 48,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 8\n  },\n  textNumberOfRewardsGivenSmaller: {\n    fontSize: 36,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 8\n  },\n  rewardsGivenBoxRewardCount: {\n    flexDirection: \"row\",\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-start\",\n    marginTop: -2\n  },\n  lineGraph: {\n    width: 216,\n    height: 126,\n    position: \"absolute\",\n    left: 170,\n    overflow: \"visible\"\n  },\n  walletBox: {\n    backgroundColor: colors.tagGrey,\n    borderRadius: 3,\n    width: 620,\n    height: 48,\n    marginTop: 20,\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  walletLabel: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    marginLeft: 32,\n    color: colors.labelGrey\n  },\n  walletLabelAddress: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    marginRight: 32,\n    color: colors.textBlue\n  },\n  stakeDetailText: {\n    color: colors.textBlue,\n    fontSize: 18,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont\n  },\n  stakesPurchaseTicketButtton: {\n    borderRadius: 3,\n    padding: 8,\n    backgroundColor: colors.primaryBlue,\n    color: colors.white,\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont\n  },\n  stakesStopAutoBuy: {\n    borderColor: colors.backgroundGrey,\n    borderWidth: 1,\n    borderRadius: 3,\n    padding: 8,\n    backgroundColor: colors.white\n  },\n  stakesStopAutoBuyText: {\n    backgroundColor: colors.white,\n    color: colors.errorRed,\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont\n  },\n  stakeDetailRow: {\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: 56\n  },\n  fundsDetailRow: {\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: 44\n  },\n  errorForFunds: {\n    fontSize: 12,\n    fontWeight: constants.mediumFont,\n    fontFamily: constants.fontFamily,\n    color: colors.white,\n    backgroundColor: colors.errorRed,\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 8,\n    paddingRight: 8,\n    borderRadius: 3,\n    height: 24,\n    alignSelf: \"center\"\n  },\n  errorForFundsBox: {\n    flex: 1,\n    flexDirection: \"row\",\n    marginRight: 6,\n    alignItems: \"center\"\n  },\n  ticketQuantityInput: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    fontSize: 14,\n    fontFamily: constants.mediumFont,\n    color: colors.labelGrey,\n    height: 36,\n    width: 110,\n    marginTop: 6,\n    marginBottom: 6,\n    alignSelf: \"flex-end\",\n    textAlign: \"right\",\n    paddingRight: 4,\n    paddingLeft: 4,\n    outline: \"none\"\n  },\n  costCalcLineText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.mediumFont,\n    color: colors.labelGrey,\n    alignSelf: \"flex-end\"\n  },\n  purchaseTicketButtonDisabled: {\n    fontSize: 16,\n    width: 556,\n    borderRadius: 3,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.white,\n    backgroundColor: colors.disabledBlue,\n    textAlign: \"center\",\n    padding: 12,\n    marginTop: 20\n  },\n  purchaseTicketButton: {\n    fontSize: 16,\n    width: 556,\n    borderRadius: 3,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.white,\n    backgroundColor: colors.linkBlue,\n    textAlign: \"center\",\n    padding: 12,\n    marginTop: 20\n  },\n  footerText: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    color: colors.disabledGrey\n  }\n});\n\nexport default Status;\n","export default class Utils {\n  // https://stackoverflow.com/questions/10599933/convert-long-number-into-abbreviated-string-in-javascript-with-a-special-shortn\n  static displayNumber2(value) {\n    var newValue = value;\n    if (value >= 1000) {\n      let suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n      let suffixNum = Math.floor((\"\" + value).length / 3);\n      let shortValue = \"\";\n      for (let precision = 2; precision >= 1; precision--) {\n        shortValue = parseFloat(\n          (suffixNum !== 0\n            ? value / Math.pow(1000, suffixNum)\n            : value\n          ).toPrecision(precision)\n        );\n        var dotLessShortValue = (shortValue + \"\").replace(\n          /[^a-zA-Z 0-9]+/g,\n          \"\"\n        );\n        if (dotLessShortValue.length <= 2) {\n          break;\n        }\n      }\n      if (shortValue % 1 !== 0) shortValue = shortValue.toFixed(2);\n      newValue = shortValue + suffixes[suffixNum];\n    }\n    return newValue;\n  }\n\n  static insert(str, index, value) {\n    return str.substr(0, index) + value + str.substr(index);\n  }\n\n  static formatWei( val ) {\n    if ( typeof val === 'object') {\n      val = val.toString()\n    }\n    let len = val.length;\n    if ( len < 18 ) {\n      val = \"0\".repeat(18-len) + val\n      len = 18\n    }\n    if ( len === 18 ) {\n      val = \".\" + val\n    } else {\n      val = Utils.insert( val, val.length - 18, \".\" )\n    }\n\n    val = Utils.removeZeros( val, true, true , true )\n\n    if ( val.charAt(0) === '.') {\n      return \"0\" + val;\n    }\n    if ( val.length === 0 ) {\n      return 0\n    }\n    return val;\n  }\n\n  static removeZeros(val, trailing = true, leading = false, decimal = true) {\n    var regEx1 = /^[0]+/;\n    var regEx2 = /[0]+$/;\n    var regEx3 = /[.]$/;\n\n    var before = \"\";\n    var after = \"\";\n\n    before = val;\n\n    if (leading) {\n      after = before.replace(regEx1, \"\"); // Remove leading 0's\n    } else {\n        after = before;\n    }\n    if (trailing) {\n      if (after.indexOf(\".\") > -1) {\n        after = after.replace(regEx2, \"\"); // Remove trailing 0's\n      }\n    }\n    if (decimal) {\n      after = after.replace(regEx3, \"\"); // Remove trailing decimal\n    }\n    return after;\n  }\n\n  static displayNumber(value, precision = 2, trimTrailingZeros = false) {\n    var units = \" K M G T P E Z Y\".split(\" \");\n\n    if (value < 0) {\n      return \"-\" + Utils.displayNumber(Math.abs(value));\n    }\n\n    if (value < 1) {\n      return value + units[0];\n    }\n\n    var power = Math.min(\n      Math.floor(Math.log(value) / Math.log(1000)),\n      units.length - 1\n    );\n\n    var val = \"\" + (value / Math.pow(1000, power)).toFixed(precision);\n\n    if (trimTrailingZeros) {\n        val = Utils.removeZeros( val );\n    }\n\n    return val + units[power];\n  }\n\n  static displayPercent(a) {\n    a = a * 100;\n    return a.toFixed(2);\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  Clipboard,\n  TouchableOpacity\n} from \"react-native\";\n\nimport \"../App.css\";\nimport history from \"../history.js\";\nimport colors from \"./colors\";\nimport constants from \"./constants\";\nimport utils from \"../utils\";\nimport moment from \"moment\";\nimport currentDataState from \"../api/currentDataState\";\nimport BlockDisplayer from \"./BlockDisplayer\";\nvar BN = currentDataState.BN;\n\nvar lineGraph = require(\"../images/lineGraph.svg\");\nvar closebutton = require(\"../images/times.svg\");\n\nvar styles;\n\nclass Status extends Component {\n  // this is what i use for production\n  state = { paintKey: 0, ticketDisplayOn: false, lastTicketStatus : \"\" };\n\n  constructor(props) {\n    super();\n    this.balanceListener = this.balanceListener.bind(this);\n    this.purchaseTikStatus = this.purchaseTikStatus.bind(this)\n  }\n\n  totalStake(data) {\n    return data.ticketPrice.mul(new BN(data.numberOfTickets));\n  }\n\n  balanceListener(balanceInfo) {\n    currentDataState.setBalanceInfo(balanceInfo);\n    this.setState({ paintKey: this.state.paintKey + 1 });\n  }\n\n  purchaseTikStatus(data) {\n    this.setState( { lastTicketStatus : data.lastCall })\n  }\n\n  componentDidMount() {\n    currentDataState.web3api.on(\"balanceInfo\", this.balanceListener);\n    currentDataState.web3api.on(\"purchaseAgain\", this.purchaseTikStatus )\n    currentDataState.web3api.on(\"purchaseCompleted\", this.purchaseTikStatus )\n    currentDataState.web3api.on(\"purchaseStarted\", this.purchaseTikStatus )\n    currentDataState.web3api.on(\"purchaseWaitForNewBlock\", this.purchaseTikStatus )\n    currentDataState.web3api.on(\"purchaseSubmitTicket\", this.purchaseTikStatus )\n  }\n\n  componentWillUnmount() {\n    currentDataState.web3api.removeEventListener(\n      \"balanceInfo\",\n      this.balanceListener\n    );\n    currentDataState.web3api.removeEventListener(\"purchaseAgain\", this.purchaseTikStatus )\n    currentDataState.web3api.removeEventListener(\"purchaseCompleted\", this.purchaseTikStatus )\n    currentDataState.web3api.removeEventListener(\"purchaseStarted\", this.purchaseTikStatus )\n    currentDataState.web3api.removeEventListener(\"purchaseWaitForNewBlock\", this.purchaseTikStatus )\n    currentDataState.web3api.removeEventListener(\"purchaseSubmitTicket\", this.purchaseTikStatus )\n  }\n\n  render() {\n    let data = currentDataState.data;\n\n    if (!BN) {\n      BN = currentDataState.BN;\n    }\n\n    if (data.accountUnlocked) {\n      data.web3api.walletAddress = data.signInfo.address;\n    }\n\n    let rewardNumber = utils.formatWei(data.rewardsToDate);\n    let ticketText = data.totalTickets === 1 ? \"Ticket\" : \"Tickets\";\n    let rewardStyle;\n    let textNumberOfRewardsGivenType;\n    if (rewardNumber.length < 4) {\n      rewardStyle = styles.textNumberOfRewardsGiven;\n      textNumberOfRewardsGivenType = styles.textNumberOfRewardsGivenType;\n    } else {\n      textNumberOfRewardsGivenType = styles.textNumberOfRewardsGivenTypeSmaller;\n      rewardStyle = styles.textNumberOfRewardsGivenSmaller;\n    }\n\n    let displayPercent =\n      data.totalTickets > 0\n        ? utils.displayPercent(data.numberOfTickets / data.totalTickets)\n        : \"0.00\";\n\n    if (displayPercent === \"0.00\" && data.numberOfTickets > 0) {\n      displayPercent = \"< 0.01\";\n    }\n\n    let dt = new moment(data.lastUpdateTime);\n\n    let ticketPurchaseStatus\n    let ticketStatus = currentDataState.data.ticketPurchasing\n    if ( ticketStatus === undefined ) {\n      ticketStatus = { activeTicketPurchase : false }\n    }\n    let msg = ticketStatus.lastTicketStatus\n \n\n    if ( ticketStatus.activeTicketPurchase ) {\n        ticketPurchaseStatus = ( <View key=\"ticketPurchaseView\">\n            <Text>{`${ticketStatus.ticketsPurchased} of ${ticketStatus.ticketQuantity}`}</Text>\n            <Text>{msg}</Text>\n        </View>)\n    }\n\n\n    let dtDisplay = dt.toString(); // dt.format(\"YYYY-MM-DD HH:mm:ss.SSS z\");\n\n    if (!data.accountUnlocked) {\n      return (\n        <View style={{ padding: 15 }}>\n          <Text style={styles.Auto_Buy_Stake_Monit}>\n            You Account Must be unlocked to use this screen.\n          </Text>\n          <TouchableOpacity\n            style={{ width: 100 }}\n            onPress={() => {\n              history.push(\"/UnlockAccount\");\n            }}\n          >\n            <Text style={styles.activeButton}>Select An Account</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n\n    if (this.state.ticketDisplayOn) {\n      let tickets = Object.keys(data.allTickets ? data.allTickets : {});\n\n      let ticketViews = [];\n\n      for (let ticket of tickets) {\n        let t = data.allTickets[ticket];\n        let dt = moment(new Date(t.ExpireTime*1000));\n        let txt = dt.format(\"L LT z\");\n        ticketViews.push(\n          <View key={\"\" + t.ExpireTime}>\n            <View style={styles.ticketDetailRow}>\n              <Text style={[styles.labelLineText, { width: 120 }]}>{txt}</Text>\n              <Text\n                style={[\n                  styles.labelLineText,\n                  { textAlign: \"center\", width: 60 }\n                ]}\n              >\n                {utils.formatWei(data.ticketPrice)}\n              </Text>\n              <Text\n                style={[\n                  styles.labelLineText,\n                  { textAlign: \"right\", width: 366, fontSize: 10 }\n                ]}\n              >\n                {t.ID}\n              </Text>\n            </View>\n            <View style={styles.orderBorder} />\n          </View>\n        );\n      }\n\n      return (\n        <View style={styles.container}>\n          <View>\n            <View style={styles.stakeDetailBox}>\n              <View style={styles.stakeDetailRow}>\n                <Text style={styles.stakeDetailText}>\n                  Ticket Details\n                  <Text style={styles.dateValue}>\n                    {\"  \" +\n                      data.numberOfTickets +\n                      (data.numberOfTickets === 1 ? \" Ticket\" : \" Tickets\")}\n                  </Text>\n                </Text>\n              </View>\n              <View style={styles.ticketDetailRow}>\n                <Text style={[styles.labelLineText, { width: 120 }]}>\n                  Expiration Time\n                </Text>\n                <Text style={[styles.labelLineText, { width: 80 }]}>\n                  Ticket Price\n                </Text>\n                <Text\n                  style={[\n                    styles.labelLineText,\n                    { textAlign: \"right\", width: 340 }\n                  ]}\n                >\n                  Ticket Hash\n                </Text>\n                <View />\n              </View>\n              <View style={styles.orderBorder} />\n              {ticketViews}\n            </View>\n            <TouchableOpacity\n              onPress={() => {\n                this.setState({ ticketDisplayOn: false });\n              }}\n              style={styles.closeButton}\n            >\n              <Image\n                resizeMode=\"contain\"\n                source={closebutton}\n                style={{width:14, height : 14}}\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n      );\n    }\n\n    \n   \n    return (\n      <View style={{ marginLeft: 30, backgroundColor: colors.backgroundGrey }}>\n        <View style={styles.container}>\n          <View style={styles.titleBox}>\n            <Text style={styles.Auto_Buy_Stake_Monit}>\n              Auto Buy Stake Monitor\n            </Text>\n            <TouchableOpacity>\n              <Text style={styles.lastUpdated}>\n                {`Last Updated: ${dtDisplay}`}\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.walletBox}>\n            <Text style={styles.walletLabel}>Wallet Address</Text>\n            <TouchableOpacity\n              onPress={() => {\n                Clipboard.setString(data.signInfo.address);\n              }}\n            >\n              <Text style={styles.walletLabelAddress}>\n                {data.signInfo.address}\n                <i style={{ marginLeft: 4 }} className=\"fa fa-copy\" />\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <View style={{ height: 10, width: 1 }} />\n          <BlockDisplayer block={data.latestBlock} />\n          <View style={{ height: 10, width: 1 }} />\n          <View style={styles.largeMetricBox}>\n            <View style={styles.rewardHolderView}>\n              <Image\n                resizeMode=\"contain\"\n                source={lineGraph}\n                style={styles.lineGraph}\n              />\n              <View style={styles.rewardHolderViewGradient} />\n              <View style={styles.rewardHolderViewText}>\n                <View style={styles.rwcTextViewbox}>\n                  <Text style={styles.labelLineText}>\n                    Current Reward Probablity\n                  </Text>\n                  <View>\n                    <Text style={styles.stakingMonitorActive}>\n                      {displayPercent}\n                      <Text style={styles.stakingMonitorActivePercent}>%</Text>\n                    </Text>\n                  </View>\n                  <Text style={styles.simpleLineText}>{`${\n                    data.numberOfTickets\n                  } of ${utils.displayNumber(\n                    data.totalTickets,\n                    data.totalTickets < 1000 ? 0 : 2\n                  )} ${ticketText}`}</Text>\n                </View>\n              </View>\n            </View>\n            <View style={styles.rewardsGivenBox}>\n              <View style={styles.rwcTextViewbox}>\n                <View style={styles.rewardGivenBoxTextHolder}>\n                  <Text style={styles.labelLineText}>Rewards to Date</Text>\n                  <View style={styles.rewardsGivenBoxRewardCount}>\n                    <Text style={rewardStyle}>{rewardNumber}</Text>\n                    <Text style={textNumberOfRewardsGivenType}>FSN</Text>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n          <View style={styles.stakeDetailBox}>\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.stakeDetailText}>Stake Details</Text>\n              <TouchableOpacity\n                onPress={() => {\n                  if (!data.autoBuyOn && data.numberOfTicketsToPurchase === 0) {\n                    history.push(\"/PurchaseTicket\");\n                  } else {\n                    alert(\"do something\");\n                  }\n                }}\n              >\n                {this.handleStakeButtons(data, ticketStatus)}\n              </TouchableOpacity>\n            </View>\n            <View style={{ height: 20 }} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>Staking Status</Text>\n              {ticketPurchaseStatus}\n              { ticketStatus.activeTicketPurchase ? (\n                <Text key=\"ab1\" style={styles.activeButton}>\n                  Active\n                </Text>\n              ) : (\n                <Text key=\"ab1\" style={styles.inActiveButton}>\n                  Inactive\n                </Text>\n              )}\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>Active Tickets</Text>\n              <View>\n                <Text style={styles.stakeTextVal}>\n                  {data.numberOfTickets}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n                {data.numberOfTickets > 0 && (\n                  <TouchableOpacity\n                    onPress={() => {\n                      this.setState({ ticketDisplayOn: true });\n                    }}\n                  >\n                    <Text style={styles.viewTicketDetails}>\n                      View Ticket Details\n                    </Text>\n                  </TouchableOpacity>\n                )}\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>Rewards to Date</Text>\n              <View>\n                <Text style={styles.stakeTextVal}>\n                  {utils.formatWei(data.rewardsToDate)}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>FSN Staked</Text>\n              <View>\n                <Text style={styles.stakeTextVal}>\n                  {utils.formatWei(this.totalStake(data))}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>FSN Available</Text>\n              <View>\n                <Text style={styles.stakeTextVal}>\n                  {utils.formatWei(data.walletBalance)}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>Total FSN</Text>\n              <View>\n                <Text style={styles.stakeTextVal}>\n                  {utils.formatWei(\n                    data.walletBalance.add(this.totalStake(data))\n                  )}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            {data.autoBuyOn && (\n              <View key=\"aaa\">\n                <View style={styles.stakeDetailRow}>\n                  <Text style={styles.labelLineText}>Auto Buy Tickets</Text>\n                  <Text key=\"ab1\" style={styles.activeButton}>\n                    On\n                  </Text>\n                </View>\n                <View style={styles.orderBorder} />\n                <View style={styles.stakeDetailRow}>\n                  <Text style={styles.labelLineText}>Auto Reinvest Reward</Text>\n                  <Text\n                    key=\"ab1\"\n                    style={\n                      data.autoReinvestReward\n                        ? styles.activeButton\n                        : styles.inActiveButton\n                    }\n                  >\n                    {data.autoReinvestReward ? \"On\" : \"Off\"}\n                  </Text>\n                </View>\n                <View style={styles.orderBorder} />\n                <View style={styles.stakeDetailRow}>\n                  <Text style={styles.labelLineText}>Auto Buy Stop Time</Text>\n                  <Text style={styles.dateValue}>\n                    {data.autoBuyStopTime\n                      ? data.autoBuyStopTime.format(\"lll\")\n                      : \"Never\"}\n                  </Text>\n                </View>\n                <View style={styles.orderBorder} />\n                <View style={styles.stakeDetailRow}>\n                  <Text style={styles.labelLineText}>Last Ticket Expires</Text>\n                  <Text style={styles.dateValue}>\n                    {data.lastTicketExpires\n                      ? data.lastTicketExpires.format(\"lll\")\n                      : \"----\"}\n                  </Text>\n                </View>\n                <View style={styles.orderBorder} />\n              </View>\n            )}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  handleStakeButtons(data, ticketStatus ) {\n    if ( !ticketStatus.activeTicketPurchase ) {\n      return (\n        <Text key=\"ab1\" style={styles.stakesPurchaseTicketButtton}>\n          Purchase Staking Tickets\n        </Text>\n      );\n    }\n    if ( ticketStatus.activeTicketPurchase ) {\n      return (\n        <View\n          style={{\n            borderRadius: 3,\n            borderWidth: 1,\n            borderColor: colors.orderGrey\n          }}\n        >\n          <Text key=\"ab1\" style={styles.stopAutoBuyButton}>\n            Stop Purchasing\n          </Text>\n        </View>\n      );\n    } else {\n      return (\n        <View\n          style={{\n            borderRadius: 3,\n            borderWidth: 1,\n            borderColor: colors.orderGrey\n          }}\n        >\n          <Text key=\"ab1\" style={styles.startAutoBuyButton}>\n            Start Auto Buy\n          </Text>\n        </View>\n      );\n    }\n  }\n}\n\nstyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginTop: 15,\n    marginLeft: 15,\n    backgroundColor: colors.backgroundGrey\n  },\n  sectionTitle: {\n    fontSize: 24,\n    lineHeight: 32,\n    fontFamily: \"Roboto, san-serif\",\n    fontWeight: constants.boldFont,\n    color: colors.textBlue\n  },\n  sectionNumberTitle: {\n    fontSize: 18,\n    color: \"rgb(22,22,22)\",\n    marginTop: 30,\n    marginBottom: 10\n  },\n  info: {\n    fontSize: 16,\n    color: \"rgba(22,22,22, .5)\"\n  },\n  imageUploadSection: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"transparent\",\n    marginLeft: 35,\n    marginTop: 15\n  },\n  actionButtonDisabled: {\n    backgroundColor: \"#20C0FF\",\n    height: 35,\n    width: 130,\n    opacity: 0.5,\n    boxShadow: \"5px 10px 18px #888888\"\n  },\n  actionButtonTextDisabled: {\n    color: \"#7f7f7f\",\n    fontSize: 19,\n    marginTop: 7,\n    textAlign: \"center\"\n  },\n  actionButton: {\n    backgroundColor: \"#20C0FF\",\n    height: 35,\n    width: 130,\n    boxShadow: \"5px 10px 18px #888888\"\n  },\n  actionButtonText: {\n    color: \"#FFFFFF\",\n    fontSize: 19,\n    marginTop: 7,\n    textAlign: \"center\"\n  },\n  label: {\n    fontSize: 14,\n    color: \"rgba(22,22,22,.5)\",\n    width: 160,\n    marginBottom: 5\n  },\n  balanceBox: {\n    width: 160,\n    marginBottom: 5,\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    flexBasis: \"100%\"\n  },\n  Auto_Buy_Stake_Monit: {\n    fontSize: 24,\n    lineHeight: 32,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont,\n    color: colors.textBlue,\n    marginBottom: 4,\n    alignSelf: \"flex-start\"\n  },\n  lastUpdated: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.labelGrey,\n    alignSelf: \"flex-start\"\n  },\n  labelLineText: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.labelGrey\n  },\n  simpleLineText: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue\n  },\n  activeButton: {\n    color: colors.textGreen,\n    fontSize: 14,\n    backgroundColor: colors.lightSuccessGreen,\n    fontFamily: constants.fontFamily,\n    padding: 8,\n    fontWeight: constants.regularFont\n  },\n  stopAutoBuyButton: {\n    padding: 8,\n    fontSize: 14,\n    color: colors.errorRed,\n    fontWeight: constants.regularFont\n  },\n  startAutoBuyButton: {\n    color: colors.textBlue,\n    padding: 8,\n    fontSize: 14,\n    fontWeight: constants.regularFont\n  },\n  inActiveButton: {\n    color: colors.textBlue,\n    fontSize: 14,\n    backgroundColor: colors.backgroundGrey,\n    fontFamily: constants.fontFamily,\n    padding: 8,\n    fontWeight: constants.regularFont\n  },\n  stakingMonitorActive: {\n    fontSize: 32,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 8,\n    marginBottom: 4\n  },\n  stakingMonitorActivePercent: {\n    fontSize: 32,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 4,\n    marginBottom: 4,\n    marginLeft: 1\n  },\n  largeMetricBox: {\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 20,\n    width: 620\n  },\n  stakeTextFSN: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.regularFont,\n    marginLeft: 4\n  },\n  viewTicketDetails: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.regularFont,\n    color: colors.linkBlue\n  },\n  stakeTextVal: {\n    fontSize: 18,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont,\n    alignSelf: \"flex-end\",\n    color: colors.textBlue\n  },\n  dateValue: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue\n  },\n  orderBorder: {\n    backgroundColor: colors.orderGrey,\n    height: 1,\n    width: 556\n  },\n  rewardsGivenBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: 200,\n    height: 132,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  stakeDetailBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    width: 620,\n    padding: 32,\n    flex: 1,\n    flexBasis: \"100%\",\n    marginTop: 24,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  rewardHolderView: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: 388,\n    height: 132,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  rwcTextViewbox: {\n    marginBottom: 16\n  },\n  rewardHolderViewText: {\n    width: 227,\n    marginLeft: 32,\n    flex: 1,\n    flexBasis: \"100%\",\n    justifyContent: \"center\"\n  },\n  rewardHolderViewGradient: {\n    backgroundImage:\n      \"linear-gradient(to right, #ffffff, rgba(255, 255, 255, 0))\",\n    width: 40,\n    marginLeft: 32,\n    position: \"absolute\",\n    height: 130,\n    left: 138\n  },\n  rewardGivenBoxTextHolder: {\n    marginLeft: 32,\n    paddingTop: 8\n  },\n  textNumberOfRewardsGivenType: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.regularFont,\n    marginBottom: 10,\n    marginLeft: 4\n  },\n  textNumberOfRewardsGivenTypeSmaller: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.regularFont,\n    marginBottom: 6,\n    marginLeft: 4\n  },\n  textNumberOfRewardsGiven: {\n    fontSize: 48,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 8\n  },\n  textNumberOfRewardsGivenSmaller: {\n    fontSize: 36,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 8\n  },\n  rewardsGivenBoxRewardCount: {\n    flexDirection: \"row\",\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-start\",\n    marginTop: -2\n  },\n  lineGraph: {\n    width: 216,\n    height: 126,\n    position: \"absolute\",\n    left: 170,\n    overflow: \"visible\"\n  },\n  titleBox: {\n    width: 620\n  },\n  walletBox: {\n    backgroundColor: colors.tagGrey,\n    borderRadius: 3,\n    width: 620,\n    height: 48,\n    marginTop: 20,\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  walletLabel: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    marginLeft: 32,\n    color: colors.labelGrey\n  },\n  walletLabelAddress: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    marginRight: 32,\n    color: colors.textBlue\n  },\n  stakeDetailText: {\n    color: colors.textBlue,\n    fontSize: 18,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont\n  },\n  stakesPurchaseTicketButtton: {\n    borderRadius: 3,\n    padding: 8,\n    backgroundColor: colors.primaryBlue,\n    color: colors.white,\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont\n  },\n  stakesStopAutoBuy: {\n    borderColor: colors.backgroundGrey,\n    borderWidth: 1,\n    borderRadius: 3,\n    padding: 8,\n    backgroundColor: colors.white\n  },\n  stakesStopAutoBuyText: {\n    backgroundColor: colors.white,\n    color: colors.errorRed,\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont\n  },\n  stakeDetailRow: {\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: 56\n  },\n  ticketDetailRow: {\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    height: 44,\n    width: 620\n  },\n  closeButton: {\n    width: 14,\n    height: 14,\n    position: \"absolute\",\n    right: 18,\n    top: 24,\n    padding: 8\n  }\n});\n\nexport default Status;\n","import React, { Component } from \"react\";\nimport { Text, View, StyleSheet, TouchableOpacity } from \"react-native\";\n\nimport \"../App.css\";\nimport colors from \"./colors\";\nimport constants from \"./constants\";\nimport currentDataState from \"../api/currentDataState\";\nimport \"font-awesome/css/font-awesome.min.css\";\nvar web3api = currentDataState.web3api;\n\nexport default class BlockDisplayer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.lastestBlockListener = this.lastestBlockListener.bind(this);\n    this.state = {};\n\n    this.state.block = null;\n    this.state.expand = false;\n    this.state.displayLeftRight = props.displayLeftRight;\n    if (\n      this.props.match &&\n      this.props.match.params &&\n      this.props.match.params.blockNumber\n    ) {\n      this.state.blockNumberToDisplay = this.props.match.params.blockNumber;\n      this.state.expand = true;\n      this.state.displayLeftRight = true;\n    }\n  }\n\n  render() {\n    let block = this.props.block || this.state.block;\n\n    if (!block) {\n      return <Text>Lastest Block Will Display Here</Text>;\n    }\n\n    if (!this.state.expand) {\n      return (\n        <TouchableOpacity\n          onPress={() => {\n            this.setState({ expand: true });\n          }}\n        >\n          <View style={styles.stakeDetailSmall}>\n            <Text>\n              Latest Block Number = {block.number}\n              <i\n                style={{ color: colors.textBlue, marginLeft: 4 }}\n                className=\"fa fa-caret-down\"\n              />\n            </Text>\n          </View>\n        </TouchableOpacity>\n      );\n    } else {\n      let transactions = [];\n\n      if (block.transactions && block.transactions.length > 0) {\n        for (let tx of block.transactions) {\n          transactions.push(\n            <View key={tx}>\n              <Text>{tx}</Text>\n            </View>\n          );\n        }\n      }\n\n      return (\n        <View style={styles.stakeDetailBox}>\n          <View style={{ flex: 1, flexDirection: \"row\" }}>\n            <TouchableOpacity\n              onPress={() => {\n                this.setState({ expand: false });\n              }}\n            >\n              <Text>\n                Latest Block Number = {block.number}\n                <i\n                  style={{ color: colors.textBlue, marginLeft: 4 }}\n                  className=\"fa fa-caret-up\"\n                />\n              </Text>\n            </TouchableOpacity>\n            {this.state.displayLeftRight && (\n              <View style={{ flex: 1, flexDirection: \"row\" }}>\n                <TouchableOpacity\n                  onPress={() => {\n                    this.cleanupBlock();\n                    //debugger\n                    this.setupBlock(block.number - 1);\n                  }}\n                >\n                  <i\n                    style={{\n                      color: colors.textBlue,\n                      marginLeft: 4,\n                      marginRight: 8,\n                      fontSize: 16\n                    }}\n                    className=\"fa fa-caret-left\"\n                  />\n                </TouchableOpacity>\n                <TouchableOpacity\n                  onPress={() => {\n                    this.setState({ expand: false });\n                  }}\n                >\n                  <i\n                    style={{\n                      color: colors.textBlue,\n                      marginLeft: 4,\n                      fontSize: 16\n                    }}\n                    className=\"fa fa-caret-right\"\n                  />\n                </TouchableOpacity>\n              </View>\n            )}\n          </View>\n          <View style={{ height: 8, width: 1 }} />\n          <View style={styles.orderBorder} />\n\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Time Stamp</Text>\n            <Text style={styles.stakeTextFSN}>\n              ({block.timestamp}) {new Date(block.timestamp * 1000).toString()}\n            </Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Hash</Text>\n            <Text style={styles.stakeTextFSN}>{block.hash}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Parent Hash</Text>\n            <Text style={styles.stakeTextFSN}>{block.parentHash}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Miner</Text>\n            <Text style={styles.stakeTextFSN}>{block.miner}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Nonce</Text>\n            <Text style={styles.stakeTextFSN}>{block.nonce}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Size</Text>\n            <Text style={styles.stakeTextFSN}>{block.size}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Gas Used:</Text>\n            <Text style={styles.stakeTextFSN}>{block.gasUsed}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Gas Limit:</Text>\n            <Text style={styles.stakeTextFSN}>{block.gasLimit}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Transactions #:</Text>\n            <Text style={styles.stakeTextFSN}>{block.transactions.length}</Text>\n          </View>\n          {transactions}\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Total Difficulty:</Text>\n            <Text style={styles.stakeTextFSN}>{block.totalDifficulty}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n        </View>\n      );\n    }\n  }\n\n  lastestBlockListener(block) {\n    this.setState({ block });\n  }\n\n  setupBlock(blockNumber) {\n    let blockToUse = blockNumber || this.state.blockNumberToDisplay;\n  \n    if (!this.props.block) {\n      if (blockToUse) {\n        web3api.getBlock(true, blockToUse, this.lastestBlockListener);\n      } else {\n        web3api.on(\"latestBlock\", this.lastestBlockListener);\n      }\n    }\n    if (blockNumber !== undefined) {\n      this.setState({ blockNumberToDisplay: blockNumber });\n    }\n  }\n\n  cleanupBlock() {\n    if (!this.props.block) {\n      if (this.state.blockNumberToDisplay) {\n        web3api.getBlock(\n          false,\n          this.state.blockNumberToDisplay,\n          this.lastestBlockListener\n        );\n      } else {\n        web3api.removeEventListener(\"latestBlock\", this.lastestBlockListener);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.setupBlock();\n  }\n\n  componentWillUnmount() {\n    this.cleanupBlock();\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    marginTop: 15,\n    marginLeft: 15,\n    backgroundColor: colors.backgroundGrey\n  },\n  stakeDetailBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    width: 620,\n    paddingRight: 32,\n    paddingTop: 12,\n    paddingBottom: 12,\n    paddingLeft: 32,\n    flex: 1,\n    flexBasis: \"100%\",\n    marginTop: 24,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  stakeDetailSmall: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    width: 620,\n    padding: 12,\n    flex: 1,\n    flexBasis: \"100%\",\n    marginTop: 24,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  labelLineText: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.labelGrey\n  },\n  stakeTextFSN: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.regularFont,\n    marginLeft: 4\n  },\n  stakeTextVal: {\n    fontSize: 18,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont,\n    alignSelf: \"flex-end\",\n    color: colors.textBlue\n  },\n  blockDetailRow: {\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: 44\n  },\n  orderBorder: {\n    backgroundColor: colors.orderGrey,\n    height: 1,\n    width: 556\n  }\n});\n","import React, { Component } from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  TextInput,\n  ActivityIndicator\n} from \"react-native\";\n\nimport \"../App.css\";\nimport colors from \"./colors\";\nimport constants from \"./constants\";\nimport currentDataState from \"../api/currentDataState\";\nimport \"font-awesome/css/font-awesome.min.css\";\nvar web3api = currentDataState.web3api;\nvar styles;\n\nvar NODESELECT_WIDTH = 180;\nvar NODESELECT_HEIGHT = 44;\n\nexport default class NodeSelect extends Component {\n  state = {\n    initedNode: false,\n    currentNodeAddress: null,\n    newNodeAddress: \"\",\n    error: null,\n    testing: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.connectionListener = this.connectionListener.bind(this);\n\n    var val = window.localStorage.getItem(\"address2\");\n    var error = null;\n\n    if (!error) {\n      if (this.didOneUpdate) {\n        if (!val) {\n          val = \"wss://gateway.fusionnetwork.io:10001\";\n        }\n        this.setState({\n          newNodeAddress: val,\n          currentNodeAddress: val,\n          initedNode: true\n        });\n      } else {\n        if (!val) {\n          val = \"wss://gateway.fusionnetwork.io:10001\";\n        }\n        this.state.currentNodeAddress = val;\n        this.state.newNodeAddress = val;\n        this.state.initedNode = true;\n      }\n      return;\n    }\n\n    val = \"\";\n    if (this.didOneUpdate) {\n      this.setState({\n        newNodeAddress: val,\n        currentNodeAddress: null,\n        initedNode: true\n      });\n    } else {\n      this.state.currentNodeAddress = null;\n      this.state.initedNode = true;\n      this.state.newNodeAddress = val;\n      this.state.inputNodeMode = false;\n      this.state.connectionError = false;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.didOneUpdate = true;\n  }\n\n  connectionListener(arg, e) {\n    console.log(\"CONNECTION EVENTS FIRING AWAY\", arg);\n    if (this.state.testing) {\n      if (arg[0] === \"error\") {\n        alert(\"Unable to connect to \" + this.state.newNodeAddress);\n        this.setState({ testing: false });\n      }\n      if (arg[0] === \"connected\") {\n        this.setState({\n          connectionError: false,\n          testing: false,\n          currentNodeAddress: this.state.newNodeAddress\n        });\n        window.localStorage.setItem(\"address2\", this.state.newNodeAddress);\n      }\n    } else {\n      if (arg[0] === \"error\") {\n        this.setState({ connectionError: true });\n      } else if (arg[0] === \"stillgood\" && this.state.connectionError) {\n        this.setState({ connectionError: false });\n      }\n    }\n  }\n\n  setNodeAddress(address) {\n    web3api.setNodeAddress(address);\n  }\n\n  componentDidMount() {\n    web3api.on(\"connectstatus\", this.connectionListener);\n    if (this.state.newNodeAddress && !this.state.testing) {\n      web3api.setNodeAddress(this.state.newNodeAddress);\n    }\n  }\n\n  componentWillUnmount() {\n    web3api.removeEventListener(\"connectstatus\", this.connectionListener);\n  }\n\n  render() {\n    if (this.state.testing) {\n      let nodeString = this.state.newNodeAddress;\n      if (nodeString.length > 18) {\n        nodeString = nodeString.substr(0, 15) + \"...\";\n      }\n      return (\n        <View style={styles.testingBackground}>\n          <View\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\"\n            }}\n          >\n            <Text style={[styles.testingNode, { marginRight: 4 }]}>\n              {nodeString}\n            </Text>\n            <ActivityIndicator animating={true} />\n          </View>\n        </View>\n      );\n    }\n\n    if (this.state.error) {\n      return (\n        <TouchableOpacity\n          onPress={() => {\n            this.setState({ error: undefined });\n          }}\n        >\n          <View style={styles.errorBackground}>\n            <Text adjustsFontSizeToFit={true} style={styles.errorText}>\n              {this.state.error}\n            </Text>\n          </View>\n        </TouchableOpacity>\n      );\n    }\n\n    if (this.state.inputNodeMode) {\n      return (\n        <View style={styles.inputBackground}>\n          <TextInput\n            style={styles.nodeInput}\n            placeholder=\"http(s):// or ws(s):// address:port\"\n            autoCorrect={false}\n            placeholderTextColor={colors.orderGrey}\n            maxLength={128}\n            value={this.state.newNodeAddress}\n            clearButtonMode=\"always\"\n            onChangeText={val => {\n              this.setState({ newNodeAddress: val });\n            }}\n            autoFocus={true}\n            onBlur={() => {\n              this.setState({ inputNodeMode: false });\n            }}\n            onKeyPress={a => {\n              if (a.charCode === 13) {\n                if (this.state.newNodeAddress) {\n                  this.setState({ testing: true, connectionError: false });\n                  this.setNodeAddress(this.state.newNodeAddress);\n                } else {\n                  this.setState({ inputNodeMode: false });\n                }\n              }\n            }}\n          />\n        </View>\n      );\n    }\n\n    if (!this.state.currentNodeAddress) {\n      return (\n        <TouchableOpacity\n          onPress={() => {\n            this.setState({ inputNodeMode: true });\n          }}\n        >\n          <View style={styles.inputBackground}>\n            <Text style={styles.selectNode}>Select Node</Text>\n          </View>\n        </TouchableOpacity>\n      );\n    }\n\n    let nodeString = this.state.currentNodeAddress;\n    if (nodeString.length > 26) {\n      nodeString = nodeString.substr(0, 23) + \"...\";\n    }\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ inputNodeMode: true });\n        }}\n      >\n        <View\n          style={\n            this.state.connectionError\n              ? styles.errorBackground\n              : styles.standardBackground\n          }\n        >\n          <View\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\"\n            }}\n          >\n            {!this.state.connectionError && (\n              <i\n                key=\"c11\"\n                className=\"fa fa-check-circle\"\n                style={{ color: colors.successGreen, marginRight: 4 }}\n              />\n            )}\n            <Text style={[styles.standardNode, { marginRight: 4 }]}>\n              {nodeString}\n            </Text>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nstyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  errorBackground: {\n    width: NODESELECT_WIDTH,\n    height: NODESELECT_HEIGHT,\n    borderRadius: 3,\n    backgroundColor: colors.errorRed,\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  errorText: {\n    fontSize: 12,\n    fontFamily: constants.mediumFont,\n    color: colors.white\n  },\n  nodeInput: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    fontSize: 12,\n    fontFamily: constants.mediumFont,\n    color: colors.labelGrey,\n    width: NODESELECT_WIDTH - 32,\n    height: NODESELECT_HEIGHT - 12,\n    outline: \"none\",\n    paddingLeft: 2,\n    paddingRight: 2,\n    paddingTop: 4,\n    paddingBottom: 4\n    //clearButtonMode : 'always'\n  },\n  standardNode: {\n    color: colors.textBlue,\n    fontSize: 12,\n    fontWeight: constants.regularFont,\n    fontFamily: constants.fontFamily\n  },\n  standardBackground: {\n    width: NODESELECT_WIDTH,\n    height: NODESELECT_HEIGHT,\n    borderRadius: 3,\n    borderWidth: 1,\n    borderColor: colors.orderGrey,\n    backgroundColor: colors.white,\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  inputBackground: {\n    width: NODESELECT_WIDTH,\n    height: NODESELECT_HEIGHT,\n    borderRadius: 3,\n    backgroundColor: colors.linkBlue,\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  testingNode: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.black,\n    textAlign: \"center\"\n  },\n  testingBackground: {\n    width: NODESELECT_WIDTH,\n    height: NODESELECT_HEIGHT,\n    borderRadius: 3,\n    backgroundColor: colors.lightSuccessGreen,\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflow: \"hidden\"\n  },\n  selectNode: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.white,\n    backgroundColor: colors.linkBlue,\n    textAlign: \"center\"\n  }\n});\n","import React, { Component } from \"react\";\nimport { View, Text, Image, StyleSheet } from \"react-native\";\nimport colors from \"./colors\";\nimport constants from \"./constants\";\nimport NodeSelect from \"./NodeSelect\"\n\nvar fusionLogo = require(\"../images/explorer-logo.svg\")\n\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={{flex:1,flexDirection:'row',justifyContent:'flex-start', alignItems:'center'}}>\n          <Image source={fusionLogo} resizeMode=\"contain\" style={{marginLeft:80,width:129,height:29}}/>\n          <Text style={styles.titleAutoBuy}>Auto Buy Stake</Text>\n          <Text style={styles.programVersion}>1.00.00</Text>\n        </View>\n        <View style={styles.nodeSelectBox}>\n            <NodeSelect/>\n        </View>\n      </View>\n    )\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexDirection: \"row\",\n    flexBasis: \"auto\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    height: 72,\n    width: \"100%\",\n    backgroundColor: colors.white,\n    overflow: \"visible\",\n    boxShadow: \"inset 0 -1px 0 0 #bdc4ce\"\n  },\n  borderTitle : {\n    width : .9,\n    backgroundColor : colors.grey,\n    height : 19,\n    marginLeft : 14,\n    marginRight : 14\n  },\n  titleAutoBuy: {\n    fontFamily: constants.fontFamily,\n    fontSize: 22,\n    fontWeight: constants.boldFont,\n    marginLeft : 15\n  },\n  programVersion: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.regularFont,\n    color : colors.textBlue,\n    padding : 1 ,\n    marginLeft : 8,\n    backgroundColor : colors.grey\n  },\n  nodeSelectBox : {\n    alignSelf : 'center',\n    marginRight : 32,\n    marginLeft : 32\n  }\n});\n","import React, { Component } from \"react\";\nimport { View } from \"react-native\";\nimport \"./App.css\";\nimport history from \"./history.js\";\nimport UnlockAccount from \"./Components/UnlockAccount.js\";\nimport PurchaseTicket from \"./Components/PurchaseTicket.js\";\nimport Status from \"./Components/Status.js\";\nimport Header from \"./Components/Header.js\";\nimport BlockDisplayer from \"./Components/BlockDisplayer\";\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport { Route, Router } from \"react-router-dom\";\n\n\nclass App extends Component {\n  render() {\n    if (false) {\n      return <UnlockAccount />;\n    }\n    return (\n      <View>\n        <Header/>\n        <Router history={history}>\n            <div>\n              <Route exact path=\"/\" component={UnlockAccount} />\n              <Route path=\"/Status\" component={Status} />         \n              <Route path=\"/UnlockAccount\" component={UnlockAccount} />\n              <Route path=\"/PurchaseTicket\" component={PurchaseTicket} />\n              <Route path=\"/Block/:blockNumber\" component={BlockDisplayer} />\n            </div>\n          </Router>\n      </View>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}