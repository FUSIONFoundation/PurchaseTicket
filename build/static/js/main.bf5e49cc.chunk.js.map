{"version":3,"sources":["images/explorer-logo.svg","images/radioOn.svg","images/radioOff.svg","images/checkboxOn.svg","images/check_off.svg","images/lineGraph.svg","images/times.svg","Components/Header/9Boxes.svg","Components/Header/wallet.svg","Components/Header/asset.svg","Components/Header/autobuy.svg","Components/Header/block.svg","Components/Header/network.svg","Components/Header/swap.svg","images/Bronze.svg","images/Gold.svg","images/Silver.svg","api/web3api.js","history.js","Components/colors.js","Components/constants.js","utils/index.js","api/currentDataState.js","Components/UnlockAccount.js","Components/Input/CheckBox.js","Components/PurchaseTicket.js","Components/Status.js","Components/BlockDisplayer.js","Components/NodeSelect.js","Components/Header/Header.js","Components/Header/AppSelect.js","api/dataAPI.js","Components/Staking.js","Components/Leaderboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","currentDataState","createHistory","Colors","Constants","Utils","value","newValue","suffixNum","Math","floor","length","shortValue","precision","parseFloat","pow","toPrecision","replace","toFixed","str","index","substr","val","toString","len","repeat","insert","removeZeros","charAt","trailing","arguments","undefined","leading","decimal","before","after","indexOf","trimTrailingZeros","units","split","displayNumber","abs","power","min","log","a","addr","hex","i","l","substring","code","parseInt","String","fromCharCode","window","location","href","web3FusionExtend","require","rp","web3interface","web3Api","Object","classCallCheck","this","eventEmitter","EventEmitter","_web3","provider","connectedOnce","lastNodeAddress","attempForMonitor","lastBlock","_walletAddress","setupMonitor","bind","monitoringBlocks","dataStore","newNodeAddress","httpOnly","_this","console","nextMonitorCall","clearTimeout","subscriptionFSNCallAddress","unsubscribe","onHandle","__connected","emit","mustGetOneBalance","Web3","providers","WebsocketProvider","timeout","e","setTimeout","on","HttpProvider","wb","w3","extend","eth","getBlockNumber","then","block","catch","resetInfo","errorHandler","__ignoreNotifications","error","resetConnection","disconnect","setNodeAddress","disconnectHandler","Error","previousProvider","add","blockNumberToDisplay","lastestBlockListener","_this2","bl","valid","keys","removeEventListener","getting","getBlock","err","errObject","_this4","startFilterEngine","walletAddress","checkConnection","number","fsn","getAllBalances","res","allBalances","getAllTimeLockBalances","timelocks","timelockUsableBalance","BN","fusion","consts","FSNToken","Items","items","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","start","Date","getTime","end","EndTime","TimeForever","StartTime","Value","return","allTicketsByAddress","allTickets","loadsOfInfo","ticketPrice","assign","getGasPrice","gasPrice","totalNumberOfTickets","totalTickets","latestBlock","requestOptions","method","uri","qs","headers","json","gzip","response","Array","isArray","rewardEarn","eventName","listener","removeListener","event","payload","data","ticketPurchasing","activeTicketPurchase","lastTicketCheckTimer","lastStatus","lastCall","cb","_this5","originalData","original","purchaseStarted","ticketsPurchased","startBlock","timerFunc","autoBuyStopDate","date","autoBuyTickets","ticketQuantity","numberOfTickets","purchaseOneTicket","step","buyTickets","afterUnlock","ret","freeTicketTimeLockbalances","_this6","msg","from","to","TimeForeverStr","asset","fsntx","buildTimeLockToAssetTx","tx","signAndTransmit","signInfo","signTransaction","txHash","unlockNextTimeLock","_this7","days","daysQuantity","isNaN","now","dayHex","buildBuyTicketTx","utils","midHashDisplay","waitForTransactionToComplete","r","status","transID","maxWaitTime","_this8","getTransactionReceipt","receipt","address","rewardsToDate","web3","datablock","web3api","accountUnlocked","autoBuyOn","balanceOfFSN","numberOfTicketsToPurchase","autoBuy","autoReinvestReward","lastUpdateTime","walletBalance","autoBuyStopTime","moment","lastTicketExpires","balanceInfo","setDataStore","styles","selectFileTitle","glb_selectFiles","radioOn","radioOff","SelectKeyStoreFile","withSelectFiles","_ref","check","selectFiles","react_default","createElement","key","className","style","color","colors","successGreen","marginRight","Text","selectWalletFileText","Component","StyleSheet","create","container","flex","flexGrow","flexShrink","flexBasis","justifyContent","alignItems","width","innerContainer","title","fontSize","fontFamily","constants","fontWeight","boldFont","textBlue","marginTop","alignSelf","marginBottom","textHowToAccess","regularFont","radioSelectionText","marginLeft","accessBox","borderColor","orderGrey","borderRadius","backgroundColor","borderWidth","overflow","boxShadow","paddingTop","paddingBottom","paddingLeft","paddingRight","selectWalletBox","height","passwordInputBox","flexDirection","passwordInput","selectionBox","backgroundGrey","labelText","labelGrey","mediumFont","textAlign","errorText","errorRed","unlockWalletButtonDisabled","white","disabledBlue","padding","unlockWalletButton","linkBlue","checkOn","checkOff","CheckBox","props","possibleConstructorReturn","getPrototypeOf","call","state","textWidth","View","opacity","disabled","containerInner","TouchableOpacity","onPress","Image","source","questionText","text","subText","questionSubText","children","sectionTitle","lineHeight","sectionNumberTitle","info","imageUploadSection","actionButtonDisabled","actionButtonTextDisabled","actionButton","actionButtonText","label","balanceBox","Auto_Buy_Stake_Monit","lastUpdated","labelLineText","simpleLineText","activeButton","textGreen","lightSuccessGreen","stopAutoBuyButton","startAutoBuyButton","inActiveButton","stakingMonitorActive","stakingMonitorActivePercent","largeMetricBox","stakeTextFSN","viewTicketDetails","maxIt","stakeTextVal","valText","dateValue","statText","infoText","textGrey","infoTextLink","orderBorder","rewardsGivenBox","stakeDetailBox","rewardHolderView","rwcTextViewbox","rewardHolderViewText","rewardHolderViewGradient","backgroundImage","position","left","rewardGivenBoxTextHolder","textNumberOfRewardsGivenType","textNumberOfRewardsGivenTypeSmaller","textNumberOfRewardsGiven","textNumberOfRewardsGivenSmaller","rewardsGivenBoxRewardCount","lineGraph","walletBox","tagGrey","walletLabel","walletLabelAddress","stakeDetailText","stakesPurchaseTicketButtton","primaryBlue","stakesStopAutoBuy","stakesStopAutoBuyText","stakeDetailRow","fundsDetailRow","errorForFunds","errorForFundsBox","ticketQuantityInput","outline","costCalcLineText","purchaseTicketButtonDisabled","purchaseTicketButton","footerText","disabledGrey","Status","BlockDisplayer","assertThisInitialized","expand","displayLeftRight","match","params","blockNumber","transactions","push","setState","cleanupBlock","setupBlock","blockDetailRow","timestamp","hash","parentHash","miner","nonce","size","gasUsed","gasLimit","totalDifficulty","stakeDetailSmall","blockToUse","closebutton","titleBox","ticketDetailRow","closeButton","right","top","NodeSelect","initedNode","currentNodeAddress","testing","connectionListener","localStorage","getItem","didOneUpdate","prevProps","arg","alert","connectionError","setItem","nodeString","testingBackground","testingNode","ActivityIndicator","animating","errorBackground","adjustsFontSizeToFit","inputNodeMode","inputBackground","TextInput","nodeInput","placeholder","autoCorrect","placeholderTextColor","maxLength","clearButtonMode","onChangeText","autoFocus","onBlur","onKeyPress","charCode","selectNode","standardBackground","standardNode","NODESELECT_WIDTH","NODESELECT_HEIGHT","black","glb_appSelect","glb_header","fusionLogo","boxes","Header","appSelectOpen","titleWidth","appBKColoor","resizeMode","appSelect","titleAutoBuy","programVersion","version","nodeSelect","nodeSelectBox","NodeSelect_NodeSelect","appdisplay","popupMenuBox","borderTitle","grey","wallet","autobuy","network","SelectItem","hover","bkc","open","link","hideAppDisplay","onMouseEnter","onMouseLeave","image","selectItemText","AppSelect","_this3","setAppDisplay","TouchableWithoutFeedback","modalBackground","appsText","AppSelect_SelectItem","bottom","priceInfo","blocks","ticketNumber","totalTransactions","last5Blocks","last5Transactions","menuPath","blockCache","pendingLoad","pendingTLoad","cacheTLoad","pendingALoad","cacheALoad","pendingAsLoad","cacheAsLoad","letPageTransactionCache","letPageTransactionCachePending","letPageBlockCache","letPageBlockCachePending","letPageAddressCache","letPageAddressCachePending","letPageAssetCache","letPageAssetCachePending","totalAddresses","totalAssets","maxBlock","server","getServer","scheduleRefresh","getServerRefresh","sort","X-Content-Type-Options","getNext5","lastTwoBlocks","fetchNext5","message","page","b","JSON","parse","tickInfo","getNext5Transactions","path","parsed","startsWith","requestBlockRange","blockStart","keyToLoad","orgVal","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","item","x","c","t","toLowerCase","tr","transaction","rawData","convertNumberToStringJSON","startTimer","disableTLoader","executeLoadOfTransactions","slice","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","k","cacheToProces","ts","join","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","sortField","direction","callback","qsStringify","stringify","field","tss","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_id","onlyThisAddress","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","bbb","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","disableALoader","executeLoadOfAddresses","searchText","setMenuPath","history","concat","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","commandExtra","disableAsLoader","executeLoadOfAssets","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","commandExra","formatter","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","BigButton","active","bigButtonText","Staking","stakeVal","ticketVal","cmd","PFSN_Amount","FSN_Amount","PFSN_Return","FSN_Return","Total_Amount","Total_Return","Dimensions","get","calcDisplay","calcTicketDisplay","ticketNumberChanged","updateDimensions","valIn","obj","cmdPast","Total_Tickets","User_FSN","User_Tickets","Probability_Reward","PFSN_Reward_User","PFSN_Reward_Block","ROR_PFSN","FSN_Reward_User","Blocks_Per_Day","ROR_FSN","FSN_PFSN_Reward_User","ROR_PFSN_PLUS_FSN","format","intervalTimer","setInterval","addEventListener","mounted","clearInterval","newWidth","displayWidth","stacked","widthToUse","youStakeRowText","youStakeText","youStakeRow","stakeQuantityInput","inputLabel","youStakeForText","Staking_BigButton","youReceiveText","simpleRow","calcAmountText","smallLabelText","calcReturnText","formatPercent","flexWrap","titleText","texBlue","plusText","calcLabelText","fontStyle","whiteSpace","bronze","gold","silver","SelectButton","Leaderboard","loading","thisMonth","lastMonth","lastYear","_this$state","subContainer","Leaderboard_SelectButton","renderTop3","renderTitle","renderTable","headerText","datas","heights","heightDiff","images","sizes","sizesStacked","imagesStacked","_loop","row","count","rowText","top3Number","pfsnEarned","top3Text","fsnEarned","zIndex","_loop2","darkBlue","App","Staking_Staking","Leaderboard_Leaderboard","Router","Route","exact","component","AppSelect_AppSelect","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bf5e49cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/explorer-logo.516c3873.svg\";","module.exports = __webpack_public_path__ + \"static/media/radioOn.0ef10e99.svg\";","module.exports = __webpack_public_path__ + \"static/media/radioOff.53ea8205.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkboxOn.70a8f228.svg\";","module.exports = __webpack_public_path__ + \"static/media/check_off.f24d3320.svg\";","module.exports = __webpack_public_path__ + \"static/media/lineGraph.392623ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/times.a3c0a79b.svg\";","module.exports = __webpack_public_path__ + \"static/media/9Boxes.ad2520b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/wallet.e8f2226e.svg\";","module.exports = __webpack_public_path__ + \"static/media/asset.90f16579.svg\";","module.exports = __webpack_public_path__ + \"static/media/autobuy.9cef8488.svg\";","module.exports = __webpack_public_path__ + \"static/media/block.7cca8210.svg\";","module.exports = __webpack_public_path__ + \"static/media/network.3b85bc05.svg\";","module.exports = __webpack_public_path__ + \"static/media/swap.8ebdea22.svg\";","module.exports = __webpack_public_path__ + \"static/media/Bronze.d6414c72.svg\";","module.exports = __webpack_public_path__ + \"static/media/Gold.48ea5fe5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Silver.f1d03c33.svg\";","import Web3 from \"web3\";\nimport EventEmitter from \"events\";\nimport utils from \"../utils\";\nvar currentDataState;\nvar web3FusionExtend = require(\"web3-fusion-extend\");\nconst rp = require(\"request-promise\");\n\n// _web3.setProvider(new _web3.providers.HttpProvider(\"http://localhost:5488\"));\n\n/**\n *   a helper api component that enables monitoring\n *   and keep of a alive of an end point\n *\n */\nexport default class web3Api {\n  /**\n   * Initiate the web3 api handler\n   */\n  constructor() {\n    this.eventEmitter = new EventEmitter();\n    this._web3 = null;\n    this.provider = null;\n    this.connectedOnce = false;\n    this.lastNodeAddress = \"\";\n    this.attempForMonitor = 0;\n    this.lastBlock = {};\n    this._walletAddress = \"\";\n    this.setupMonitor = this.setupMonitor.bind(this);\n    this.monitoringBlocks = {};\n  }\n\n  setDataStore(dataStore) {\n    currentDataState = dataStore;\n  }\n\n  get web3() {\n    if (!this._web3) {\n      this._web3 = web3FusionExtend.extend(new Web3());\n    }\n    return this._web3;\n  }\n\n  setNodeAddress(newNodeAddress) {\n    let httpOnly;\n    let provider;\n\n    console.log(\"Attempting connect\");\n\n    if (this.connectedOnce && newNodeAddress !== this.lastNodeAddress) {\n      this.connectedOnce = false;\n    }\n\n    this.lastNodeAddress = newNodeAddress;\n\n    if (this.nextMonitorCall) {\n      clearTimeout(this.nextMonitorCall);\n      this.nextMonitorCall = null;\n    }\n\n    if (this.subscriptionFSNCallAddress) {\n      this.subscriptionFSNCallAddress.unsubscribe(a => {});\n      this.subscriptionFSNCallAddress = null;\n    }\n\n    if (newNodeAddress.indexOf(\"ws\") === 0) {\n      let onHandle = () => {\n        console.log(\"blockchain connected\");\n        this.connectedOnce = true;\n        provider.__connected = true;\n        this.emit(\"connectstatus\", [\"connected\"], null);\n        this.mustGetOneBalance = true;\n        this.setupMonitor();\n      };\n      onHandle = onHandle.bind(this);\n      try {\n        provider = new Web3.providers.WebsocketProvider(newNodeAddress, {timeout : 10000 });\n      } catch (e) {\n        setTimeout(() => {\n          this.emit(\"connectstatus\", [\"error\"], e);\n        }, 1);\n        return;\n      }\n      httpOnly = false;\n      provider.on(\"connect\", onHandle);\n    } else {\n      provider = new Web3.providers.HttpProvider(newNodeAddress);\n      httpOnly = true;\n    }\n\n    if (httpOnly) {\n      let wb = new Web3(provider);\n      let w3 = web3FusionExtend.extend(wb);\n      this._web3 = w3;\n\n      // http c\n      this._web3.eth\n        .getBlockNumber()\n        .then(block => {\n          this.emit(\"connectstatus\", [\"connected\", block], null);\n          this.setupMonitor();\n        })\n        .catch(e => {\n          console.log(\"error web3api connect \", e);\n          this.emit(\"connectstatus\", [\"error\"], e);\n        });\n      provider.__connected = true;\n      this.provider = provider;\n      return;\n    }\n\n    let resetInfo = {};\n\n    let errorHandler = e => {\n      if ( !provider || provider.__ignoreNotifications) {\n        // debugger\n        return\n      }\n      console.error(\"Blockchain WS Error\", e);\n      this.emit(\"connectstatus\", [\"error\"], e);\n      if (!resetInfo.resetConnection) {\n        this._web3 = null;\n        resetInfo.resetConnection = true;\n        this.provider.disconnect();\n        this.provider = null;\n        provider.__connected = false;\n        setTimeout(() => {\n          this.emit(\"connectstatus\", [\"disconnected\"], null);\n          if (this.connectedOnce === true) {\n            this.setNodeAddress(newNodeAddress);\n          }\n        }, 500);\n      }\n    };\n\n    errorHandler = errorHandler.bind(this);\n\n    provider.on(\"error\", errorHandler);\n\n    let disconnectHandler = () => {\n      if ( !provider || provider.__ignoreNotifications) {\n        // debugger\n        return\n      }\n      console.log(\"Blockchain disconnected will try to reconnect\");\n      this.emit(\"connectstatus\", [\"error\"], new Error(\"disconnected\"));\n      if (!resetInfo.resetConnection) {\n        provider.disconnect();\n        this._web3 = null;\n        this.provider = null;\n        provider.__connected = false;\n        resetInfo.resetConnection = true;\n        setTimeout(() => {\n          this.emit(\"connectstatus\", [\"disconnected\"], null);\n          if (this.connectedOnce === true) {\n            this.setNodeAddress(newNodeAddress);\n          }\n        }, 500);\n      }\n    };\n\n    disconnectHandler = disconnectHandler.bind(this);\n\n    provider.on(\"end\", disconnectHandler);\n\n    if ( this.provider ) {\n      if ( this.previousProvider ) {\n        this.previousProvider.__ignoreNotifications = true\n        try {\n          this.previousProvider.disconnect()\n        } catch (e) {}\n      }\n      this.previousProvider = this.provider\n    }\n\n    this.provider = provider;\n    let wb = new Web3(provider);\n    let w3 = web3FusionExtend.extend(wb);\n    this._web3 = w3;\n  }\n\n  getBlock(add, blockNumberToDisplay, lastestBlockListener) {\n    let bl = this.monitoringBlocks[blockNumberToDisplay];\n    let valid = bl ? (Object.keys(bl).length > 1 ? true : false) : false;\n\n    if (add) {\n      this.on(\"block\" + blockNumberToDisplay, lastestBlockListener);\n    } else {\n      this.removeEventListener(\n        \"block\" + blockNumberToDisplay,\n        lastestBlockListener\n      );\n    }\n    if (valid) {\n      lastestBlockListener(bl);\n      return;\n    } else {\n      this.monitoringBlocks[bl] = { getting: true };\n    }\n\n    this._web3.eth\n      .getBlock(blockNumberToDisplay)\n      .then(block => {\n        this.monitoringBlocks[blockNumberToDisplay] = block;\n        this.emit(\"block\" + blockNumberToDisplay, block);\n      })\n      .catch(err => {\n        this.monitoringBlocks[blockNumberToDisplay] = {\n          error: true,\n          errObject: err\n        };\n        this.emit(\n          \"block\" + blockNumberToDisplay,\n          this.monitoringBlocks[blockNumberToDisplay]\n        );\n      });\n  }\n\n  set walletAddress(address) {\n    if (address !== this._walletAddress) {\n      this._walletAddress = address;\n      this.mustGetOneBalance = true;\n      currentDataState.data.ticketPurchasing = {};\n      currentDataState.data.rewardsToDate = \"-\";\n    }\n  }\n\n  get walletAddress() {\n    return this._walletAddress;\n  }\n\n  startFilterEngine() {\n    return; // will be doing soon\n    //debugger\n    let dt = new Date();\n    this.filterEngineOn = dt;\n\n    this.subscriptionFSNCallAddress = this._web3.eth.subscribe(\n      \"logs\",\n      {\n        address: this._web3.fsn.consts.FSNCallAddress,\n        fromBlock: \"0x0\",\n        topics: [this._web3.fsn.consts.FSNCallAddress_Topic_BuyTicketFunc]\n      },\n      (error, result) => {\n        debugger;\n        if (!error) {\n          //debugger\n          if (result.topics.length > 0) {\n            let topic = parseInt(result.topics[0].substr(2));\n            let callType = this._web3.fsn.consts\n              .FSNCallAddress_Topic_To_Function[topic];\n            console.log(callType, result);\n            this._web3.eth.getTransaction(result.transactionHash, (err, tx) => {\n              console.log(\"tx\", err, tx);\n              if (!err) {\n                if (tx.from === currentDataState.data.signInfo.address) {\n                  console.log(\"got a ticket \");\n                }\n              }\n            });\n\n            //if ( )\n          }\n        }\n      }\n    );\n  }\n\n  checkConnection() {\n    if (!this._web3 || !this.provider || !this.provider.__connected) {\n      this.emit(\"connectstatus\", [\"error\"], new Error(\"no connection\"));\n      throw new Error(\"disconnected\");\n    }\n  }\n\n  setupMonitor() {\n    if (!this._web3 || !this.provider || !this.provider.__connected) {\n      // reconnecting need to wait\n      this.emit(\"connectstatus\", [\"error\"], new Error(\"no connection\"));\n      setTimeout(() => {\n        this.setupMonitor();\n      }, 4 * 1000);\n      return;\n    }\n    if (!this.subscriptionFSNCallAddress) {\n      this.startFilterEngine();\n    }\n    let walletAddress = this._walletAddress;\n    this.attempForMonitor += 1;\n    let nextMonitorCall = this.attempForMonitor;\n    console.log(\"checking connection \");\n    this._web3.eth\n      .getBlock(\"latest\")\n      .then(block => {\n        if ( !block ) {\n          throw new Error(\"no block\")\n        }\n        // console.log(\"c1\")        \n        this.emit(\"connectstatus\", [\"stillgood\"], false);\n        this.checkConnection();\n        if (this.lastBlock.number !== block.number || this.mustGetOneBalance) {\n          this.mustGetOneBalance = false;\n          this.lastBlock = block;\n          //console.log(block);\n          this.emit(\"latestBlock\", block);\n\n          if (!walletAddress || walletAddress !== this._walletAddress) {\n            return true;\n          }\n          //console.log(\"c2\") \n          this.checkConnection();\n          return this._web3.fsn\n            .getAllBalances(walletAddress)\n            .then(res => {\n              //console.log(\"all balances\", res);\n              return res;\n            })\n            .then(allBalances => {\n              this.checkConnection();\n              // console.log(\"c3\") \n              return this._web3.fsn\n                .getAllTimeLockBalances(this._walletAddress)\n                .then(timelocks => {\n                  let timelockUsableBalance = new currentDataState.BN(0);\n                  let fusion = timelocks[this._web3.fsn.consts.FSNToken];\n                  // debugger\n                  if (fusion && fusion.Items) {\n                    let items = fusion.Items;\n\n                    for (let i of items) {\n                      let start = new Date().getTime() / 1000;\n                      let end = new Date().getTime() / 1000 + 60 * 60 * 24 * 30;\n                      if (\n                        (i.EndTime >= end ||\n                          i.EndTime === this._web3.fsn.consts.TimeForever) &&\n                        i.StartTime < start\n                      ) {\n                        timelockUsableBalance = timelockUsableBalance.add(\n                          new currentDataState.BN(i.Value)\n                        );\n                      }\n                    }\n                  }\n                  this.checkConnection();\n                  //console.log(\"c4\") \n                  return this._web3.fsn\n                    .allTicketsByAddress(walletAddress)\n                    .then(res => {\n                      //console.log(\"all tickets\", res);\n                      //console.log(\"c5\") \n                      return {\n                        allBalances,\n                        allTickets: res,\n                        timelockUsableBalance\n                      };\n                    });\n                });\n            })\n            .then(loadsOfInfo => {\n              //console.log(\"c6\") \n              this.checkConnection();\n              return this._web3.fsn.ticketPrice(\"latest\").then(res => {\n                return Object.assign(loadsOfInfo, { ticketPrice: res });\n              }).catch ((err)=>{\n                console.log(\"error getting ticket price\", err )\n                throw err\n              })\n            })\n            .then(loadsOfInfo => {\n              this.checkConnection();\n             //console.log(\"c7\") \n              return this._web3.eth.getGasPrice().then(gasPrice => {\n                return Object.assign(loadsOfInfo, { gasPrice });\n              });\n            })\n            .then(loadsOfInfo => {\n              //console.log(\"c8\") \n              this.checkConnection();\n              return this._web3.fsn\n                .totalNumberOfTickets()\n                .then(totalTickets => {\n                  return Object.assign(loadsOfInfo, {\n                    totalTickets,\n                    latestBlock: block\n                  });\n                });\n            })\n            .then(loadsOfInfo => {\n              //console.log(\"c9\") \n              const requestOptions = {\n                method: \"GET\",\n                uri:\n                  \"https://api.fusionnetwork.io/balances/\" +\n                  this._walletAddress,\n                qs: {},\n                headers: {},\n                json: true,\n                gzip: true\n              };\n\n              return rp(requestOptions)\n                .then(response => {\n                  if (Array.isArray(response) && response.length > 0) {\n                    return Object.assign(loadsOfInfo, {\n                      rewardEarn: response[0].rewardEarn\n                    });\n                  }\n                  return loadsOfInfo;\n                })\n                .catch(err => {\n                  //console.log(\"can't get balance\", err);\n                  return loadsOfInfo;\n                });\n            })\n            .then(loadsOfInfo => {\n              //console.log(\"c10\") \n              this.emit(\"balanceInfo\", loadsOfInfo, false);\n            });\n        }\n      })\n      .then(res => {\n        //console.log(\"c11\") \n        setTimeout(() => {\n          this.setupMonitor();\n        }, 4 * 1000);\n      })\n      .catch(e => {\n        //console.log(\"monitor error \", e);\n        if (this.attempForMonitor === nextMonitorCall) {\n          this.emit(\"connectstatus\", [\"error\"], e);\n          setTimeout(() => {\n            this.setupMonitor();\n          }, 7 * 1000);\n        }\n      }\n    )\n  }\n\n  /**\n   * Adds the @listener function to the end of the listeners array\n   * for the event named @eventName\n   * Will ensure that only one time the listener added for the event\n   *\n   * @param {string} eventName\n   * @param {function} listener\n   */\n  on(eventName, listener) {\n    this.eventEmitter.on(eventName, listener);\n  }\n\n  /**\n   * Will temove the specified @listener from @eventname list\n   *\n   * @param {string} eventName\n   * @param {function} listener\n   */\n  removeEventListener(eventName, listener) {\n    this.eventEmitter.removeListener(eventName, listener);\n  }\n  /**\n   * Will emit the event on the evetn name with the @payload\n   * and if its an error set the @error value\n   *\n   * @param {string} event\n   * @param {object} payload\n   * @param {boolean} error\n   */\n  emit(event, payload, error = false) {\n    this.eventEmitter.emit(event, payload, error);\n  }\n  /**\n   * Returns the event emitter\n   * Used for testing purpose and avoid using this during development\n   */\n  getEventEmitter() {\n    return this.eventEmitter;\n  }\n\n  stopTicketPurchase() {\n    currentDataState.data.ticketPurchasing.activeTicketPurchase = false;\n\n    if (this.lastTicketCheckTimer) {\n      // stop the previous time\n      clearTimeout(this.lastTicketCheckTimer);\n      currentDataState.data.lastStatus = \"Completed\";\n      currentDataState.data.lastCall = \"purchaseCompleted\";\n      this.emit(\"purchaseCompleted\", currentDataState);\n    }\n  }\n\n  buyTickets(data) {\n    let originalData = Object.assign(data, { original: true });\n    currentDataState.data.ticketPurchasing = data;\n    data.purchaseStarted = true;\n    data.activeTicketPurchase = true;\n    data.ticketsPurchased = 0;\n    data.startBlock = this.lastBlock.number;\n    data.lastStatus = \"\";\n\n    if (this.lastTicketCheckTimer) {\n      clearTimeout(this.lastTicketCheckTimer);\n      this.lastTicketCheckTimer = null;\n    }\n\n    let cb;\n\n    let timerFunc = () => {\n      this.lastTicketCheckTimer = null;\n      if (data.autoBuyStopDate) {\n        let stopTime = data.date.getTime();\n        let now = new Date().getTime();\n        if (stopTime < now) {\n          data.lastStatus = \"Completed\";\n          data.lastCall = \"purchaseCompleted\";\n          data.activeTicketPurchase = false;\n          this.emit(\"purchaseCompleted\", data);\n          return;\n        }\n      }\n\n      if (\n        data.autoBuyTickets &&\n        data.ticketQuantity < currentDataState.data.numberOfTickets\n      ) {\n        data.lastStatus = \"Waiting for ticket level to drop...\";\n        data.lastCall = \"purchaseWaitForNewBlock\";\n        this.emit(\"purchaseWaitForNewBlock\", data);\n        this.lastTicketCheckTimer = setTimeout(timerFunc, 1000);\n      } else if (data.startBlock < this.lastBlock.number) {\n        this.purchaseOneTicket(data, cb);\n      } else {\n        data.lastStatus = \"Waiting for new block...\";\n        data.lastCall = \"purchaseWaitForNewBlock\";\n        this.emit(\"purchaseWaitForNewBlock\", data);\n        this.lastTicketCheckTimer = setTimeout(timerFunc, 1000);\n      }\n    };\n    timerFunc = timerFunc.bind(this);\n\n    cb = (err, step) => {\n      setTimeout(() => {\n        if (!err) {\n          data.ticketsPurchased += 1;\n        }\n        data.lastStatus = step;\n        if (\n          data.activeTicketPurchase &&\n          data.ticketsPurchased < data.ticketQuantity\n        ) {\n          // schedule another purchase\n          if (!err) {\n            data.lastStatus = \"Purchase next ticket\";\n          }\n          data.lastCall = \"purchaseAgain\";\n          this.emit(\"purchaseAgain\", data);\n          this.lastTicketCheckTimer = setTimeout(timerFunc, 1000);\n        } else {\n          if (data.activeTicketPurchase && data.autoBuyTickets) {\n            this.buyTickets(originalData);\n            return;\n          }\n          data.lastStatus = \"Completed\";\n          data.lastCall = \"purchaseCompleted\";\n          data.activeTicketPurchase = false;\n          this.emit(\"purchaseCompleted\", data);\n        }\n      }, 10);\n    };\n\n    cb = cb.bind(this);\n\n    let afterUnlock = ret => {\n      if (\n        data.autoBuyTickets &&\n        data.ticketQuantity < currentDataState.data.numberOfTickets\n      ) {\n        data.lastStatus = \"Waiting for ticket level to drop...\";\n        data.lastCall = \"purchaseWaitForNewBlock\";\n        this.emit(\"purchaseWaitForNewBlock\", data);\n        this.lastTicketCheckTimer = setTimeout(timerFunc, 1000);\n      } else {\n        this.purchaseOneTicket(data, cb);\n      }\n    };\n    afterUnlock = afterUnlock.bind(this);\n\n    this.freeTicketTimeLockbalances(data, afterUnlock);\n\n    data.lastCall = \"purchaseStarted\";\n    this.emit(\"purchaseStarted\", data);\n  }\n\n  unlockNextTimeLock(timelocks, index, cb, data) {\n    if (timelocks.length === index || (data && !data.activeTicketPurchase)) {\n      return true;\n    }\n    let i = timelocks[index];\n    let msg = {\n      from: this._walletAddress,\n      to: this._walletAddress,\n      start: \"0x\" + i.StartTime.toString(16),\n      end: this._web3.fsn.consts.TimeForeverStr,\n      value: i.Value,\n      asset: this._web3.fsn.consts.FSNToken\n    };\n    return this._web3.fsntx\n      .buildTimeLockToAssetTx(msg)\n      .then(tx => {\n        return this._web3.fsn.signAndTransmit(\n          tx,\n          currentDataState.data.signInfo.signTransaction\n        );\n      })\n      .then(txHash => {\n        console.log(\"Unlock request sent for 200 Ticket -> \", txHash);\n        return this.unlockNextTimeLock(timelocks, index + 1, cb, data);\n      })\n      .catch(err => {\n        console.log(msg);\n        console.log(err);\n        return this.unlockNextTimeLock(timelocks, index + 1, cb, data);\n      });\n  }\n\n  freeTicketTimeLockbalances(data, cb) {\n    return cb(null, data);\n    // this._web3.fsn\n    //   .getAllTimeLockBalances(this._walletAddress)\n    //   .then(timelocks => {\n    //     let process = [];\n    //     let fusion = timelocks[this._web3.fsn.consts.FSNToken];\n    //     if (fusion && fusion.Items) {\n    //       let items = fusion.Items;\n\n    //       for (let i of items) {\n    //         let now = new Date().getTime() / 1000;\n    //         if (\n    //           i.EndTime === this._web3.fsn.consts.TimeForever &&\n    //           i.Value === \"200000000000000000000\" &&\n    //           i.StartTime < now\n    //         ) {\n    //           console.log(\"adding time lock balance to unlock\");\n    //           process.push(i);\n    //         }\n    //       }\n    //     }\n    //     process = []; // turn it off for now\n    //     if (process.length) {\n    //       return this.unlockNextTimeLock(process, 0, cb, data).then(ret => {\n    //         if (cb) {\n    //           cb(null, data);\n    //         }\n    //         return true;\n    //       });\n    //     } else {\n    //       if (cb) {\n    //         cb(null, data);\n    //       }\n    //       return true;\n    //     }\n    //   })\n    //   .catch(err => {\n    //     if (cb) {\n    //       cb(err, data);\n    //     }\n    //   });\n  }\n\n  purchaseOneTicket(data, cb) {\n    if (!this._web3 || !this.provider || !this.provider.__connected) {\n      // reconnecting need to wait\n      cb(new Error(\"reconnecting\"), \"reconnecting\");\n      return;\n    }\n    let days = data.daysQuantity;\n    if (isNaN(days) || days < 21 || days > 100) {\n      days = 30;\n    }\n    let now = Math.floor(new Date().getTime() / 1000);\n    now += 60 * 60 * 24 * days;\n    let dayHex = \"0x\" + now.toString(16);\n\n    this._web3.fsntx\n      .buildBuyTicketTx({ from: this._walletAddress, end: dayHex })\n      .then(tx => {\n        console.log(tx);\n        // tx.gasLimit =  this._web3.utils.toWei( 21000, \"gwei\" )\n        if (!this._web3 || !this.provider || !this.provider.__connected) {\n          // reconnecting need to wait\n          cb(new Error(\"reconnecting\"), \"reconnecting\");\n          return;\n        }\n        return this._web3.fsn.signAndTransmit(\n          tx,\n          currentDataState.data.signInfo.signTransaction\n        );\n      })\n      .then(txHash => {\n        console.log(\"buy ticket tx -> \", txHash);\n        if (!data.activeTicketPurchase) {\n          cb(null, \"asked to leave\");\n          return true;\n        }\n        data.lastStatus = \"Pending Tx:\" + utils.midHashDisplay(txHash);\n        data.lastCall = \"purchaseSubmitTicket\";\n        this.emit(\"purchaseSubmitTicket\", data);\n        this.checkConnection();\n        return this.waitForTransactionToComplete(\n          txHash,\n          data,\n          new Date().getTime() + 120000\n        )\n          .then(r => {\n            if (r.status) {\n              cb(null, \"Ticket bought\");\n            } else {\n              cb(new Error(\"failed to buy\"), \"Failed to buy ticket will retry\");\n            }\n          })\n          .catch(err => {\n            cb(err, \"Error waiting for ticket to complete\");\n          });\n      })\n      .catch(err => {\n        console.log(err)\n        cb(err, \"unknown err\");\n      });\n  }\n\n  waitForTransactionToComplete(transID, data, maxWaitTime) {\n    if (!this._web3 || !this.provider || !this.provider.__connected) {\n      // reconnecting need to wait\n      throw new Error(\"reconnecting\");\n      return;\n    }\n    if (!data.activeTicketPurchase) {\n      return true;\n    }\n    let now = (new Date()).getTime()\n    //console.log( maxWaitTime , now )\n    if (maxWaitTime < now ) {\n      // a long time has past\n      // assume that transaction is lost\n      // or network is backlogged\n      // continue on\n      // console.log(\"too much time leaving\");\n      throw new Error(\"Error waiting for ticket to complete, timed out\");\n      return true;\n    }\n    // console.log(\"GTR E\")\n    return this._web3.eth\n      .getTransactionReceipt(transID)\n      .then(receipt => {\n        //console.log(\"GTR L\")\n        if (!receipt) {\n          // assume not scheduled yet\n          if (!data.activeTicketPurchase) {\n            throw Error(\"asked to stop purchasing\");\n          }\n          return this.waitForTransactionToComplete(transID, data, maxWaitTime);\n        }\n        return receipt;\n      })\n      .catch(err => {\n        // console.log(\"GTR L\")\n        throw err;\n      });\n  }\n}\n\n// _web3.eth.filter('latest').watch(function(err,log) {\n//     _web3.fsn.buyTicket({from:_web3.fsn.coinbase},password)\n// });\n\n//fsn.assetToTimeLock({from:fsn.coinbase,to:fsn.coinbase,asset:\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",start:\"0x0\",end:\"0x1\",value:\"0x1111111\"},\"123456\")\n","import createHistory from 'history/createBrowserHistory';\nexport default createHistory();\n","export default class Colors\n{\n    static get textBlue () {\n        return '#062144'\n    }\n\n    static get primaryBlue() {\n        return '#2a65b0'\n    }\n\n    static get backgroundGrey() {\n        return '#f5f7fa'\n    }\n\n    static get white() {\n        return '#ffffff'\n    }\n\n    static get grey() {\n        return '#e4e9f0'\n    }\n\n    static get disabledBlue() {\n        return \"#94b2d7\"\n    }\n\n    static get disabledGrey() {\n        return '#a6a9ad'\n    }\n\n    static get coolGrey() {\n        return '#a6a9ad'\n    }\n\n    static get orderGrey() {\n        return '#bec5cf'\n    }\n\n    static get linkBlue() {\n        return '#2b99ff'\n    }\n\n    static get textGreen() {\n        return '#5fa11a'\n    }\n\n    static get successGreen() {\n        return '#7ed321'\n    }\n\n    static get lightSuccessGreen() {\n        return '#e5f6d3'\n    }\n\n    static get errorRed() {\n        return '#d0021b'\n    }\n\n    static get labelGrey() {\n        return '#6a6f75'\n    }\n\n    static get tagGrey() {\n        return '#e4e9f0'\n    }\n\n    static get textGrey() {\n        return '#4a4a4a'\n    }\n\n    static get sexyPurple() {\n        return '#462ab0;'\n    } \n\n    static get tagPurple() {\n     return '#dad4ef';\n    }\n}\n","export default class Constants\n{\n    static get boldFont () {\n        return '700'\n    }\n\n    static get mediumFont () {\n        return '500'\n    }\n\n    static get regularFont () {\n        return '400'\n    }\n\n    static get fontFamily() {\n        return 'Roboto, san-serif'\n    }\n}","export default class Utils {\n  // https://stackoverflow.com/questions/10599933/convert-long-number-into-abbreviated-string-in-javascript-with-a-special-shortn\n  static displayNumber2(value) {\n    var newValue = value;\n    if (value >= 1000) {\n      let suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n      let suffixNum = Math.floor((\"\" + value).length / 3);\n      let shortValue = \"\";\n      for (let precision = 2; precision >= 1; precision--) {\n        shortValue = parseFloat(\n          (suffixNum !== 0\n            ? value / Math.pow(1000, suffixNum)\n            : value\n          ).toPrecision(precision)\n        );\n        var dotLessShortValue = (shortValue + \"\").replace(\n          /[^a-zA-Z 0-9]+/g,\n          \"\"\n        );\n        if (dotLessShortValue.length <= 2) {\n          break;\n        }\n      }\n      if (shortValue % 1 !== 0) shortValue = shortValue.toFixed(2);\n      newValue = shortValue + suffixes[suffixNum];\n    }\n    return newValue;\n  }\n\n  static insert(str, index, value) {\n    return str.substr(0, index) + value + str.substr(index);\n  }\n\n  static formatWei( val ) {\n    if ( typeof val === 'object') {\n      val = val.toString()\n    }\n    let len = val.length;\n    if ( len < 18 ) {\n      val = \"0\".repeat(18-len) + val\n      len = 18\n    }\n    if ( len === 18 ) {\n      val = \".\" + val\n    } else {\n      val = Utils.insert( val, val.length - 18, \".\" )\n    }\n\n    val = Utils.removeZeros( val, true, true , true )\n\n    if ( val.charAt(0) === '.') {\n      return \"0\" + val;\n    }\n    if ( val.length === 0 ) {\n      return 0\n    }\n    return val;\n  }\n\n  static removeZeros(val, trailing = true, leading = false, decimal = true) {\n    var regEx1 = /^[0]+/;\n    var regEx2 = /[0]+$/;\n    var regEx3 = /[.]$/;\n\n    var before = \"\";\n    var after = \"\";\n\n    before = val;\n\n    if (leading) {\n      after = before.replace(regEx1, \"\"); // Remove leading 0's\n    } else {\n        after = before;\n    }\n    if (trailing) {\n      if (after.indexOf(\".\") > -1) {\n        after = after.replace(regEx2, \"\"); // Remove trailing 0's\n      }\n    }\n    if (decimal) {\n      after = after.replace(regEx3, \"\"); // Remove trailing decimal\n    }\n    return after;\n  }\n\n  static displayNumber(value, precision = 2, trimTrailingZeros = false) {\n    var units = \" K M G T P E Z Y\".split(\" \");\n\n    if (value < 0) {\n      return \"-\" + Utils.displayNumber(Math.abs(value));\n    }\n\n    if (value < 1) {\n      return value + units[0];\n    }\n\n    var power = Math.min(\n      Math.floor(Math.log(value) / Math.log(1000)),\n      units.length - 1\n    );\n\n    var val = \"\" + (value / Math.pow(1000, power)).toFixed(precision);\n\n    if (trimTrailingZeros) {\n        val = Utils.removeZeros( val );\n    }\n\n    return val + units[power];\n  }\n\n  static displayPercent(a) {\n    a = a * 100;\n    return a.toFixed(2);\n  }\n\n  static midHashDisplay(addr) {\n    let first = addr.substr(0, 9);\n    let end = addr.substr(addr.length - 10, 9);\n    return first + \"...\" + end;\n  }\n\n  /**\n   * Should be called to get ascii from it's hex representation\n   *\n   * @method toAscii\n   * @param {String} string in hex\n   * @returns {String} ascii string representation of hex value\n   */\n  static toAscii(hex) {\n    // Find termination\n    var str = \"\";\n    var i = 0,\n      l = hex.length;\n    if (hex.substring(0, 2) === \"0x\") {\n      i = 2;\n    }\n    for (; i < l; i += 2) {\n      var code = parseInt(hex.substr(i, 2), 16);\n      str += String.fromCharCode(code);\n    }\n\n    return str;\n  }\n\n\n  static formatPercent( a ) {\n    if (  typeof a === 'string') {\n      return \"-\"\n    }\n    if ( a > 99 ) {\n      a = a.toFixed( 0 )\n    } else {\n      a = a.toFixed(2)\n    }\n    return a + \"%\"\n  } \n\n  static getServer() {\n    if ( window.location.href.indexOf( \"useServer2\") > 0 ) {\n      return  \"https://api2.fusionnetwork.io\";\n    } else {\n      return  \"https://api.fusionnetwork.io\";\n    }\n  }\n\n}\n","import moment from \"moment\";\nimport web3api from \"./web3api.js\";\n\n\nlet web3interface = new web3api();\n\nvar BN = web3interface.web3.utils.BN;\n\nvar datablock = {\n  web3api: web3interface,\n  BN,\n  latestBlock : {},\n  accountUnlocked: false,\n  autoBuyOn: false,\n  balanceOfFSN: 0,\n  numberOfTicketsToPurchase:  0,\n  numberOfTickets: 0,\n  autoBuy: false,\n  autoReinvestReward: false,\n  totalTickets: 0,\n  rewardsToDate: new BN(\"0\" + \"0\".repeat(18)),\n  lastUpdateTime: new Date(),\n  signInfo: {\n    address: \"0x4A5a7Aa4130e407d3708dE56db9000F059200C62\"\n  },\n  gasPrice: new BN(\"0\"),\n  //123456789012345678\n  ticketPrice: new BN(\"5000\" + \"0\".repeat(18)),\n  walletBalance: new BN(\"0\"),\n  timelockUsableBalance : new BN(\"0\"),\n  autoBuyStopTime: moment(\"20190214\", \"YYYYMMDD\"),\n  lastTicketExpires: moment(\"20190101\", \"YYYYMMDD\")\n};\n\nexport default class currentDataState {\n  static get BN() {\n    return BN;\n  }\n  static get web3api() {\n    return web3interface;\n  }\n  static get data() {\n    return datablock;\n  }\n\n  static setBalanceInfo( balanceInfo ) {\n      datablock.lastUpdateTime = new Date()\n\n      if (balanceInfo.ticketPrice) {\n        datablock.ticketPrice = new BN( balanceInfo.ticketPrice )\n      }\n      if ( balanceInfo.allBalances ) {\n          datablock.walletBalance = new BN( balanceInfo.allBalances[\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\"])\n      }\n      if ( balanceInfo.timelockUsableBalance ) {\n        datablock.timelockUsableBalance = balanceInfo.timelockUsableBalance\n      }\n      if ( balanceInfo.gasPrice ) {\n          datablock.gasPrice = new BN( balanceInfo.gasPrice )\n      }\n      if ( balanceInfo.totalTickets ) {\n          datablock.totalTickets = balanceInfo.totalTickets\n      }\n      if ( balanceInfo.allTickets ) {\n          datablock.numberOfTickets =  Object.keys(balanceInfo.allTickets).length\n          datablock.allTickets = balanceInfo.allTickets\n      }\n      if ( balanceInfo.latestBlock ) {\n          datablock.latestBlock = balanceInfo.latestBlock\n      }\n      if ( balanceInfo.rewardEarn ) {\n        datablock.rewardsToDate =  balanceInfo.rewardEarn\n      }\n  }\n}\n\nweb3interface.setDataStore( currentDataState )\n","import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity\n} from \"react-native\";\n\nimport \"../App.css\";\nimport history from \"../history.js\";\nimport colors from \"./colors\";\nimport constants from \"./constants\";\nimport currentDataState from \"../api/currentDataState\";\nimport withSelectFiles from \"react-select-files\";\nimport \"font-awesome/css/font-awesome.min.css\";\nvar web3api = currentDataState.web3api\nvar styles;\n\n\nlet radioOn = require(\"../images/radioOn.svg\");\nlet radioOff = require(\"../images/radioOff.svg\");\nlet selectFileTitle;\n\nvar glb_selectFiles;\n\nconst SelectKeyStoreFile = withSelectFiles(\"selectFiles\")(function({\n  selectFiles\n}) {\n  glb_selectFiles = selectFiles;\n  let check;\n  if ( selectFileTitle === \"Wallet File Valid\") {\n    check = <i key =\"c11\" className=\"fa fa-check-circle\" style={{color:colors.successGreen,marginRight:4}}/>\n  }\n  return (\n    <Text key={selectFileTitle} style={styles.selectWalletFileText}>\n    {check}\n    {selectFileTitle}</Text>\n  );\n});\n\nexport default class UnlockAccount extends Component {\n  state = {\n    accessViaPrivateKey: false,\n    secureEntry: true,\n    password : ''\n  };\n\n  render() {\n    let accessViaPrivateKey = this.state.accessViaPrivateKey;\n\n    let btnStyle = styles.unlockWalletButtonDisabled;\n    let enabled = false;\n\n    if ( accessViaPrivateKey && this.state.privateKeyOK ) {\n      btnStyle = styles.unlockWalletButton;\n      enabled = true;\n    } else if ( !accessViaPrivateKey && this.state.keyData && this.state.privateKeyOK ) {\n      btnStyle = styles.unlockWalletButton;\n      enabled = true;\n    }\n\n    return (\n      <View style={styles.container}>\n        <View style={styles.innerContainer}>\n          <Text style={styles.title}>Access Your Wallet</Text>\n        </View>\n        <View style={styles.accessBox}>\n          <Text style={styles.textHowToAccess}>\n            How would you like to access your wallet?\n          </Text>\n          <View style={{ flexDirection: \"row\" }}>\n            <TouchableOpacity\n              onPress={() => {\n                this.setState({ unlockError : false, keyData : null, privateKeyOK: false, password : null,  accessViaPrivateKey: !accessViaPrivateKey });\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                <Image\n                  source={!accessViaPrivateKey ? radioOn : radioOff}\n                  resizeMode=\"contain\"\n                  style={{ width: 14, height: 14 }}\n                />\n                <Text style={styles.radioSelectionText}>\n                  Keystore / JSON File\n                </Text>\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity\n              onPress={() => {\n                this.setState({ unlockError : false,  keyData : null, privateKeyOK: false, password : null,  accessViaPrivateKey: !accessViaPrivateKey });\n              }}\n            >\n              <View style={{ flexDirection: \"row\" }}>\n                <Image\n                  source={accessViaPrivateKey ? radioOn : radioOff}\n                  resizeMode=\"contain\"\n                  style={{ width: 14, height: 14 }}\n                />\n                <Text style={styles.radioSelectionText}>Private Key</Text>\n              </View>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.selectionBox}>\n            {accessViaPrivateKey\n              ? this.privateKeyRender()\n              : this.keyStoreRender()}\n          </View>\n          <TouchableOpacity\n            disabled = {!enabled}\n            onPress={() => {\n              if ( !this.state.accessViaPrivateKey ) {\n                    try {\n                      let obj = this.state.keyData\n                      let crypto = obj.Crypto || obj.crypto\n                      currentDataState.data.accountUnlocked = true\n                      currentDataState.data.signInfo = web3api.web3.eth.accounts.decrypt( {crypto , version:obj.version}, this.state.password )\n                      web3api.walletAddress = currentDataState.data.signInfo.address\n                    } catch (e) {\n                      this.setState( { unlockError : true } );\n                      return;\n                    }\n              } else {\n                let pass = this.state.password;\n                if (!pass.startsWith(\"0x\") ) {\n                  pass = \"0x\" + pass\n                }\n                currentDataState.data.accountUnlocked = true\n                currentDataState.data.signInfo = web3api.web3.eth.accounts.privateKeyToAccount(pass);\n                web3api.walletAddress = currentDataState.data.signInfo.address\n              }\n              history.push('/Status')\n            }}\n          >\n            <View>\n              <Text style={btnStyle}>Unlock Wallet</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n\n  keyStoreRender() {\n    let fileSelectColor = colors.white;\n\n    let borderColor = this.state.unlockError ? colors.errorRed : colors.orderGrey;\n\n    selectFileTitle = this.state.keyData ?  \"Wallet File Valid\"  : \"Select a Wallet File...\"\n\n    return (\n      <View key=\"accek\">\n        <Text style={styles.textHowToAccess}>\n          Select your wallet file and enter your password. Please ensure that\n          the above URL is correct before loading wallets or entering passwords.\n        </Text>\n        <TouchableOpacity\n          onPress={() => {\n            glb_selectFiles({multiple: false}).then( (files) => {\n              if ( files.length === 1 ) {\n                // read the \n                let reader = new FileReader();\n                reader.onload = (event) => {\n                  let data = event.target.result;\n                  if ( !data ) {\n                    this.setState( {error:'Unable to read file', keyData : null})\n                  }\n                  try {\n                    let obj = JSON.parse( data );\n                    if ( !obj.address ) {\n                      this.setState( {error:'Invalid key store file ', keyData : null})\n                    } else {\n                      this.setState( {error: null , keyData : obj } );\n                    }\n                  } catch (e) {\n                    this.setState( {error:'Unable to read file', keyData : null })\n                  }\n                };\n                reader.onerror = (event) => {\n                  this.setState( {error:'Unable to read file', keyData : null})\n                }\n                reader.readAsText(files[0]);\n              }\n            })\n          }}\n        >\n          <View style={[styles.selectWalletBox, {backgroundColor:fileSelectColor}]}>\n            <SelectKeyStoreFile />\n          </View>\n        </TouchableOpacity>\n        {this.state.error && (\n          <Text style={styles.errorText}>{this.state.error}</Text>\n        )}\n        <Text style={styles.labelText}>Enter Your Password</Text>\n        <View style={[styles.passwordInputBox,{borderColor}]}>\n          <TextInput\n            style={styles.passwordInput}\n            placeholder=\"Password\"\n            autoCorrect={false}\n            autoComplete=\"current-password\"\n            secureTextEntry={this.state.secureEntry}\n            placeholderTextColor={colors.orderGrey}\n            maxLength={128}\n            value = {this.state.password}\n            onChangeText={ (val)=> {\n                this.setState( { unlockError : false, password : val, privateKeyOK : val && val.length })\n            }}\n          />\n          <View\n            style={{ width: 1, height: 36, backgroundColor: colors.orderGrey }}\n          />\n          <TouchableOpacity onPress={() => {\n            this.setState( { secureEntry : !this.state.secureEntry })\n          }}>\n            <View\n              style={{\n                backgroundColor: colors.backgroundGrey,\n                width: 32,\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              {this.state.secureEntry ? (\n                <i className=\"fa fa-eye\" />\n              ) : (\n                <i className=\"fa fa-eye-slash\" />\n              )}\n            </View>\n          </TouchableOpacity>\n        </View>\n        {this.state.unlockError && (\n          <View>\n            <View style={{height:4,width:3}}/>\n            <Text style={styles.errorText}>The password provided is invalid.</Text>\n          </View>\n        )}\n      </View>\n    );\n  }\n\n  privateKeyRender() {\n    return (\n      <View key=\"prik\">\n        <Text style={styles.textHowToAccess}>\n          Enter your private keys. Please ensure that the above URL is correct\n          before loading wallets or entering passwords.\n        </Text>\n        <View style={{height:8,width : 1}}/>\n        <Text style={styles.labelText}>Enter Your Private Key</Text>\n        <View style={styles.passwordInputBox}>\n          <TextInput\n            style={styles.passwordInput}\n            placeholder=\"Private Key\"\n            autoCorrect={false}\n            autoComplete=\"current-password\"\n            secureTextEntry={this.state.secureEntry}\n            placeholderTextColor={colors.orderGrey}\n            maxLength={66}\n            value={this.state.password}\n            onChangeText={(text)=>{\n              if ( (text.startsWith(\"0x\") && text.length < 66) || \n                   (!text.startsWith(\"0x\") && text.length < 64 ) ) {\n                this.setState( { privateKeyOK : false , password : text })\n              } else {\n                this.setState( { privateKeyOK : \n                  web3api.web3.utils.isHexStrict( text.startsWith(\"0x\") ? text : \"0x\" + text  )\n                  , password : text })\n              }\n            }}\n          />\n          <View\n            style={{ width: 1, height: 36, backgroundColor: colors.orderGrey }}\n          />\n          <TouchableOpacity onPress={() => {\n            this.setState( { secureEntry : !this.state.secureEntry })\n          }}>\n            <View\n              style={{\n                backgroundColor: colors.backgroundGrey,\n                width: 32,\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\"\n              }}\n            >\n              {this.state.secureEntry ? (\n                <i class=\"fa fa-eye\" />\n              ) : (\n                <i class=\"fa fa-eye-slash\" />\n              )}\n            </View>\n          </TouchableOpacity>\n        </View>\n        <View style={{height:32,width : 1}}/>\n      </View>\n    );\n  }\n}\n\nstyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  innerContainer: {\n    width: 620,\n    flexGrow: 1,\n    flex: 1,\n    flexShrink: 0,\n    justifyContent: \"center\",\n    alignItems: \"flex-start\"\n  },\n  title: {\n    fontSize: 24,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont,\n    color: colors.textBlue,\n    marginTop: 35,\n    alignSelf: \"flex-start\",\n    marginBottom: 16\n  },\n  textHowToAccess: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue,\n    alignSelf: \"flex-start\",\n    marginBottom: 16\n  },\n  radioSelectionText: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue,\n    marginRight: 16,\n    marginLeft: 8\n  },\n  accessBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    alignItems: \"flex-start\",\n    width: 620,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\",\n    paddingTop: 24,\n    paddingBottom: 24,\n    paddingLeft: 32,\n    paddingRight: 32\n  },\n  selectWalletBox: {\n    flexBasis : 'auto',\n    borderColor: colors.orderGrey,\n    borderRadius: 4,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    width: 516,\n    height: 48,\n    overflow: \"visible\",\n    //boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 16\n  },\n  passwordInputBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    height: 36,\n    width: 512,\n    marginTop: 4\n  },\n  passwordInput: {\n    fontSize: 13,\n    color: colors.textBlue,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    width: 482,\n    paddingLeft: 6\n  },\n  selectionBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: colors.backgroundGrey,\n    borderWidth: 1,\n    width: 556,\n    alignItems: \"flex-start\",\n    paddingTop: 16,\n    paddingBottom: 16,\n    paddingLeft: 20,\n    paddingRight: 20,\n    marginTop: 20\n  },\n  labelText: {\n    fontSize: 12,\n    color: colors.labelGrey,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont\n  },\n  selectWalletFileText: {\n    fontSize: 16,\n    color: colors.textBlue,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    textAlign: \"center\"\n  },\n  errorText : {\n    fontSize: 12,\n    color: colors.errorRed,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    marginBottom : 8\n  },\n  unlockWalletButtonDisabled : {\n    fontSize: 16,\n    width: 556,\n    borderRadius: 3,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.white,\n    backgroundColor: colors.disabledBlue,\n    textAlign: \"center\",\n    padding: 12,\n    marginTop: 20\n  },\n  unlockWalletButton: {\n    fontSize: 16,\n    width: 556,\n    borderRadius: 3,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.white,\n    backgroundColor: colors.linkBlue,\n    textAlign: \"center\",\n    padding: 12,\n    marginTop: 20\n  }\n});\n","import React, { Component } from \"react\";\nimport { View, Text, StyleSheet, Image, TouchableOpacity } from \"react-native\";\nimport colors from \"../colors.js\";\nimport constants from \"../constants.js\";\n\nvar styles;\n\nvar checkOn = require(\"../../images/checkboxOn.svg\");\nvar checkOff = require(\"../../images/check_off.svg\");\n\nexport default class CheckBox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textWidth: this.props.textWidth || 620\n    };\n  }\n\n  render() {\n    return (\n      <View style={[styles.container, { width: this.state.textWidth , opacity : this.props.disabled ? .40 : 1}]}>\n        <View style={styles.containerInner}>\n          <TouchableOpacity\n            disabled={this.props.disabled}\n            onPress={() => {\n              this.props.onPress(!this.props.on);\n            }}\n          >\n            <Image\n              source={this.props.on ? checkOn : checkOff}\n              style={styles.checkOn}\n            />\n          </TouchableOpacity>\n          <View>\n            <Text style={styles.questionText}>{this.props.text}</Text>\n\n            {this.props.subText && (\n              <Text\n                style={[\n                  styles.questionSubText,\n                  { width: this.state.textWidth }\n                ]}\n              >\n                {this.props.subText}\n              </Text>\n            )}\n            {this.props.children}\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nstyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"transparent\",\n    marginTop: 10\n  },\n  containerInner: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"transparent\"\n  },\n  checkOn: {\n    marginRight: 15,\n    width: 20,\n    height: 20\n  },\n  questionText: {\n    fontSize: 14,\n    color: colors.textBlue,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    marginBottom: 6\n  },\n  questionSubText: {\n    fontSize: 14,\n    color: colors.labelGrey,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    marginBottom: 16\n  }\n});\n","import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Clipboard,\n  TextInput,\n  TouchableOpacity\n} from \"react-native\";\n\nimport \"../App.css\";\nimport history from \"../history.js\";\nimport CheckBox from \"./Input/CheckBox.js\";\nimport colors from \"./colors\";\nimport constants from \"./constants\";\nimport utils from \"../utils\";\nimport currentDataState from \"../api/currentDataState\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nvar BN = currentDataState.data.BN;\n\nvar styles;\n\nclass Status extends Component {\n  // this is what i use for production\n  state = {\n    ticketQuantity: undefined,\n    daysQuantity: \"30\",\n    totalCost: 0,\n    daysError: false,\n    totalCostString: \"0\",\n    autoBuyTickets: false,\n    reinvestReward: false,\n    autoBuyStopDate: false,\n    totalPrice: new BN(0),\n    error: false,\n    repaintKey: 0,\n    date: new Date(new Date().getTime() + 1000 * 60 * 60 * 24)\n  };\n\n  constructor(props) {\n    super();\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.balanceListener = this.balanceListener.bind(this);\n  }\n\n  totalStake(data) {\n    return data.numberOfTickets * data.ticketPrice;\n  }\n\n  balanceListener(balanceInfo) {\n    currentDataState.setBalanceInfo(balanceInfo);\n    this.calcDisplay(currentDataState.data, this.state.ticketQuantity);\n    this.setState({ repaintKey: this.state.repaintKey + 1 });\n  }\n\n  componentDidMount() {\n    currentDataState.web3api.on(\"balanceInfo\", this.balanceListener);\n  }\n\n  componentWillUnmount() {\n    currentDataState.web3api.removeEventListener(\n      \"balanceInfo\",\n      this.balanceListener\n    );\n  }\n\n  render() {\n    let data = currentDataState.data;\n\n    let btnStyle = styles.purchaseTicketButtonDisabled;\n    let enabled = false;\n    let purchaseText = \"Purchase Tickets\";\n\n    if (data.accountUnlocked) {\n      data.web3api.walletAddress = data.signInfo.address;\n    }\n\n    if (this.state.ticketQuantity > 0) {\n      btnStyle = styles.purchaseTicketButton;\n      enabled = true;\n      if (this.state.ticketQuantity === 1) {\n        purchaseText = \"Purchase 1 Ticket\";\n      } else {\n        purchaseText = `Purchase ${this.state.ticketQuantity} Tickets`;\n      }\n    }\n\n    let stakeTextColor;\n\n    if (this.state.error) {\n      enabled = false;\n      btnStyle = styles.purchaseTicketButtonDisabled;\n      stakeTextColor = colors.errorRed;\n    } else {\n      stakeTextColor = colors.textBlue;\n    }\n\n    let daysTextcolor;\n    if (this.state.daysError) {\n      enabled = false;\n      btnStyle = styles.purchaseTicketButtonDisabled;\n      daysTextcolor = colors.errorRed;\n    } else {\n      daysTextcolor = colors.textBlue;\n    }\n\n    let displayPercent =\n      data.totalTickets > 0\n        ? utils.displayPercent(data.numberOfTickets / data.totalTickets)\n        : \"0.00\";\n\n    if (displayPercent === \"0.00\" && data.numberOfTickets > 0) {\n      displayPercent = \"< 0.01\";\n    }\n\n    if (!data.accountUnlocked) {\n      return (\n        <View style={{ padding: 15 }}>\n          <Text style={styles.Auto_Buy_Stake_Monit}>\n            Your Account Must be unlocked to use this screen.\n          </Text>\n          <TouchableOpacity\n            style={{ width: 100 }}\n            onPress={() => {\n              history.push(\"/UnlockAccount\");\n            }}\n          >\n            <Text style={styles.activeButton}>Select An Account</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n\n    let borderColor = this.state.error ? colors.errorRed : colors.orderGrey;\n\n    return (\n      <View style={{ marginLeft: 30, backgroundColor: colors.backgroundGrey }}>\n        <View style={styles.container}>\n          <Text style={styles.Auto_Buy_Stake_Monit}>\n            Purchase Staking Tickets\n          </Text>\n          <View style={styles.walletBox}>\n            <Text style={styles.walletLabel}>Wallet Address</Text>\n            <TouchableOpacity\n              onPress={() => {\n                Clipboard.setString(data.signInfo.address);\n              }}\n            >\n              <Text style={styles.walletLabelAddress}>\n                {data.signInfo.address}\n                <i style={{ marginLeft: 4 }} className=\"fa fa-copy\" />\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.stakeDetailBox}>\n            <Text style={styles.infoText}>\n              Earn rewards by purchasing staking tickets. You will earn a reward\n              of 2.5 FSN per selected ticket. If your ticket is not selected,\n              your FSN will be returned when the ticket expires (the days selected after\n              purchase). NOTE: Only one ticket at a time can be purchased per\n              block for an address. ALSO when there are not enough time locked\n              tokens, buy ticket will automatically time lock 200 FSN to\n              purchase a ticket. After the ticket expires the purchase ticket\n              program will try to remove the time lock from the 200 FSN. This\n              will use gas from your account to send the unlock request.\n              <TouchableOpacity\n                onPress={() => {\n                  //TODO: once article is up point to it\n                  window.open(\"https://fusion.org\");\n                }}\n              >\n                <Text style={[styles.infoTextLink, { marginLeft: 4 }]}>\n                  Learn More\n                </Text>\n              </TouchableOpacity>\n            </Text>\n            <View style={{ height: 20 }} />\n            <View style={styles.orderBorder} />\n            <View\n              style={[\n                styles.fundsDetailRow,\n                { backgroundColor: colors.backgroundGrey }\n              ]}\n            >\n              <Text style={styles.labelLineText}>Funds Available (FSN+Timelocked FSN)</Text>\n              <View>\n                <Text style={styles.statText}>\n                  {utils.formatWei(data.timelockUsableBalance.add(data.walletBalance))}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>Ticket Price</Text>\n              <View>\n                <Text style={styles.valText}>\n                  {utils.formatWei(data.ticketPrice)}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>Gas Price</Text>\n              <View>\n                <Text style={styles.valText}>\n                  {utils.formatWei(data.gasPrice)}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={[styles.stakeDetailRow, { height: 78 }]}>\n              <Text style={styles.labelLineText}>Ticket Quantity</Text>\n              <View>\n                <View style={{ flex: 1, flexDirection: \"row\" }}>\n                  {this.state.error && (\n                    <View style={styles.errorForFundsBox}>\n                      <Text style={styles.errorForFunds}>\n                        You don't have enough FSN\n                      </Text>\n                      <i\n                        style={{\n                          position: \"relative\",\n                          left: -1,\n                          color: colors.errorRed\n                        }}\n                        className=\"fa fa-caret-right\"\n                      />\n                    </View>\n                  )}\n                  <TextInput\n                    style={[\n                      styles.ticketQuantityInput,\n                      { borderColor: borderColor }\n                    ]}\n                    placeholder=\"0\"\n                    autoCorrect={false}\n                    placeholderTextColor={colors.orderGrey}\n                    maxLength={10}\n                    value={\"\" + (this.state.ticketQuantity || \"\")}\n                    onChangeText={val => {\n                      this.calcDisplay(data, val);\n                    }}\n                  />\n                </View>\n                <TouchableOpacity\n                  onPress={() => {\n                    let valGas = new BN(data.gasPrice);\n                    let valTik = new BN(data.ticketPrice);\n                    valTik = valTik.add(valGas);\n                    let num = data.timelockUsableBalance\n                      .add(data.walletBalance)\n                      .div(valTik);\n                    this.calcDisplay(data, num.toNumber());\n                  }}\n                >\n                  <Text style={styles.maxIt}>Max Quantity</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={[styles.stakeDetailRow, { height: 78 }]}>\n              <Text style={styles.labelLineText}>Ticket Days</Text>\n              <View>\n                <View style={{ flex: 1, flexDirection: \"row\" }}>\n                  <TextInput\n                    style={[\n                      styles.ticketQuantityInput,\n                      {\n                        color: daysTextcolor,\n                        borderColor: this.state.daysError\n                          ? colors.errorRed\n                          : colors.orderGrey\n                      }\n                    ]}\n                    placeholder=\"30\"\n                    autoCorrect={false}\n                    placeholderTextColor={colors.orderGrey}\n                    maxLength={10}\n                    value={\"\" + (this.state.daysQuantity || \"\")}\n                    onChangeText={val => {\n                      let days = parseInt(val);\n                      if (isNaN(days) || days < 21 || days > 100) {\n                        this.setState({ daysQuantity: val, daysError: true });\n                      } else {\n                        this.setState({ daysQuantity: days, daysError: false });\n                      }\n                    }}\n                  />\n                </View>\n                <Text style={[styles.maxIt, { color: colors.orderGrey }]}>\n                  (21-100)\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={{ height: 16, width: 1 }} />\n            <View style={[styles.stakeDetailRow, { height: 30 }]}>\n              <Text style={styles.labelLineText}>Total Cost</Text>\n              <View>\n                <Text style={styles.costCalcLineText}>\n                  Ticket Cost {this.state.ticketQuantity || \"0\"} x{\" \"}\n                  {utils.formatWei(data.ticketPrice)} FSN\n                </Text>\n              </View>\n            </View>\n            <View>\n              <Text style={styles.costCalcLineText}>\n                Gas Cost {this.state.ticketQuantity || \"0\"} x{\" \"}\n                {utils.formatWei(data.gasPrice)} FSN\n              </Text>\n              <View style={{ height: 16, width: 1 }} />\n              <View>\n                <Text style={[styles.stakeTextVal, { color: stakeTextColor }]}>\n                  {this.state.totalCostString}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={{ height: 20, width: 1 }} />\n            <View style={styles.orderBorder} />\n            <View style={{ height: 16, width: 1 }} />\n            <CheckBox\n              textWidth={512}\n              onPress={() => {\n                let obj = { autoBuyTickets: !this.state.autoBuyTickets };\n                if (!obj.autoBuyTickets) {\n                  obj.autoBuyStopDate = false;\n                }\n                this.setState(obj);\n              }}\n              on={this.state.autoBuyTickets}\n              text=\"Auto Buy Tickets\"\n              subText=\"Tickets will be repurchased when they expire or when they win rewards\"\n            />\n            {/* <CheckBox\n              textWidth={512}\n              onPress={() => {\n                this.setState({ reinvestReward: !this.state.reinvestReward });\n              }}\n              on={this.state.reinvestReward}\n              text=\"Reinvest Reward\"\n              subText=\"Rewards that are won will be reinvested to purchase more tickets when enough rewards are collected.\"\n            /> */}\n            <CheckBox\n              textWidth={512}\n              disabled={!this.state.autoBuyTickets}\n              onPress={() => {\n                this.setState({ autoBuyStopDate: !this.state.autoBuyStopDate });\n              }}\n              on={this.state.autoBuyStopDate}\n              text=\"Auto Buy Stop Date\"\n              subText=\"Auto Buy will stop on desired date\"\n            >\n              {this.state.autoBuyStopDate && (\n                <DatePicker\n                  onChange={this.onChangeDate}\n                  selected={this.state.date}\n                  minDate={new Date(new Date().getTime() + 1000 * 60 * 60 * 24)}\n                  showTimeSelect\n                  dateFormat=\"Pp\"\n                />\n              )}\n            </CheckBox>\n            <TouchableOpacity\n              disabled={!enabled}\n              onPress={() => {\n                this.purchaseTicket();\n              }}\n            >\n              <View>\n                <Text style={btnStyle}>{purchaseText}</Text>\n              </View>\n            </TouchableOpacity>\n            <View style={{ height: 16, width: 1 }} />\n            <Text style={styles.footerText}>\n              Funds used to purchase tickets will be sent back after tickets\n              have expired. Tickets expire 30 days after date of purchase. Your\n              browser window must remain open to continue autobuy.\n            </Text>\n          </View>\n        </View>\n        {/* {this.state.purchasingTicket && (\n            <View style={{position:'absolute', backgroundColor : 'rgba(0,0,0,.3)' , top:0, left : 0, width : '100%', height : '100%'}}>\n              <Text style={{fontSize:30}}> Buying Tickets </Text>\n            </View>\n        )} */}\n      </View>\n    );\n  }\n\n  purchaseTicket() {\n    currentDataState.web3api.buyTickets(this.state);\n    this.setState({ purchasingTicket: true });\n    history.push(\"/Status\");\n  }\n\n  onChangeDate(date) {\n    let dt = new Date(new Date().getTime() + 1000 * 60 * 60 * 24);\n    if (date.getTime() < dt.getTime()) {\n      date = dt;\n    }\n    this.setState({ date });\n  }\n\n  calcDisplay(data, val) {\n    let x = parseInt(val);\n    if (!x && (x !== 0 || x < 0)) {\n      x = 0;\n    }\n    let valGas = new BN(x);\n    valGas = valGas.mul(data.gasPrice);\n    let valTik = new BN(x);\n    valTik = valTik.mul(data.ticketPrice);\n    valGas = valGas.add(valTik);\n    let totalCostString = utils.formatWei(valGas.toString());\n    this.setState({\n      ticketQuantity: x,\n      totalPrice: valGas,\n      totalCostString,\n      error: valGas.gt(data.timelockUsableBalance.add(data.walletBalance))\n    });\n  }\n}\n\nstyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginTop: 15,\n    marginLeft: 15,\n    backgroundColor: colors.backgroundGrey\n  },\n  sectionTitle: {\n    fontSize: 24,\n    lineHeight: 32,\n    fontFamily: \"Roboto, san-serif\",\n    fontWeight: constants.boldFont,\n    color: colors.textBlue\n  },\n  sectionNumberTitle: {\n    fontSize: 18,\n    color: \"rgb(22,22,22)\",\n    marginTop: 30,\n    marginBottom: 10\n  },\n  info: {\n    fontSize: 16,\n    color: \"rgba(22,22,22, .5)\"\n  },\n  imageUploadSection: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"transparent\",\n    marginLeft: 35,\n    marginTop: 15\n  },\n  actionButtonDisabled: {\n    backgroundColor: \"#20C0FF\",\n    height: 35,\n    width: 130,\n    opacity: 0.5,\n    boxShadow: \"5px 10px 18px #888888\"\n  },\n  actionButtonTextDisabled: {\n    color: \"#7f7f7f\",\n    fontSize: 19,\n    marginTop: 7,\n    textAlign: \"center\"\n  },\n  actionButton: {\n    backgroundColor: \"#20C0FF\",\n    height: 35,\n    width: 130,\n    boxShadow: \"5px 10px 18px #888888\"\n  },\n  actionButtonText: {\n    color: \"#FFFFFF\",\n    fontSize: 19,\n    marginTop: 7,\n    textAlign: \"center\"\n  },\n  label: {\n    fontSize: 14,\n    color: \"rgba(22,22,22,.5)\",\n    width: 160,\n    marginBottom: 5\n  },\n  balanceBox: {\n    width: 160,\n    marginBottom: 5,\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    flexBasis: \"100%\"\n  },\n  Auto_Buy_Stake_Monit: {\n    fontSize: 24,\n    lineHeight: 32,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont,\n    color: colors.textBlue,\n    marginBottom: 4\n  },\n  lastUpdated: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.labelGrey\n  },\n  labelLineText: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.labelGrey\n  },\n  simpleLineText: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue\n  },\n  activeButton: {\n    color: colors.textGreen,\n    fontSize: 14,\n    backgroundColor: colors.lightSuccessGreen,\n    fontFamily: constants.fontFamily,\n    padding: 8,\n    fontWeight: constants.regularFont\n  },\n  stopAutoBuyButton: {\n    padding: 8,\n    fontSize: 14,\n    color: colors.errorRed,\n    fontWeight: constants.regularFont\n  },\n  startAutoBuyButton: {\n    color: colors.textBlue,\n    padding: 8,\n    fontSize: 14,\n    fontWeight: constants.regularFont\n  },\n  inActiveButton: {\n    color: colors.textBlue,\n    fontSize: 14,\n    backgroundColor: colors.backgroundGrey,\n    fontFamily: constants.fontFamily,\n    padding: 8,\n    fontWeight: constants.regularFont\n  },\n  stakingMonitorActive: {\n    fontSize: 32,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 8,\n    marginBottom: 4\n  },\n  stakingMonitorActivePercent: {\n    fontSize: 32,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 4,\n    marginBottom: 4,\n    marginLeft: 1\n  },\n  largeMetricBox: {\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 20,\n    width: 620\n  },\n  stakeTextFSN: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.regularFont,\n    marginLeft: 4\n  },\n  viewTicketDetails: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.regularFont,\n    color: colors.linkBlue\n  },\n  maxIt: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.mediumFont,\n    color: colors.linkBlue,\n    alignSelf: \"flex-end\"\n  },\n  stakeTextVal: {\n    fontSize: 18,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont,\n    color: colors.textBlue,\n    alignSelf: \"flex-end\"\n  },\n  valText: {\n    fontSize: 18,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    color: colors.textBlue,\n    alignSelf: \"flex-end\"\n  },\n  dateValue: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue\n  },\n  statText: {\n    fontSize: 18,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    color: colors.textBlue\n  },\n  infoText: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    color: colors.textGrey,\n    lineHeight: \"1.71\"\n  },\n  infoTextLink: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    color: colors.linkBlue\n  },\n  orderBorder: {\n    backgroundColor: colors.orderGrey,\n    height: 1,\n    width: 556\n  },\n  rewardsGivenBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: 200,\n    height: 132,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  stakeDetailBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    width: 620,\n    padding: 32,\n    flex: 1,\n    flexBasis: \"100%\",\n    marginTop: 24,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  rewardHolderView: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: 388,\n    height: 132,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  rwcTextViewbox: {\n    marginBottom: 16\n  },\n  rewardHolderViewText: {\n    width: 227,\n    marginLeft: 32,\n    flex: 1,\n    flexBasis: \"100%\",\n    justifyContent: \"center\"\n  },\n  rewardHolderViewGradient: {\n    backgroundImage:\n      \"linear-gradient(to right, #ffffff, rgba(255, 255, 255, 0))\",\n    width: 40,\n    marginLeft: 32,\n    position: \"absolute\",\n    height: 130,\n    left: 138\n  },\n  rewardGivenBoxTextHolder: {\n    marginLeft: 32,\n    paddingTop: 8\n  },\n  textNumberOfRewardsGivenType: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.regularFont,\n    marginBottom: 10,\n    marginLeft: 4\n  },\n  textNumberOfRewardsGivenTypeSmaller: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.regularFont,\n    marginBottom: 6,\n    marginLeft: 4\n  },\n  textNumberOfRewardsGiven: {\n    fontSize: 48,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 8\n  },\n  textNumberOfRewardsGivenSmaller: {\n    fontSize: 36,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 8\n  },\n  rewardsGivenBoxRewardCount: {\n    flexDirection: \"row\",\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-start\",\n    marginTop: -2\n  },\n  lineGraph: {\n    width: 216,\n    height: 126,\n    position: \"absolute\",\n    left: 170,\n    overflow: \"visible\"\n  },\n  walletBox: {\n    backgroundColor: colors.tagGrey,\n    borderRadius: 3,\n    width: 620,\n    height: 48,\n    marginTop: 20,\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  walletLabel: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    marginLeft: 32,\n    color: colors.labelGrey\n  },\n  walletLabelAddress: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    marginRight: 32,\n    color: colors.textBlue\n  },\n  stakeDetailText: {\n    color: colors.textBlue,\n    fontSize: 18,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont\n  },\n  stakesPurchaseTicketButtton: {\n    borderRadius: 3,\n    padding: 8,\n    backgroundColor: colors.primaryBlue,\n    color: colors.white,\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont\n  },\n  stakesStopAutoBuy: {\n    borderColor: colors.backgroundGrey,\n    borderWidth: 1,\n    borderRadius: 3,\n    padding: 8,\n    backgroundColor: colors.white\n  },\n  stakesStopAutoBuyText: {\n    backgroundColor: colors.white,\n    color: colors.errorRed,\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont\n  },\n  stakeDetailRow: {\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: 56\n  },\n  fundsDetailRow: {\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: 44\n  },\n  errorForFunds: {\n    fontSize: 12,\n    fontWeight: constants.mediumFont,\n    fontFamily: constants.fontFamily,\n    color: colors.white,\n    backgroundColor: colors.errorRed,\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 8,\n    paddingRight: 8,\n    borderRadius: 3,\n    height: 24,\n    alignSelf: \"center\"\n  },\n  errorForFundsBox: {\n    flex: 1,\n    flexDirection: \"row\",\n    marginRight: 6,\n    alignItems: \"center\"\n  },\n  ticketQuantityInput: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    fontSize: 14,\n    fontFamily: constants.mediumFont,\n    color: colors.labelGrey,\n    height: 36,\n    width: 110,\n    marginTop: 6,\n    marginBottom: 6,\n    alignSelf: \"flex-end\",\n    textAlign: \"right\",\n    paddingRight: 4,\n    paddingLeft: 4,\n    outline: \"none\"\n  },\n  costCalcLineText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.mediumFont,\n    color: colors.labelGrey,\n    alignSelf: \"flex-end\"\n  },\n  purchaseTicketButtonDisabled: {\n    fontSize: 16,\n    width: 556,\n    borderRadius: 3,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.white,\n    backgroundColor: colors.disabledBlue,\n    textAlign: \"center\",\n    padding: 12,\n    marginTop: 20\n  },\n  purchaseTicketButton: {\n    fontSize: 16,\n    width: 556,\n    borderRadius: 3,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.white,\n    backgroundColor: colors.linkBlue,\n    textAlign: \"center\",\n    padding: 12,\n    marginTop: 20\n  },\n  footerText: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont,\n    color: colors.disabledGrey\n  }\n});\n\nexport default Status;\n","import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  Clipboard,\n  TouchableOpacity\n} from \"react-native\";\n\nimport \"../App.css\";\nimport history from \"../history.js\";\nimport colors from \"./colors\";\nimport constants from \"./constants\";\nimport utils from \"../utils\";\nimport moment from \"moment\";\nimport currentDataState from \"../api/currentDataState\";\nimport BlockDisplayer from \"./BlockDisplayer\";\nvar BN = currentDataState.BN;\n\nvar lineGraph = require(\"../images/lineGraph.svg\");\nvar closebutton = require(\"../images/times.svg\");\n\nvar styles;\n\nclass Status extends Component {\n  // this is what i use for production\n  state = {\n    paintKey: 0,\n    ticketDisplayOn: false,\n    lastTicketStatus: \"\",\n    ticketStop: false\n  };\n\n  constructor(props) {\n    super();\n    this.balanceListener = this.balanceListener.bind(this);\n    this.purchaseTikStatus = this.purchaseTikStatus.bind(this);\n    this.leavePage = this.leavePage.bind(this);\n  }\n\n  totalStake(data) {\n    return data.ticketPrice.mul(new BN(data.numberOfTickets));\n  }\n\n  balanceListener(balanceInfo) {\n    currentDataState.setBalanceInfo(balanceInfo);\n    this.setState({ paintKey: this.state.paintKey + 1 });\n  }\n\n  purchaseTikStatus(data) {\n    let ticketStatus = currentDataState.data.ticketPurchasing;\n    if (ticketStatus === undefined) {\n      ticketStatus = { activeTicketPurchase: false };\n    }\n    if (ticketStatus.activeTicketPurchase && !this.setUnload) {\n      this.setUnload = true;\n      window.addEventListener(\"beforeunload\", this.leavePage);\n    } else if (!ticketStatus.activeTicketPurchase && this.setUnload) {\n      this.setUnload = false;\n      window.removeEventListener(\"beforeunload\", this.leavePage);\n    }\n    this.setState({\n      autoBuyOn: data.autoBuyTickets,\n      lastTicketStatus: data.lastCall,\n      ticketStop: false\n    });\n  }\n\n  componentDidMount() {\n    currentDataState.web3api.on(\"balanceInfo\", this.balanceListener);\n    currentDataState.web3api.on(\"purchaseAgain\", this.purchaseTikStatus);\n    currentDataState.web3api.on(\"purchaseCompleted\", this.purchaseTikStatus);\n    currentDataState.web3api.on(\"purchaseStarted\", this.purchaseTikStatus);\n    currentDataState.web3api.on(\n      \"purchaseWaitForNewBlock\",\n      this.purchaseTikStatus\n    );\n    currentDataState.web3api.on(\"purchaseSubmitTicket\", this.purchaseTikStatus);\n  }\n\n  leavePage(e) {\n    let msg =\n      \"Tickets are being bought, are you sure you want to leave this page?\";\n    e.returnValue = msg;\n    return msg;\n  }\n\n  componentWillUnmount() {\n    if (this.setUnload) {\n      this.setUnload = false;\n      window.removeEventListener(\"beforeunload\", this.leavePage);\n    }\n\n    currentDataState.web3api.removeEventListener(\n      \"balanceInfo\",\n      this.balanceListener\n    );\n    currentDataState.web3api.removeEventListener(\n      \"purchaseAgain\",\n      this.purchaseTikStatus\n    );\n    currentDataState.web3api.removeEventListener(\n      \"purchaseCompleted\",\n      this.purchaseTikStatus\n    );\n    currentDataState.web3api.removeEventListener(\n      \"purchaseStarted\",\n      this.purchaseTikStatus\n    );\n    currentDataState.web3api.removeEventListener(\n      \"purchaseWaitForNewBlock\",\n      this.purchaseTikStatus\n    );\n    currentDataState.web3api.removeEventListener(\n      \"purchaseSubmitTicket\",\n      this.purchaseTikStatus\n    );\n  }\n\n  tickRate(data, erc20fsn = true) {\n    let totalTickets = data.totalTickets || 1;\n    if (totalTickets === 0) {\n      totalTickets = 1;\n    }\n    let probablity = 5760 * (1 / totalTickets);\n    let rewardRate = (probablity * (erc20fsn ? 0.625 : 2.5)) / 5000;\n    let yearly = rewardRate * 365 * 100;\n    return yearly.toFixed(yearly > 99 ? 0 : 1) + \"%\";\n  }\n\n  render() {\n    let data = currentDataState.data;\n\n    if (!BN) {\n      BN = currentDataState.BN;\n    }\n\n    if (data.accountUnlocked) {\n      data.web3api.walletAddress = data.signInfo.address;\n    }\n\n    let rewardNumber = data.rewardsToDate;\n    let ticketText = data.totalTickets === 1 ? \"Ticket\" : \"Tickets\";\n    let rewardStyle;\n    let textNumberOfRewardsGivenType;\n    if (rewardNumber.length < 4) {\n      rewardStyle = styles.textNumberOfRewardsGiven;\n      textNumberOfRewardsGivenType = styles.textNumberOfRewardsGivenType;\n    } else {\n      textNumberOfRewardsGivenType = styles.textNumberOfRewardsGivenTypeSmaller;\n      rewardStyle = styles.textNumberOfRewardsGivenSmaller;\n    }\n\n    let displayPercent =\n      data.totalTickets > 0\n        ? utils.displayPercent(data.numberOfTickets / data.totalTickets)\n        : \"0.00\";\n\n    if (displayPercent === \"0.00\" && data.numberOfTickets > 0) {\n      displayPercent = \"< 0.01\";\n    }\n\n    let dt = new moment(data.lastUpdateTime);\n\n    let ticketPurchaseStatus;\n    let ticketStatus = currentDataState.data.ticketPurchasing;\n    if (ticketStatus === undefined) {\n      ticketStatus = { activeTicketPurchase: false };\n    }\n    let msg = ticketStatus.lastStatus;\n\n    if (ticketStatus.activeTicketPurchase) {\n      let widgetWidth = 224;\n      let widgetHeight = 20;\n\n      let width = parseInt(\n        (widgetWidth * ticketStatus.ticketsPurchased) /\n          ticketStatus.ticketQuantity\n      );\n      ticketPurchaseStatus = (\n        <View\n          key=\"ticketPurchaseView\"\n          style={{\n            width: widgetWidth,\n            height: 24,\n            alignItems: \"flex-start\",\n            justifyContent: \"flex-start\"\n          }}\n        >\n          <View style={{ width: 200, height: widgetHeight }}>\n            <View\n              style={{\n                width: widgetWidth,\n                height: widgetHeight,\n                backgroundColor: \"transparent\",\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                borderWidth: 1,\n                borderColor: colors.orderGrey,\n                borderRadius: 3\n              }}\n            />\n            <View\n              style={{\n                width: width,\n                height: widgetHeight,\n                backgroundColor: colors.successGreen,\n                position: \"absolute\",\n                top: 0,\n                left: 0,\n                borderWidth: 1,\n                borderColor: \"transparent\",\n                borderRadius: 3\n              }}\n            />\n            <Text\n              style={[\n                styles.labelLineText,\n                {\n                  width: widgetWidth,\n                  height: widgetHeight,\n                  position: \"absolute\",\n                  textAlign: \"center\",\n                  top: 4,\n                  left: 0\n                }\n              ]}\n            >{`${ticketStatus.ticketsPurchased + 1} of ${\n              ticketStatus.ticketQuantity\n            }`}</Text>\n          </View>\n          <Text\n            style={[styles.labelLineText, { width: widgetWidth, marginTop: 4 }]}\n          >\n            {msg}\n          </Text>\n        </View>\n      );\n    }\n\n    let dtDisplay = dt.toString(); // dt.format(\"YYYY-MM-DD HH:mm:ss.SSS z\");\n\n    if (!data.accountUnlocked) {\n      return (\n        <View style={{ padding: 15 }}>\n          <Text style={styles.Auto_Buy_Stake_Monit}>\n            Your Account Must be unlocked to use this screen.\n          </Text>\n          <TouchableOpacity\n            style={{ width: 100 }}\n            onPress={() => {\n              history.push(\"/UnlockAccount\");\n            }}\n          >\n            <Text style={[styles.stakesPurchaseTicketButtton,{textAlign:'center',width:200}]}>Select An Account</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n\n    if (this.state.ticketDisplayOn) {\n      let tickets = Object.keys(data.allTickets ? data.allTickets : {});\n\n      let ticketViews = [];\n\n      for (let ticket of tickets) {\n        let t = data.allTickets[ticket];\n        let dt = moment(new Date(t.ExpireTime * 1000));\n        let txt = dt.format(\"L LT z\");\n        ticketViews.push(\n          <View key={\"\" + t.ExpireTime}>\n            <View style={styles.ticketDetailRow}>\n              <Text style={[styles.labelLineText, { width: 120 }]}>{txt}</Text>\n              <Text\n                style={[\n                  styles.labelLineText,\n                  { textAlign: \"center\", width: 60 }\n                ]}\n              >\n                {utils.formatWei(data.ticketPrice)}\n              </Text>\n              <Text\n                style={[\n                  styles.labelLineText,\n                  { textAlign: \"right\", width: 366, fontSize: 10 }\n                ]}\n              >\n                {t.ID}\n              </Text>\n            </View>\n            <View style={styles.orderBorder} />\n          </View>\n        );\n      }\n\n      return (\n        <View style={styles.container}>\n          <View>\n            <View style={styles.stakeDetailBox}>\n              <View style={styles.stakeDetailRow}>\n                <Text style={styles.stakeDetailText}>\n                  Ticket Details\n                  <Text style={styles.dateValue}>\n                    {\"  \" +\n                      data.numberOfTickets +\n                      (data.numberOfTickets === 1 ? \" Ticket\" : \" Tickets\")}\n                  </Text>\n                </Text>\n              </View>\n              <View style={styles.ticketDetailRow}>\n                <Text style={[styles.labelLineText, { width: 120 }]}>\n                  Expiration Time\n                </Text>\n                <Text style={[styles.labelLineText, { width: 80 }]}>\n                  Ticket Price\n                </Text>\n                <Text\n                  style={[\n                    styles.labelLineText,\n                    { textAlign: \"right\", width: 340 }\n                  ]}\n                >\n                  Ticket Hash\n                </Text>\n                <View />\n              </View>\n              <View style={styles.orderBorder} />\n              {ticketViews}\n            </View>\n            <TouchableOpacity\n              onPress={() => {\n                this.setState({ ticketDisplayOn: false });\n              }}\n              style={styles.closeButton}\n            >\n              <Image\n                resizeMode=\"contain\"\n                source={closebutton}\n                style={{ width: 14, height: 14 }}\n              />\n            </TouchableOpacity>\n          </View>\n        </View>\n      );\n    }\n\n    return (\n      <View style={{ marginLeft: 30, backgroundColor: colors.backgroundGrey }}>\n        <View style={styles.container}>\n          <View style={styles.titleBox}>\n            <Text style={styles.Auto_Buy_Stake_Monit}>\n              Auto Buy Stake Monitor\n            </Text>\n            <TouchableOpacity>\n              <Text style={styles.lastUpdated}>\n                {`Last Updated: ${dtDisplay}`}\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.walletBox}>\n            <Text style={styles.walletLabel}>Wallet Address</Text>\n            <TouchableOpacity\n              onPress={() => {\n                Clipboard.setString(data.signInfo.address);\n              }}\n            >\n              <Text style={styles.walletLabelAddress}>\n                {data.signInfo.address}\n                <i style={{ marginLeft: 4 }} className=\"fa fa-copy\" />\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <View style={{ height: 10, width: 1 }} />\n          <BlockDisplayer block={data.latestBlock} />\n          <View style={{ height: 10, width: 1 }} />\n          <View style={styles.largeMetricBox}>\n            <View style={styles.rewardHolderView}>\n              <Image\n                resizeMode=\"contain\"\n                source={lineGraph}\n                style={styles.lineGraph}\n              />\n              <View style={styles.rewardHolderViewGradient} />\n              <View style={styles.rewardHolderViewText}>\n                <View style={styles.rwcTextViewbox}>\n                  <Text style={styles.labelLineText}>\n                    Current Reward Probablity\n                  </Text>\n                  <View>\n                    <Text style={styles.stakingMonitorActive}>\n                      {displayPercent}\n                      <Text style={styles.stakingMonitorActivePercent}>%</Text>\n                    </Text>\n                  </View>\n                  <Text style={styles.simpleLineText}>{`${\n                    data.numberOfTickets\n                  } of ${utils.displayNumber(\n                    data.totalTickets,\n                    data.totalTickets < 1000 ? 0 : 2\n                  )} ${ticketText}`}</Text>\n                </View>\n              </View>\n            </View>\n            <View style={styles.rewardsGivenBox}>\n              <View style={styles.rwcTextViewbox}>\n                <View style={styles.rewardGivenBoxTextHolder}>\n                  <Text style={styles.labelLineText}>Rewards to Date</Text>\n                  <View style={styles.rewardsGivenBoxRewardCount}>\n                    <Text style={rewardStyle}>{rewardNumber}</Text>\n                    <Text style={textNumberOfRewardsGivenType}>FSN</Text>\n                  </View>\n                  <View>\n                    <Text style={styles.simpleLineText}>\n                      Ticket Yearly Reward Rate\n                    </Text>\n                    {/* <Text style={[styles.simpleLineText, { marginTop: 4 }]}>\n                      <Text>ERC20FSN</Text>\n                      {\" \" + this.tickRate(data, true) + \" \"}\n                    </Text> */}\n\n                    <Text style={[styles.simpleLineText, { marginTop: 4 }]}>\n                      <Text>FSN</Text>\n                      {\" \" + this.tickRate(data, false) + \" \"}\n                    </Text>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </View>\n          <View style={styles.stakeDetailBox}>\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.stakeDetailText}>Stake Details</Text>\n              <TouchableOpacity\n                disabled={this.state.ticketStop}\n                onPress={() => {\n                  if (!ticketStatus.activeTicketPurchase) {\n                    history.push(\"/PurchaseTicket\");\n                  } else {\n                    if (\n                      window.confirm(\n                        \"Are you sure you want to stop purchasing?\"\n                      )\n                    ) {\n                      this.setState({ ticketStop: true });\n                      currentDataState.web3api.stopTicketPurchase();\n                    }\n                  }\n                }}\n              >\n                {this.handleStakeButtons(data, ticketStatus)}\n              </TouchableOpacity>\n            </View>\n            <View style={{ height: 20 }} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>Staking Status</Text>\n              {ticketPurchaseStatus}\n              {ticketStatus.activeTicketPurchase ? (\n                <Text key=\"ab1\" style={styles.activeButton}>\n                  Active\n                </Text>\n              ) : (\n                <Text key=\"ab1\" style={styles.inActiveButton}>\n                  Inactive\n                </Text>\n              )}\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>Active Tickets</Text>\n              <View>\n                <Text style={styles.stakeTextVal}>\n                  {data.numberOfTickets}\n                  <Text style={styles.stakeTextFSN}>Tickets</Text>\n                </Text>\n                {data.numberOfTickets > 0 && (\n                  <TouchableOpacity\n                    onPress={() => {\n                      this.setState({ ticketDisplayOn: true });\n                    }}\n                  >\n                    <Text style={styles.viewTicketDetails}>\n                      View Ticket Details\n                    </Text>\n                  </TouchableOpacity>\n                )}\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>Rewards to Date</Text>\n              <View>\n                <Text style={styles.stakeTextVal}>\n                  {data.rewardsToDate}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>FSN Staked</Text>\n              <View>\n                <Text style={styles.stakeTextVal}>\n                  {utils.formatWei(this.totalStake(data))}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>FSN Available</Text>\n              <View>\n                <Text style={styles.stakeTextVal}>\n                  {utils.formatWei(data.walletBalance)}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>Timelocked FSN Available</Text>\n              <View>\n                <Text style={styles.stakeTextVal}>\n                  {utils.formatWei(data.timelockUsableBalance)}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            <View style={styles.stakeDetailRow}>\n              <Text style={styles.labelLineText}>Total FSN</Text>\n              <View>\n                <Text style={styles.stakeTextVal}>\n                  {utils.formatWei(\n                    data.timelockUsableBalance.add(\n                      data.walletBalance.add(this.totalStake(data))\n                    )\n                  )}\n                  <Text style={styles.stakeTextFSN}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n            <View style={styles.orderBorder} />\n            {this.state.autoBuyOn && (\n              <View key=\"aaa\">\n                <View style={styles.stakeDetailRow}>\n                  <Text style={styles.labelLineText}>Auto Buy Tickets</Text>\n                  <Text key=\"ab1\" style={styles.activeButton}>\n                    On\n                  </Text>\n                </View>\n                {/* <View style={styles.orderBorder} />\n                <View style={styles.stakeDetailRow}>\n                  <Text style={styles.labelLineText}>Auto Reinvest Reward</Text>\n                  <Text\n                    key=\"ab1\"\n                    style={\n                      data.autoReinvestReward\n                        ? styles.activeButton\n                        : styles.inActiveButton\n                    }\n                  >\n                    {data.autoReinvestReward ? \"On\" : \"Off\"}\n                  </Text>\n                </View> */}\n                {/* <View style={styles.orderBorder} />\n                <View style={styles.stakeDetailRow}>\n                  <Text style={styles.labelLineText}>Auto Buy Stop Time</Text>\n                  <Text style={styles.dateValue}>\n                    {this.state.autoBuyStopTime\n                      ? this.state.autoBuyStopDate.format(\"lll\")\n                      : \"Never\"}\n                  </Text>\n                </View>\n                <View style={styles.orderBorder} />\n                <View style={styles.stakeDetailRow}>\n                  <Text style={styles.labelLineText}>Last Ticket Expires</Text>\n                  <Text style={styles.dateValue}>\n                    {data.lastTicketExpires\n                      ? data.lastTicketExpires.format(\"lll\")\n                      : \"----\"}\n                  </Text> */}\n                {/* </View> */}\n                <View style={styles.orderBorder} />\n              </View>\n            )}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  handleStakeButtons(data, ticketStatus) {\n    if (!ticketStatus.activeTicketPurchase) {\n      return (\n        <Text key=\"ab1\" style={styles.stakesPurchaseTicketButtton}>\n          Purchase Staking Tickets\n        </Text>\n      );\n    }\n    if (ticketStatus.activeTicketPurchase) {\n      return (\n        <View\n          style={{\n            borderRadius: 3,\n            borderWidth: 1,\n            borderColor: this.state.ticketStop\n              ? colors.errorRed\n              : colors.orderGrey\n          }}\n        >\n          <Text key=\"ab1\" style={styles.stopAutoBuyButton}>\n            {!this.state.ticketStop\n              ? this.state.autoBuyOn\n                ? \"Stop AutoBuy\"\n                : \"Stop Purchasing\"\n              : \"Stopping Purchasing\"}\n          </Text>\n        </View>\n      );\n    } else {\n      return (\n        <View\n          style={{\n            borderRadius: 3,\n            borderWidth: 1,\n            borderColor: colors.orderGrey\n          }}\n        >\n          <Text key=\"ab1\" style={styles.startAutoBuyButton}>\n            Start Auto Buy\n          </Text>\n        </View>\n      );\n    }\n  }\n}\n\nstyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginTop: 15,\n    marginLeft: 15,\n    backgroundColor: colors.backgroundGrey\n  },\n  sectionTitle: {\n    fontSize: 24,\n    lineHeight: 32,\n    fontFamily: \"Roboto, san-serif\",\n    fontWeight: constants.boldFont,\n    color: colors.textBlue\n  },\n  sectionNumberTitle: {\n    fontSize: 18,\n    color: \"rgb(22,22,22)\",\n    marginTop: 30,\n    marginBottom: 10\n  },\n  info: {\n    fontSize: 16,\n    color: \"rgba(22,22,22, .5)\"\n  },\n  imageUploadSection: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"transparent\",\n    marginLeft: 35,\n    marginTop: 15\n  },\n  actionButtonDisabled: {\n    backgroundColor: \"#20C0FF\",\n    height: 35,\n    width: 130,\n    opacity: 0.5,\n    boxShadow: \"5px 10px 18px #888888\"\n  },\n  actionButtonTextDisabled: {\n    color: \"#7f7f7f\",\n    fontSize: 19,\n    marginTop: 7,\n    textAlign: \"center\"\n  },\n  actionButton: {\n    backgroundColor: \"#20C0FF\",\n    height: 35,\n    width: 130,\n    boxShadow: \"5px 10px 18px #888888\"\n  },\n  actionButtonText: {\n    color: \"#FFFFFF\",\n    fontSize: 19,\n    marginTop: 7,\n    textAlign: \"center\"\n  },\n  label: {\n    fontSize: 14,\n    color: \"rgba(22,22,22,.5)\",\n    width: 160,\n    marginBottom: 5\n  },\n  balanceBox: {\n    width: 160,\n    marginBottom: 5,\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    flexBasis: \"100%\"\n  },\n  Auto_Buy_Stake_Monit: {\n    fontSize: 24,\n    lineHeight: 32,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont,\n    color: colors.textBlue,\n    marginBottom: 4,\n    alignSelf: \"flex-start\"\n  },\n  lastUpdated: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.labelGrey,\n    alignSelf: \"flex-start\"\n  },\n  labelLineText: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.labelGrey\n  },\n  simpleLineText: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue\n  },\n  activeButton: {\n    color: colors.textGreen,\n    fontSize: 14,\n    backgroundColor: colors.lightSuccessGreen,\n    fontFamily: constants.fontFamily,\n    padding: 8,\n    fontWeight: constants.regularFont\n  },\n  stopAutoBuyButton: {\n    padding: 8,\n    fontSize: 14,\n    color: colors.errorRed,\n    fontWeight: constants.regularFont\n  },\n  startAutoBuyButton: {\n    color: colors.textBlue,\n    padding: 8,\n    fontSize: 14,\n    fontWeight: constants.regularFont\n  },\n  inActiveButton: {\n    color: colors.textBlue,\n    fontSize: 14,\n    backgroundColor: colors.backgroundGrey,\n    fontFamily: constants.fontFamily,\n    padding: 8,\n    fontWeight: constants.regularFont\n  },\n  stakingMonitorActive: {\n    fontSize: 32,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 8,\n    marginBottom: 4\n  },\n  stakingMonitorActivePercent: {\n    fontSize: 32,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 4,\n    marginBottom: 4,\n    marginLeft: 1\n  },\n  largeMetricBox: {\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 20,\n    width: 620\n  },\n  stakeTextFSN: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.regularFont,\n    marginLeft: 4\n  },\n  viewTicketDetails: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.regularFont,\n    color: colors.linkBlue\n  },\n  stakeTextVal: {\n    fontSize: 18,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont,\n    alignSelf: \"flex-end\",\n    color: colors.textBlue\n  },\n  dateValue: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue\n  },\n  orderBorder: {\n    backgroundColor: colors.orderGrey,\n    height: 1,\n    width: 556\n  },\n  rewardsGivenBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: 200,\n    height: 132,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  stakeDetailBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    width: 620,\n    padding: 32,\n    flex: 1,\n    flexBasis: \"100%\",\n    marginTop: 24,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  rewardHolderView: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: 388,\n    height: 132,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  rwcTextViewbox: {\n    marginBottom: 16\n  },\n  rewardHolderViewText: {\n    width: 227,\n    marginLeft: 32,\n    flex: 1,\n    flexBasis: \"100%\",\n    justifyContent: \"center\"\n  },\n  rewardHolderViewGradient: {\n    backgroundImage:\n      \"linear-gradient(to right, #ffffff, rgba(255, 255, 255, 0))\",\n    width: 40,\n    marginLeft: 32,\n    position: \"absolute\",\n    height: 130,\n    left: 138\n  },\n  rewardGivenBoxTextHolder: {\n    marginLeft: 32,\n    paddingTop: 24\n  },\n  textNumberOfRewardsGivenType: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.regularFont,\n    marginBottom: 10,\n    marginLeft: 4\n  },\n  textNumberOfRewardsGivenTypeSmaller: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.regularFont,\n    marginBottom: 6,\n    marginLeft: 4\n  },\n  textNumberOfRewardsGiven: {\n    fontSize: 48,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 8\n  },\n  textNumberOfRewardsGivenSmaller: {\n    fontSize: 36,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginTop: 8\n  },\n  rewardsGivenBoxRewardCount: {\n    flexDirection: \"row\",\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-start\",\n    marginTop: -2\n  },\n  lineGraph: {\n    width: 216,\n    height: 126,\n    position: \"absolute\",\n    left: 170,\n    overflow: \"visible\"\n  },\n  titleBox: {\n    width: 620\n  },\n  walletBox: {\n    backgroundColor: colors.tagGrey,\n    borderRadius: 3,\n    width: 620,\n    height: 48,\n    marginTop: 20,\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  walletLabel: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    marginLeft: 32,\n    color: colors.labelGrey\n  },\n  walletLabelAddress: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    marginRight: 32,\n    color: colors.textBlue\n  },\n  stakeDetailText: {\n    color: colors.textBlue,\n    fontSize: 18,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont\n  },\n  stakesPurchaseTicketButtton: {\n    borderRadius: 3,\n    padding: 8,\n    backgroundColor: colors.primaryBlue,\n    color: colors.white,\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont\n  },\n  stakesStopAutoBuy: {\n    borderColor: colors.backgroundGrey,\n    borderWidth: 1,\n    borderRadius: 3,\n    padding: 8,\n    backgroundColor: colors.white\n  },\n  stakesStopAutoBuyText: {\n    backgroundColor: colors.white,\n    color: colors.errorRed,\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.mediumFont\n  },\n  stakeDetailRow: {\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: 56\n  },\n  ticketDetailRow: {\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    height: 44,\n    width: 620\n  },\n  closeButton: {\n    width: 14,\n    height: 14,\n    position: \"absolute\",\n    right: 18,\n    top: 24,\n    padding: 8\n  }\n});\n\nexport default Status;\n","import React, { Component } from \"react\";\nimport { Text, View, StyleSheet, TouchableOpacity } from \"react-native\";\n\nimport \"../App.css\";\nimport colors from \"./colors\";\nimport constants from \"./constants\";\nimport currentDataState from \"../api/currentDataState\";\nimport \"font-awesome/css/font-awesome.min.css\";\nvar web3api = currentDataState.web3api;\n\nexport default class BlockDisplayer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.lastestBlockListener = this.lastestBlockListener.bind(this);\n    this.state = {};\n\n    this.state.block = null;\n    this.state.expand = false;\n    this.state.displayLeftRight = props.displayLeftRight;\n    if (\n      this.props.match &&\n      this.props.match.params &&\n      this.props.match.params.blockNumber\n    ) {\n      this.state.blockNumberToDisplay = this.props.match.params.blockNumber;\n      this.state.expand = true;\n      this.state.displayLeftRight = true;\n    }\n  }\n\n  render() {\n    let block = this.props.block || this.state.block;\n\n    if (!block) {\n      return <Text>Lastest Block Will Display Here</Text>;\n    }\n\n    if (!this.state.expand) {\n      return (\n        <TouchableOpacity\n          onPress={() => {\n            this.setState({ expand: true });\n          }}\n        >\n          <View style={styles.stakeDetailSmall}>\n            <Text>\n              Latest Block Number = {block.number}\n              <i\n                style={{ color: colors.textBlue, marginLeft: 4 }}\n                className=\"fa fa-caret-down\"\n              />\n            </Text>\n          </View>\n        </TouchableOpacity>\n      );\n    } else {\n      let transactions = [];\n\n      if (block.transactions && block.transactions.length > 0) {\n        for (let tx of block.transactions) {\n          transactions.push(\n            <View key={tx}>\n              <Text>{tx}</Text>\n            </View>\n          );\n        }\n      }\n\n      return (\n        <View style={styles.stakeDetailBox}>\n          <View style={{ flex: 1, flexDirection: \"row\" }}>\n            <TouchableOpacity\n              onPress={() => {\n                this.setState({ expand: false });\n              }}\n            >\n              <Text>\n                Latest Block Number = {block.number}\n                <i\n                  style={{ color: colors.textBlue, marginLeft: 4 }}\n                  className=\"fa fa-caret-up\"\n                />\n              </Text>\n            </TouchableOpacity>\n            {this.state.displayLeftRight && (\n              <View style={{ flex: 1, flexDirection: \"row\" }}>\n                <TouchableOpacity\n                  onPress={() => {\n                    this.cleanupBlock();\n                    //debugger\n                    this.setupBlock(block.number - 1);\n                  }}\n                >\n                  <i\n                    style={{\n                      color: colors.textBlue,\n                      marginLeft: 4,\n                      marginRight: 8,\n                      fontSize: 16\n                    }}\n                    className=\"fa fa-caret-left\"\n                  />\n                </TouchableOpacity>\n                <TouchableOpacity\n                  onPress={() => {\n                    this.setState({ expand: false });\n                  }}\n                >\n                  <i\n                    style={{\n                      color: colors.textBlue,\n                      marginLeft: 4,\n                      fontSize: 16\n                    }}\n                    className=\"fa fa-caret-right\"\n                  />\n                </TouchableOpacity>\n              </View>\n            )}\n          </View>\n          <View style={{ height: 8, width: 1 }} />\n          <View style={styles.orderBorder} />\n\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Time Stamp</Text>\n            <Text style={styles.stakeTextFSN}>\n              ({block.timestamp}) {new Date(block.timestamp * 1000).toString()}\n            </Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Hash</Text>\n            <Text style={styles.stakeTextFSN}>{block.hash}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Parent Hash</Text>\n            <Text style={styles.stakeTextFSN}>{block.parentHash}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Miner</Text>\n            <Text style={styles.stakeTextFSN}>{block.miner}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Nonce</Text>\n            <Text style={styles.stakeTextFSN}>{block.nonce}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Size</Text>\n            <Text style={styles.stakeTextFSN}>{block.size}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Gas Used:</Text>\n            <Text style={styles.stakeTextFSN}>{block.gasUsed}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Gas Limit:</Text>\n            <Text style={styles.stakeTextFSN}>{block.gasLimit}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Transactions #:</Text>\n            <Text style={styles.stakeTextFSN}>{block.transactions.length}</Text>\n          </View>\n          {transactions}\n          <View style={styles.orderBorder} />\n          <View style={styles.blockDetailRow}>\n            <Text style={styles.labelLineText}>Total Difficulty:</Text>\n            <Text style={styles.stakeTextFSN}>{block.totalDifficulty}</Text>\n          </View>\n          <View style={styles.orderBorder} />\n        </View>\n      );\n    }\n  }\n\n  lastestBlockListener(block) {\n    this.setState({ block });\n  }\n\n  setupBlock(blockNumber) {\n    let blockToUse = blockNumber || this.state.blockNumberToDisplay;\n  \n    if (!this.props.block) {\n      if (blockToUse) {\n        web3api.getBlock(true, blockToUse, this.lastestBlockListener);\n      } else {\n        web3api.on(\"latestBlock\", this.lastestBlockListener);\n      }\n    }\n    if (blockNumber !== undefined) {\n      this.setState({ blockNumberToDisplay: blockNumber });\n    }\n  }\n\n  cleanupBlock() {\n    if (!this.props.block) {\n      if (this.state.blockNumberToDisplay) {\n        web3api.getBlock(\n          false,\n          this.state.blockNumberToDisplay,\n          this.lastestBlockListener\n        );\n      } else {\n        web3api.removeEventListener(\"latestBlock\", this.lastestBlockListener);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.setupBlock();\n  }\n\n  componentWillUnmount() {\n    this.cleanupBlock();\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    marginTop: 15,\n    marginLeft: 15,\n    backgroundColor: colors.backgroundGrey\n  },\n  stakeDetailBox: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    width: 620,\n    paddingRight: 32,\n    paddingTop: 12,\n    paddingBottom: 12,\n    paddingLeft: 32,\n    flex: 1,\n    flexBasis: \"100%\",\n    marginTop: 24,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  stakeDetailSmall: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    width: 620,\n    padding: 12,\n    flex: 1,\n    flexBasis: \"100%\",\n    marginTop: 24,\n    overflow: \"visible\",\n    boxShadow: \"0 2px 0 0 rgba(189, 196, 206, 0.2)\"\n  },\n  labelLineText: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.labelGrey\n  },\n  stakeTextFSN: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.regularFont,\n    marginLeft: 4\n  },\n  stakeTextVal: {\n    fontSize: 18,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.boldFont,\n    alignSelf: \"flex-end\",\n    color: colors.textBlue\n  },\n  blockDetailRow: {\n    flex: 1,\n    flexBasis: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: 44\n  },\n  orderBorder: {\n    backgroundColor: colors.orderGrey,\n    height: 1,\n    width: 556\n  }\n});\n","import React, { Component } from \"react\";\nimport {\n  Text,\n  View,\n  StyleSheet,\n  TouchableOpacity,\n  TextInput,\n  ActivityIndicator\n} from \"react-native\";\n\nimport \"../App.css\";\nimport colors from \"./colors\";\nimport constants from \"./constants\";\nimport currentDataState from \"../api/currentDataState\";\nimport \"font-awesome/css/font-awesome.min.css\";\nvar web3api = currentDataState.web3api;\nvar styles;\n\nvar NODESELECT_WIDTH = 180;\nvar NODESELECT_HEIGHT = 44;\n\nexport default class NodeSelect extends Component {\n  state = {\n    initedNode: false,\n    currentNodeAddress: null,\n    newNodeAddress: \"\",\n    error: null,\n    testing: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.connectionListener = this.connectionListener.bind(this);\n\n    var val = window.localStorage.getItem(\"addressMainnet\");\n    var error = null;\n\n    if (!error) {\n      if (this.didOneUpdate) {\n        if (!val) {\n          val = \"wss://mainnetpublicgateway1.fusionnetwork.io:10001\";\n        }\n        this.setState({\n          newNodeAddress: val,\n          currentNodeAddress: val,\n          initedNode: true\n        });\n      } else {\n        if (!val) {\n          val = \"wss://mainnetpublicgateway1.fusionnetwork.io:10001\";\n        }\n        this.state.currentNodeAddress = val;\n        this.state.newNodeAddress = val;\n        this.state.initedNode = true;\n      }\n      return;\n    }\n\n    val = \"\";\n    if (this.didOneUpdate) {\n      this.setState({\n        newNodeAddress: val,\n        currentNodeAddress: null,\n        initedNode: true\n      });\n    } else {\n      this.state.currentNodeAddress = null;\n      this.state.initedNode = true;\n      this.state.newNodeAddress = val;\n      this.state.inputNodeMode = false;\n      this.state.connectionError = false;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    this.didOneUpdate = true;\n  }\n\n  connectionListener(arg, e) {\n    if (this.state.testing) {\n      if (arg[0] === \"error\") {\n        alert(\"Unable to connect to \" + this.state.newNodeAddress);\n        this.setState({ testing: false });\n      }\n      if (arg[0] === \"connected\") {\n        this.setState({\n          connectionError: false,\n          testing: false,\n          currentNodeAddress: this.state.newNodeAddress\n        });\n        window.localStorage.setItem(\"addressMainnet\", this.state.newNodeAddress);\n      }\n    } else {\n      if (arg[0] === \"error\") {\n        this.setState({ connectionError: true });\n      } else if (arg[0] === \"stillgood\" && this.state.connectionError) {\n        this.setState({ connectionError: false });\n      }\n    }\n  }\n\n  setNodeAddress(address) {\n    web3api.setNodeAddress(address);\n  }\n\n  componentDidMount() {\n    web3api.on(\"connectstatus\", this.connectionListener);\n    if (this.state.newNodeAddress && !this.state.testing) {\n      web3api.setNodeAddress(this.state.newNodeAddress);\n    }\n  }\n\n  componentWillUnmount() {\n    web3api.removeEventListener(\"connectstatus\", this.connectionListener);\n  }\n\n  render() {\n    if (this.state.testing) {\n      let nodeString = this.state.newNodeAddress;\n      if (nodeString.length > 18) {\n        nodeString = nodeString.substr(0, 15) + \"...\";\n      }\n      return (\n        <View style={styles.testingBackground}>\n          <View\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\"\n            }}\n          >\n            <Text style={[styles.testingNode, { marginRight: 4 }]}>\n              {nodeString}\n            </Text>\n            <ActivityIndicator animating={true} />\n          </View>\n        </View>\n      );\n    }\n\n    if (this.state.error) {\n      return (\n        <TouchableOpacity\n          onPress={() => {\n            this.setState({ error: undefined });\n          }}\n        >\n          <View style={styles.errorBackground}>\n            <Text adjustsFontSizeToFit={true} style={styles.errorText}>\n              {this.state.error}\n            </Text>\n          </View>\n        </TouchableOpacity>\n      );\n    }\n\n    if (this.state.inputNodeMode) {\n      return (\n        <View style={styles.inputBackground}>\n          <TextInput\n            style={styles.nodeInput}\n            placeholder=\"http(s):// or ws(s):// address:port\"\n            autoCorrect={false}\n            placeholderTextColor={colors.orderGrey}\n            maxLength={128}\n            value={this.state.newNodeAddress}\n            clearButtonMode=\"always\"\n            onChangeText={val => {\n              this.setState({ newNodeAddress: val });\n            }}\n            autoFocus={true}\n            onBlur={() => {\n              this.setState({ inputNodeMode: false });\n            }}\n            onKeyPress={a => {\n              if (a.charCode === 13) {\n                if (this.state.newNodeAddress) {\n                  this.setState({ testing: true, connectionError: false });\n                  this.setNodeAddress(this.state.newNodeAddress);\n                } else {\n                  this.setState({ inputNodeMode: false });\n                }\n              }\n            }}\n          />\n        </View>\n      );\n    }\n\n    if (!this.state.currentNodeAddress) {\n      return (\n        <TouchableOpacity\n          onPress={() => {\n            this.setState({ inputNodeMode: true });\n          }}\n        >\n          <View style={styles.inputBackground}>\n            <Text style={styles.selectNode}>Select Node</Text>\n          </View>\n        </TouchableOpacity>\n      );\n    }\n\n    let nodeString = this.state.currentNodeAddress;\n    if (nodeString.length > 26) {\n      nodeString = nodeString.substr(0, 23) + \"...\";\n    }\n\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.setState({ inputNodeMode: true });\n        }}\n      >\n        <View\n          style={\n            this.state.connectionError\n              ? styles.errorBackground\n              : styles.standardBackground\n          }\n        >\n          <View\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\"\n            }}\n          >\n            {!this.state.connectionError && (\n              <i\n                key=\"c11\"\n                className=\"fa fa-check-circle\"\n                style={{ color: colors.successGreen, marginRight: 4 }}\n              />\n            )}\n            <Text style={[styles.standardNode, { marginRight: 4 }]}>\n              {nodeString}\n            </Text>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nstyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  errorBackground: {\n    width: NODESELECT_WIDTH,\n    height: NODESELECT_HEIGHT,\n    borderRadius: 3,\n    backgroundColor: colors.errorRed,\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  errorText: {\n    fontSize: 12,\n    fontFamily: constants.mediumFont,\n    color: colors.white\n  },\n  nodeInput: {\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    fontSize: 12,\n    fontFamily: constants.mediumFont,\n    color: colors.labelGrey,\n    width: NODESELECT_WIDTH - 32,\n    height: NODESELECT_HEIGHT - 12,\n    outline: \"none\",\n    paddingLeft: 2,\n    paddingRight: 2,\n    paddingTop: 4,\n    paddingBottom: 4\n    //clearButtonMode : 'always'\n  },\n  standardNode: {\n    color: colors.textBlue,\n    fontSize: 12,\n    fontWeight: constants.regularFont,\n    fontFamily: constants.fontFamily\n  },\n  standardBackground: {\n    width: NODESELECT_WIDTH,\n    height: NODESELECT_HEIGHT,\n    borderRadius: 3,\n    borderWidth: 1,\n    borderColor: colors.orderGrey,\n    backgroundColor: colors.white,\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  inputBackground: {\n    width: NODESELECT_WIDTH,\n    height: NODESELECT_HEIGHT,\n    borderRadius: 3,\n    backgroundColor: colors.linkBlue,\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  testingNode: {\n    fontSize: 12,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.black,\n    textAlign: \"center\"\n  },\n  testingBackground: {\n    width: NODESELECT_WIDTH,\n    height: NODESELECT_HEIGHT,\n    borderRadius: 3,\n    backgroundColor: colors.lightSuccessGreen,\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    overflow: \"hidden\"\n  },\n  selectNode: {\n    fontSize: 14,\n    fontFamily: constants.fontFamily,\n    fontWeight: constants.regularFont,\n    color: colors.white,\n    backgroundColor: colors.linkBlue,\n    textAlign: \"center\"\n  }\n});\n","import React, { Component } from \"react\";\nimport { View, Text, Image, StyleSheet, TouchableOpacity } from \"react-native\";\nimport colors from \"../colors\";\nimport constants from \"../constants\";\nimport NodeSelect from \"../NodeSelect.js\"\n\nvar fusionLogo = require(\"../../images/explorer-logo.svg\");\nvar boxes = require(\"./9Boxes.svg\");\n\n\nlet glb_appSelect\nlet glb_header\n\nexport default class Header extends Component {\n \n  constructor(props) {\n    super(props)\n    glb_header = this\n    this.state = {\n      appSelectOpen : false\n    }\n  }\n\n  static setAppDisplay( appdisplay ) {\n    glb_appSelect = appdisplay\n  }\n  static hideAppDisplay() {\n      glb_appSelect.setState( { appSelectOpen : false })\n      glb_header.setState( { appSelectOpen : false })\n  }\n\n  render() {\n    let width = this.props.titleWidth || 150;\n    let appBKColoor = this.state.appSelectOpen ? colors.backgroundGrey : colors.white\n    return (\n      <View style={styles.container}>\n        <View\n          style={{\n            flex: 1,\n            flexDirection: \"row\",\n            flexBasis : 'auto',\n            justifyContent: \"flex-start\",\n            alignItems: \"center\"\n          }}\n        >\n          <Image\n            source={fusionLogo}\n            resizeMode=\"contain\"\n            style={{ marginLeft: 80, width: 129, height: 29 }}\n          />\n          <TouchableOpacity onPress={()=>{\n            glb_appSelect.setState( { appSelectOpen : !this.state.appSelectOpen })\n            this.setState( { appSelectOpen : !this.state.appSelectOpen })\n          }}>\n            <View style={[styles.appSelect, { backgroundColor: appBKColoor, width: width }]}>\n              <Image\n                source={boxes}\n                resizeMode=\"contain\"\n                style={{ marginLeft: 8, width: 18, height: 18 }}\n              />\n              <Text style={styles.titleAutoBuy}>{this.props.title}</Text>\n            </View>\n          </TouchableOpacity>\n          <Text style={styles.programVersion}>{this.props.version}</Text>\n        </View>\n        {/* <View style={styles.nodeSelectBox}>\n            <NodeSelect/>\n        </View> */}\n        {this.props.nodeSelect && (  <View style={styles.nodeSelectBox}>\n            <NodeSelect/>\n        </View>) }\n      </View>\n    );\n  }\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexBasis : 'auto',\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    height: 72,\n    width: \"100%\",\n    backgroundColor: colors.white,\n    overflow: \"visible\",\n    boxShadow: \"inset 0 -1px 0 0 #bdc4ce\"\n  },\n  appSelect: {\n    height: 40,\n    flex: 1,\n    flexBasis : 'auto',\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    marginLeft: 16,\n    overflow: \"visible\",\n    boxShadow: \"inset 0 -1px 0 0 #bdc4ce\",\n    borderWidth: 1,\n    borderRadius: 3,\n    borderColor: colors.orderGrey\n  },\n  popupMenuBox : {\n    backgroundColor : colors.primaryBlue,\n    width : 224,\n    boxShadow: \"0 8px 16px 0 rgba(0, 15, 33, 0.16), 0 0 8px 0 rgba(0, 15, 33, 0.08);\",\n    borderWidth: 1,\n    borderRadius: 3,\n    borderColor: colors.orderGrey,\n    position : 'absolute',\n    top : 64,\n    left: 224,\n    padding : 16\n  },\n  borderTitle: {\n    width: 0.9,\n    backgroundColor: colors.grey,\n    height: 19,\n    marginLeft: 14,\n    marginRight: 14\n  },\n  titleAutoBuy: {\n    fontFamily: constants.fontFamily,\n    fontSize: 16,\n    fontWeight: constants.boldFont,\n    marginLeft: 8,\n    color: colors.textBlue\n  },\n  programVersion: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue,\n    padding: 2,\n    marginLeft: 16,\n    backgroundColor: colors.grey\n  },\n  nodeSelectBox: {\n    alignSelf: \"center\",\n    marginRight: 32,\n    marginLeft: 32\n  }\n});\n","import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  TouchableOpacity\n} from \"react-native\";\nimport colors from \"../colors\";\nimport constants from \"../constants\";\nimport NodeSelect from \"../NodeSelect\";\nimport Header from \"./Header\";\n\nvar fusionLogo = require(\"../../images/explorer-logo.svg\");\nvar wallet = require(\"./wallet.svg\");\nvar asset = require(\"./asset.svg\");\nvar autobuy = require(\"./autobuy.svg\");\nvar block = require(\"./block.svg\");\nvar network = require(\"./network.svg\");\nvar swap = require(\"./swap.svg\");\n\nclass SelectItem extends Component {\n    state = {\n        hover : false\n    }\n    render( ) {\n        let bkc = this.state.hover ? colors.backgroundGrey : colors.white\n\n        return (\n            <TouchableOpacity onPress={()=>{\n\n                window.open( this.props.link )\n                Header.hideAppDisplay()\n            }}>\n            <View  onMouseEnter={()=>{\n                this.setState( { hover : true } )\n            }}\n            onMouseLeave={()=>{\n                this.setState( { hover : false } )\n            }}\n             style={{flex:1,flexDirection:'row',alignItems:'center',\n             marginBottom : 16,\n             justifyContent:'flex-start', backgroundColor : bkc}}>\n                 <Image\n                source={this.props.image}\n                resizeMode=\"contain\"\n                style={{marginRight : 16, width: 14, height: 14 }}\n              />\n                <Text style={styles.selectItemText}>{this.props.text}</Text>\n            </View>\n            </TouchableOpacity>\n        )\n    }\n}\nexport default class AppSelect extends Component {\n \n  constructor( props ) {\n      super(props)\n      this.state = {\n        appSelectOpen: false\n      };\n      Header.setAppDisplay(this)\n  }\n  render() {\n    if ( !this.state.appSelectOpen ) {\n        return  <View></View>;\n    }\n    return (\n      <TouchableWithoutFeedback\n        onPress={() => {\n          Header.hideAppDisplay()\n        }}\n      >\n        <View style={styles.modalBackground}>\n          <View style={styles.popupMenuBox}>\n            <Text style={styles.appsText}>Apps</Text>\n            <SelectItem image={wallet} text=\"My Wallet\" link=\"https://www.myfusionwallet.com\"/>\n            <SelectItem image={asset} text=\"Asset Gateway\" link=\"https://assetgateway.fusionnetwork.io\"/>\n            <SelectItem image={autobuy} text=\"Auto Buy Stake\" link=\"https://tickets.fusionnetwork.io\"/>\n            <SelectItem image={block} text=\"Block Explorer\" link=\"https://blocks.fusionnetwork.io\"/>\n            <SelectItem image={network} text=\"Network Monitor\" link=\"http://node.fusionnetwork.io\"/>\n          </View>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nvar styles = StyleSheet.create({\n  modalBackground: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0,0,0,0)\"\n  },\n  popupMenuBox: {\n    backgroundColor: colors.white,\n    width: 224,\n    boxShadow:\n      \"0 8px 16px 0 rgba(0, 15, 33, 0.16), 0 0 8px 0 rgba(0, 15, 33, 0.08);\",\n    borderWidth: 1,\n    borderRadius: 3,\n    borderColor: colors.orderGrey,\n    position: \"absolute\",\n    top: 64,\n    left: 224,\n    padding: 16\n  },\n  selectItemText : {\n    fontFamily: constants.fontFamily,\n    fontSize: 14,\n    fontWeight: constants.boldFont,\n    color: colors.textBlue,\n  },\n  appsText : {\n    fontFamily: constants.fontFamily,\n    fontSize: 14,\n    fontWeight: constants.regularFont,\n    color: colors.labelGrey,\n    marginBottom : 16\n  },\n  borderTitle: {\n    width: 0.9,\n    backgroundColor: colors.grey,\n    height: 19,\n    marginLeft: 14,\n    marginRight: 14\n  },\n  titleAutoBuy: {\n    fontFamily: constants.fontFamily,\n    fontSize: 16,\n    fontWeight: constants.boldFont,\n    marginLeft: 8,\n    color: colors.textBlue\n  },\n  programVersion: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue,\n    padding: 2,\n    marginLeft: 16,\n    backgroundColor: colors.grey\n  },\n  nodeSelectBox: {\n    alignSelf: \"center\",\n    marginRight: 32,\n    marginLeft: 32\n  }\n});\n","\nimport EventEmitter from \"events\";\nimport history from \"../history.js\";\nimport utils from \"../utils\";\n\nconst rp = require(\"request-promise\");\n\n\nvar datablock = {\n  priceInfo: {},\n  transactions: {},\n  blocks: {},\n  ticketNumber : \"-\",\n  totalTransactions: \"-\",\n  lastUpdateTime: new Date(),\n  last5Blocks: [],\n  last5Transactions: [],\n  menuPath: \"Dashboard\",\n  blockCache: {},\n  pendingLoad: {},\n  pendingTLoad: {},\n  cacheTLoad: {},\n  pendingALoad: {},\n  cacheALoad: {},\n  pendingAsLoad: {},\n  cacheAsLoad: {},\n  letPageTransactionCache: {},\n  letPageTransactionCachePending: {},\n  letPageBlockCache: {},\n  letPageBlockCachePending: {},\n  letPageAddressCache: {},\n  letPageAddressCachePending: {},\n  letPageAssetCache: {},\n  letPageAssetCachePending: {},\n  totalAddresses: 0,\n  totalAssets: 0,\n  maxBlock: 0,\n  address: {},\n  asset : {}\n};\n\nlet eventEmitter = new EventEmitter();\n\nlet server = utils.getServer()\n\nfunction scheduleRefresh() {\n  setTimeout(() => {\n    getServerRefresh();\n  }, 7500);\n}\n\ngetServerRefresh();\n\nfunction getServerRefresh() {\n  const requestOptions = {\n    method: \"GET\",\n    uri: server + \"/fsnprice\",\n    qs: {\n      sort: \"desc\"\n    },\n    headers: {\n      \"X-Content-Type-Options\": \"nosniff\"\n    },\n    json: true,\n    gzip: true\n  };\n\n  rp(requestOptions)\n    .then(response => {\n      if (response) {\n        //if ( datablock.)\n        //   if ( datablock.maxBlock !== response.maxBlock ||\n        //   datablock.totalTransactions !== response.totalTransactions ||\n        //   datablock.priceInfo._id !== response.data.priceInfo._id )\n        //  {\n        //we want to always update the update time\n        let getNext5 = false;\n        console.log(response);\n        if (datablock.maxBlock !== response.maxBlock) {\n          getNext5 = true;\n          datablock.maxBlock = response.maxBlock;\n        }\n        datablock.totalTransactions = response.totalTransactions;\n        datablock.priceInfo = response.priceInfo;\n        datablock.lastTwoBlocks = response.lastTwoBlocks;\n        datablock.totalAddresses = response.totalAddresses;\n        datablock.totalAssets = response.totalAssets;\n\n        datablock.lastUpdateTime = new Date();\n        if (getNext5) {\n          fetchNext5();\n        }\n        currentDataState.emit(\"data\", datablock);\n        // }\n        /*\n        circulating_supply: 29704811.2\n        last_updated: \"2018-12-09T10:32:21.000Z\"\n        market_cap: 19564463.42403713\n        percentChange1H: -3.55823\n        percentChange24H: 1.27305\n        price: 0.658629448688\n        recCreated: \"2018-12-09T10:34:37.000Z\"\n        recEdited: \"2018-12-09T10:34:37.000Z\"\n        total_supply: 57344000\n        _id: \"2018-12-09T15:34:32.062Z\"\n        */\n      }\n      scheduleRefresh();\n    })\n    .catch(err => {\n      console.log(\"API call error:\", err.message);\n      scheduleRefresh();\n    });\n}\n\nfunction fetchNext5() {\n  const requestOptions = {\n    method: \"GET\",\n    uri: server + \"/blocks/all\",\n    qs: {\n      sort: \"desc\",\n      page: 0,\n      size: 5\n    },\n    headers: {\n      \"X-Content-Type-Options\": \"nosniff\"\n    },\n    json: true,\n    gzip: true\n  };\n\n  rp(requestOptions)\n    .then(response => {\n      if (response) {\n        let ticketNumber \n        console.log(\"555555\");\n        console.log(response);\n        datablock.last5Blocks = response;\n        currentDataState.emit(\"data\", datablock);\n        for (let b of response) {\n          if ( !ticketNumber ) {\n            try {\n              ticketNumber = JSON.parse(b.tickInfo).ticketNumber\n            } catch (e ) {\n\n            }\n          }\n          datablock.blockCache[b.hash] = b;\n          datablock.blockCache[b.height] = b;\n        }\n        if ( ticketNumber && datablock.ticketNumber !== ticketNumber ) {\n          datablock.ticketNumber = ticketNumber\n          currentDataState.emit(\"ticketNumber\", ticketNumber );\n        }\n        return getNext5Transactions();\n      }\n      return true;\n    })\n    .catch(err => {\n      console.log(\"Fetch next blocks API call error:\", err.message);\n      setTimeout(fetchNext5, 1000);\n    });\n}\n\nfunction getNext5Transactions() {\n  const requestOptions = {\n    method: \"GET\",\n    uri: server + \"/transactions/all\",\n    qs: {\n      sort: \"desc\",\n      page: 0,\n      size: 5\n    },\n    headers: {\n      \"X-Content-Type-Options\": \"nosniff\"\n    },\n    json: true,\n    gzip: true\n  };\n\n  return rp(requestOptions)\n    .then(response => {\n      if (response) {\n        // console.log(\"TTTT\");\n        // console.log(response);\n        datablock.last5Transactions = response;\n        currentDataState.emit(\"data\", datablock);\n      }\n      return true;\n    })\n    .catch(err => {\n      console.log(\"Fetch next blocks API call error:\", err.message);\n      setTimeout(getNext5Transactions, 1000);\n    });\n}\n\nexport default class currentDataState {\n  static get datablock() {\n    return datablock;\n  }\n\n  static blockInfo(balanceInfo) {}\n\n  /**\n   * Adds the @listener function to the end of the listeners array\n   * for the event named @eventName\n   * Will ensure that only one time the listener added for the event\n   *\n   * @param {string} eventName\n   * @param {function} listener\n   */\n  static on(eventName, listener) {\n    eventEmitter.on(eventName, listener);\n    listener(\"data\", datablock);\n  }\n\n  /**\n   * Will temove the specified @listener from @eventname list\n   *\n   * @param {string} eventName\n   * @param {function} listener\n   */\n  static removeEventListener(eventName, listener) {\n    eventEmitter.removeListener(eventName, listener);\n  }\n  /**\n   * Will emit the event on the evetn name with the @payload\n   * and if its an error set the @error value\n   *\n   * @param {string} event\n   * @param {object} payload\n   * @param {boolean} error\n   */\n  static emit(event, payload, error = false) {\n    eventEmitter.emit(event, payload, error);\n  }\n  /**\n   * Returns the event emitter\n   * Used for testing purpose and avoid using this during development\n   */\n  static getEventEmitter() {\n    return eventEmitter;\n  }\n\n  static setMenuPath(path) {\n    datablock.menuPath = path;\n    eventEmitter.emit(\"menuPathChanged\", path, false);\n  }\n\n  static getBlock(blockNumber) {\n    let b = datablock.blockCache[blockNumber];\n    if (b) {\n      if (!b.parsed) {\n        b.parsed = JSON.parse(b.block);\n      }\n      return b;\n    }\n\n    if (datablock.pendingLoad[blockNumber]) {\n      return \"loading\";\n    }\n\n    datablock.pendingLoad[blockNumber] = true;\n\n    if (typeof blockNumber === \"string\" && blockNumber.startsWith(\"0x\")) {\n      currentDataState.requestBlockRange(blockNumber, blockNumber);\n      return \"loading\";\n    }\n    // lets request 10 blocks\n    let blockStart = blockNumber;\n    if (blockNumber < 5) {\n      blockStart -= 5;\n    }\n    currentDataState.requestBlockRange(blockStart, blockNumber, blockNumber);\n    return \"loading\";\n  }\n\n  static requestBlockRange(blockStart, keyToLoad, orgVal) {\n    let page = 0,\n      size = 1;\n    let uri = server + \"/blocks/\" + blockStart;\n\n    if (typeof blockStart !== \"string\" || !blockStart.startsWith(\"0x\")) {\n      // debugger\n      page = parseInt(parseInt(blockStart) / 10);\n      size = 10;\n      uri = server + \"/blocks/all\";\n    }\n\n    const requestOptions = {\n      method: \"GET\",\n      uri,\n      qs: {\n        sort: \"asc\",\n        page,\n        size\n      },\n      headers: {\n        \"X-Content-Type-Options\": \"nosniff\"\n      },\n      json: true,\n      gzip: true\n    };\n\n    return rp(requestOptions)\n      .then(response => {\n        if (response) {\n          //console.log( \"yyyyyy\")\n          //console.log( response )\n\n          for (let b of response) {\n            datablock.blockCache[b.hash] = b;\n            datablock.blockCache[b.height] = b;\n          }\n          eventEmitter.emit(\"blocksLoaded\", datablock, false);\n        }\n        delete datablock.pendingLoad[keyToLoad];\n        return true;\n      })\n      .catch(err => {\n        console.log(\"Fetch next blocks API call error:\", err.message);\n        delete datablock.pendingLoad[keyToLoad];\n        setTimeout(() => {\n          currentDataState.requestBlockRange(blockStart, keyToLoad, orgVal);\n        }, 1000);\n      });\n  }\n\n  // pendingTLoad : {},\n  // cacheTLoad : {},\n\n  static convertNumberToStringJSON( str , item ) {\n    item = '\"' + item + '\":'\n    let i = str.indexOf( item )\n    if ( i < 1) {\n      return\n    }\n    let val = str.substr( i + item.length )\n    let ret = \"\"\n    let len = val.length\n    for ( let x = 0 ; x < len ; x++ ) {\n      let c = val.charAt( x )\n      if ( c >= \"0\" && c <= \"9\" ) {\n        ret += c\n      } else {\n        break\n      }\n    }\n    return ret \n  }\n\n  static getTransaction(t) {\n    t= t.toLowerCase()\n    let tr = datablock.transactions[t];\n    if (tr) {\n      if (!tr.parsed) {\n        tr.transaction = JSON.parse(tr.transaction);\n        try {\n          tr.rawData = tr.data\n          tr.data = JSON.parse(tr.data);\n          if ( tr.data.Value ) {\n            tr.data.Value = currentDataState.convertNumberToStringJSON( tr.rawData, \"Value\" )\n          }\n        } catch (e) {}\n        tr.receipt = JSON.parse(tr.receipt);\n        tr.parsed = true;\n      }\n      return tr;\n    }\n\n    if (datablock.pendingTLoad[t]) {\n      return \"loading\";\n    }\n\n    let startTimer = Object.keys(datablock.cacheTLoad).length === 0;\n\n    datablock.pendingTLoad[t] = true;\n\n    datablock.cacheTLoad[t] = true;\n\n    if (startTimer && !datablock.disableTLoader) {\n      setTimeout(currentDataState.executeLoadOfTransactions, 1);\n    }\n\n    return \"loading\";\n  }\n\n  static executeLoadOfTransactions(c) {\n    let uri = server + \"/transactions/ts\";\n\n    if ( !c ) {\n \n      // lets take 20 at a time\n      let p = Object.keys(datablock.cacheTLoad);\n      if ( p.length > 40 ) {\n        p = p.slice( 0, 20 )\n      }\n      // then delete from cache\n      for ( let k of p ) {\n        delete datablock.cacheTLoad[k]\n      }\n\n      c = p\n    }\n\n    let cacheToProces = c \n    if (!c) {\n      datablock.cacheTLoad = {};\n    }\n    if (cacheToProces.length === 0) {\n      return;\n    }\n    datablock.disableTLoader = true;\n\n    const requestOptions = {\n      method: \"GET\",\n      uri,\n      qs: {\n        ts: cacheToProces.join(\"-\")\n      },\n      headers: {\n        \"X-Content-Type-Options\": \"nosniff\"\n      },\n      json: true,\n      gzip: true\n    };\n\n    return rp(requestOptions)\n      .then(response => {\n        if (response) {\n          //console.log(\"yyyTTTTTTyy\" + cacheToProces.join(\"-\"), requestOptions);\n          //console.log(response);\n\n          for (let t of response) {\n            datablock.transactions[t.hash] = t;\n            delete datablock.pendingTLoad[t.hash];\n          }\n          datablock.disableTLoader = false;\n          eventEmitter.emit(\"transactionsLoaded\", datablock, false);\n          if ( Object.keys(datablock.cacheTLoad).length )  {\n            setTimeout( currentDataState.executeLoadOfTransactions, 1 )\n          }\n        }\n        return true;\n      })\n      .catch(err => {\n        console.log(\"Fetch next transaction API call error:\", err);\n        setTimeout(() => {\n          currentDataState.executeLoadOfTransactions(cacheToProces);\n        }, 100);\n      });\n  }\n\n  static generateAddressList(index, sortField, direction, size, callback) {\n    let uri = server + \"/balances/all\";\n    let qs = { index, sortField, direction };\n    let qsStringify = JSON.stringify(qs);\n\n    if (datablock.letPageAddressCache[qsStringify]) {\n      return datablock.letPageAddressCache[qsStringify];\n    }\n\n    if (datablock.letPageAddressCachePending[qsStringify]) {\n      return \"loading\";\n    }\n\n    datablock.letPageAddressCachePending[qsStringify] = true;\n\n    // http://localhost:3000/transactions/all?sort=asc&page=20&size=10&field=height\n\n    const requestOptions = {\n      method: \"GET\",\n      uri,\n      qs: {\n        index: index,\n        size: size,\n        sort: direction,\n        field: sortField\n      },\n      headers: {\n        \"X-Content-Type-Options\": \"nosniff\"\n      },\n      json: true,\n      gzip: true\n    };\n\n    rp(requestOptions)\n      .then(response => {\n        if (response) {\n          let tss = [];\n          for (let t of response) {\n            datablock.address[t._id] = t;\n            tss.push(t._id);\n          }\n          datablock.letPageAddressCache[qsStringify] = tss;\n          callback(null, datablock.letPageAddressCache[qsStringify]);\n        }\n        delete datablock.letPageAddressCachePending[qsStringify];\n        return true;\n      })\n      .catch(err => {\n        delete datablock.letPageAddressCachePending[qsStringify];\n        callback(err, null);\n      });\n\n    return \"loading\";\n  }\n  static generateTransactionListFromTime(\n    index,\n    sortField,\n    direction,\n    size,\n    callback,\n    onlyThisAddress\n  ) {\n    let uri = server + \"/transactions/all\";\n    let qs = { index, sortField, direction };\n    let qsStringify = JSON.stringify(qs);\n\n    if (datablock.letPageTransactionCache[qsStringify]) {\n      return datablock.letPageTransactionCache[qsStringify];\n    }\n\n    if (datablock.letPageTransactionCachePending[qsStringify]) {\n      return \"loading\";\n    }\n\n    datablock.letPageTransactionCachePending[qsStringify] = true;\n\n    // http://localhost:3000/transactions/all?sort=asc&page=20&size=10&field=height\n\n    const requestOptions = {\n      method: \"GET\",\n      uri,\n      qs: {\n        index: index,\n        size: size,\n        sort: direction,\n        field: sortField,\n        address : onlyThisAddress\n      },\n      headers: {\n        \"X-Content-Type-Options\": \"nosniff\"\n      },\n      json: true,\n      gzip: true\n    };\n\n    // console.log(\"Requesting \" , requestOptions )\n\n    rp(requestOptions)\n      .then(response => {\n        if (response) {\n          let tss = [];\n          for (let t of response) {\n            datablock.transactions[t.hash] = t;\n            tss.push(t.hash);\n          }\n          datablock.letPageTransactionCache[qsStringify] = tss;\n          callback(null, datablock.letPageTransactionCache[qsStringify]);\n        }\n        delete datablock.letPageTransactionCachePending[qsStringify];\n        return true;\n      })\n      .catch(err => {\n        delete datablock.letPageTransactionCachePending[qsStringify];\n        callback(err, null);\n      });\n\n    return \"loading\";\n  }\n\n  static generateBlockList(index, sortField, direction, size, callback) {\n    let uri = server + \"/blocks/all\";\n    let qs = { index, sortField, direction };\n    let qsStringify = JSON.stringify(qs);\n\n    if (datablock.letPageBlockCache[qsStringify]) {\n      return datablock.letPageBlockCache[qsStringify];\n    }\n\n    if (datablock.letPageBlockCachePending[qsStringify]) {\n      return \"loading\";\n    }\n\n    datablock.letPageBlockCachePending[qsStringify] = true;\n\n    // http://localhost:3000/transactions/all?sort=asc&page=20&size=10&field=height\n\n    const requestOptions = {\n      method: \"GET\",\n      uri,\n      qs: {\n        index: index,\n        size: size,\n        sort: direction,\n        field: sortField\n      },\n      headers: {\n        \"X-Content-Type-Options\": \"nosniff\"\n      },\n      json: true,\n      gzip: true\n    };\n\n    rp(requestOptions)\n      .then(response => {\n        if (response) {\n          let bbb = [];\n          for (let b of response) {\n            b.parsed = JSON.parse(b.block);\n            datablock.blockCache[b.hash] = b;\n            datablock.blockCache[b.height] = b;\n            bbb.push(b);\n          }\n          datablock.letPageBlockCache[qsStringify] = bbb;\n          //debugger\n          callback(null, bbb);\n        }\n        delete datablock.letPageBlockCachePending[qsStringify];\n        return true;\n      })\n      .catch(err => {\n        delete datablock.letPageBlockCachePending[qsStringify];\n        callback(err, null);\n      });\n\n    return \"loading\";\n  }\n\n  static getAddress(t) {\n    t= t.toLowerCase()\n    let tr = datablock.address[t];\n    if (tr) {\n      if (!tr.parsed) {\n        tr.balanceInfo = JSON.parse(tr.balanceInfo);\n        tr.parsed = true;\n      }\n      return tr;\n    }\n\n    if (datablock.pendingALoad[t]) {\n      return \"loading\";\n    }\n\n    let startTimer = Object.keys(datablock.cacheALoad).length === 0;\n\n    datablock.pendingALoad[t] = true;\n\n    datablock.cacheALoad[t] = true;\n\n    if (startTimer && !datablock.disableALoader) {\n      setTimeout(currentDataState.executeLoadOfAddresses, 1);\n    }\n\n    return \"loading\";\n  }\n\n  static async doSearch(searchText) {\n    let uri = server + \"/search/\" + searchText;\n\n    const requestOptions = {\n      method: \"GET\",\n      uri,\n      qs: {\n      },\n      headers: {\n        \"X-Content-Type-Options\": \"nosniff\"\n      },\n      json: true,\n      gzip: true\n    };\n\n    try {\n      let response = await rp(requestOptions);\n      if ( response ) {\n        if ( response.address ) {\n            let address = response.address[0]._id\n            currentDataState.setMenuPath(\"Addresses\");\n            history.push(`/Addresses/${address}`);\n        } else if ( response.block ) {\n          let address = response.block[0].hash\n          currentDataState.setMenuPath(\"Blocks\");\n          history.push(`/Blocks/${address}`);\n        } else if ( response.transaction ) {\n          let address = response.transaction[0].hash\n          currentDataState.setMenuPath(\"Transactions\");\n          history.push(`/Transactions/${address}`);\n        }\n        return true\n      } else {\n        window.alert(\"no items found\")\n        return false\n      }\n    } catch ( ee ) {\n      window.alert(\"unable to talk to server\")\n      return false\n    }\n  }\n\n  static executeLoadOfAddresses(c) {\n    let uri = server + \"/balances/ts\";\n\n    if ( !c ) {\n      // lets take 20 at a time\n      let p = Object.keys(datablock.cacheALoad);\n      if ( p.length > 20 ) {\n        p = p.slice( 0, 20 )\n      }\n      // then delete from cache\n      for ( let k of p ) {\n        delete datablock.cacheALoad[k]\n      }\n\n      c = p\n    }\n\n    let cacheToProces = c\n\n    if (cacheToProces.length === 0) {\n      return;\n    }\n\n    datablock.disableALoader = true;\n\n    // \"https://api.fusionnetwork.io/balances/ts?ts=0xfa37b7c3f21060458361ed5322be5af3740bce3c\n\n    const requestOptions = {\n      method: \"GET\",\n      uri,\n      qs: {\n        ts: cacheToProces.join(\"-\")\n      },\n      headers: {\n        \"X-Content-Type-Options\": \"nosniff\"\n      },\n      json: true,\n      gzip: true\n    };\n\n    return rp(requestOptions)\n      .then(response => {\n        if (response) {\n          // console.log(\"AAAAAA\" + cacheToProces.join(\"-\"), requestOptions);\n          // console.log(response);\n\n          for (let t of response) {\n            datablock.address[t._id] = t;\n            delete datablock.pendingALoad[t._id];\n          }\n          datablock.disableALoader = false;\n          eventEmitter.emit(\"addressesLoaded\", datablock, false);\n          if ( Object.keys(datablock.cacheALoad).length )  {\n            setTimeout( currentDataState.executeLoadOfAddresses, 1 )\n          }\n        }\n        return true;\n      })\n      .catch(err => {\n        console.log(\"Fetch next addresses API call error:\", err);\n        setTimeout(() => {\n          datablock.disableALoader = false\n          currentDataState.executeLoadOfAddresses(cacheToProces);\n        }, 1000);\n      });\n  }\n\n  static generateAssetList(index, sortField, direction, size, callback) {\n    let uri = server + \"/assets/all\";\n    let qs = { index, sortField, direction };\n    let qsStringify = JSON.stringify(qs);\n\n    if (datablock.letPageAssetCache[qsStringify]) {\n      return datablock.letPageAssetCache[qsStringify];\n    }\n\n    if (datablock.letPageAssetCachePending[qsStringify]) {\n      return \"loading\";\n    }\n\n    datablock.letPageAssetCachePending[qsStringify] = true;\n\n    // http://localhost:3000/assets/all?sort=asc&page=20&size=10&field=height\n\n    const requestOptions = {\n      method: \"GET\",\n      uri,\n      qs: {\n        index: index,\n        size: size,\n        sort: direction,\n        field: sortField\n      },\n      headers: {\n        \"X-Content-Type-Options\": \"nosniff\"\n      },\n      json: true,\n      gzip: true\n    };\n\n    rp(requestOptions)\n      .then(response => {\n        if (response) {\n          let tss = [];\n          for (let t of response) {\n            datablock.asset[t.commandExtra] = t;\n            tss.push(t.commandExtra);\n          }\n          datablock.letPageAssetCache[qsStringify] = tss;\n          callback(null, datablock.letPageAssetCache[qsStringify]);\n        }\n        delete datablock.letPageAssetCachePending[qsStringify];\n        return true;\n      })\n      .catch(err => {\n        delete datablock.letPageAssetCachePending[qsStringify];\n        callback(err, null);\n      });\n\n    return \"loading\";\n  }\n\n  static getAsset(t) {\n    t= t.toLowerCase()\n    let tr = datablock.asset[t];\n    if (tr) {\n      return tr;\n    }\n\n    if (datablock.pendingAsLoad[t]) {\n      return \"loading\";\n    }\n\n    let startTimer = Object.keys(datablock.cacheAsLoad).length === 0;\n\n    datablock.pendingAsLoad[t] = true;\n\n    datablock.cacheAsLoad[t] = true;\n\n    if (startTimer && !datablock.disableAsLoader) {\n      setTimeout(currentDataState.executeLoadOfAssets, 1);\n    }\n\n    return \"loading\";\n  }\n\n  static executeLoadOfAssets(c) {\n    let uri = server + \"/assets/ts\";\n\n    let cacheToProces = c ? c : Object.keys(datablock.cacheAsLoad);\n    if (!c) {\n      datablock.cacheAsLoad = {};\n    }\n    if (cacheToProces.length === 0) {\n      return;\n    }\n    datablock.disableAsLoader = true;\n\n    // \"https://api.fusionnetwork.io/assets/ts?ts=0xfa37b7c3f21060458361ed5322be5af3740bce3c\n\n    const requestOptions = {\n      method: \"GET\",\n      uri,\n      qs: {\n        ts: cacheToProces.join(\"-\")\n      },\n      headers: {\n        \"X-Content-Type-Options\": \"nosniff\"\n      },\n      json: true,\n      gzip: true\n    };\n\n    return rp(requestOptions)\n      .then(response => {\n        if (response) {\n          // console.log(\"AsAsAsAsAAs\" + cacheToProces.join(\"-\"), requestOptions);\n          // console.log(response);\n\n          for (let t of response) {\n            datablock.asset[t.commandExra] = t;\n            delete datablock.pendingAsLoad[t.commandExra];\n          }\n          datablock.disableAsLoader = false;\n          eventEmitter.emit(\"assetsLoaded\", datablock, false);\n        }\n        return true;\n      })\n      .catch(err => {\n        console.log(\"Fetch next addresses API call error:\", err);\n        setTimeout(() => {\n          currentDataState.executeLoadOfAssets(cacheToProces);\n        }, 1000);\n      });\n  }\n\n}\n","import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Dimensions\n} from \"react-native\";\n\nimport \"../App.css\";\nimport colors from \"./colors\";\nimport constants from \"./constants\";\nimport utils from \"../utils\";\nimport currentDataState from \"../api/dataAPI\";\n\n\nvar formatter = (new Intl.NumberFormat(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2}))\nvar styles;\n\nclass BigButton extends Component {\n  render() {\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.props.onPress();\n        }}\n      >\n        <View\n          style={{\n            width: 48,\n            marginRight: 8,\n            marginTop: 8,\n            height: 36,\n            borderRadius: 3,\n            borderWidth: 1,\n            borderColor: colors.orderGrey,\n            backgroundColor: this.props.active ? colors.textBlue : colors.white\n          }}\n        >\n          <Text\n            style={[\n              styles.bigButtonText,\n              { color: this.props.active ? colors.white : colors.textBlue }\n            ]}\n          >\n            {this.props.text}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport default class Staking extends Component {\n  state = {\n    stakeVal: 5000,\n    ticketVal : 4,\n    cmd: \"30d\",\n    PFSN_Amount: \"-\",\n    FSN_Amount: \"-\",\n    PFSN_Return: \"-\",\n    FSN_Return: \"-\",\n    Total_Amount: \"-\",\n    Total_Return: \"-\",\n    width: parseInt(Dimensions.get(\"window\").width),\n    ticketNumber: currentDataState.datablock.ticketNumber\n  };\n\n  constructor(props) {\n    super(props);\n    this.calcDisplay = this.calcDisplay.bind(this);\n    this.calcTicketDisplay = this.calcTicketDisplay.bind(this)\n    this.ticketNumberChanged = this.ticketNumberChanged.bind(this);\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  calcTicketDisplay(valIn) {\n    let val = valIn\n    val = parseInt(val);\n    if (\n      isNaN(val) ||\n      val <= 0 ||\n      valIn.length === 0\n    ) {\n      let obj = Object.assign({}, this.state);\n      obj.stakeVal = 0;\n      obj.ticketVal = valIn\n      obj.PFSN_Amount = \"-\";\n      obj.FSN_Amount = \"-\";\n      obj.PFSN_Return = \"-\";\n      obj.FSN_Return = \"-\";\n      obj.Total_Amount = \"-\";\n      obj.Total_Return = \"-\";\n      this.setState(obj);\n      return;\n    }\n\n    this.calcDisplay( \"\" + (val * 5000) )\n  }\n\n  calcDisplay(valIn, cmdPast) {\n    let val = valIn || this.state.stakeVal;\n    let obj = Object.assign({}, this.state);\n    let cmd = cmdPast || this.state.cmd;\n\n    let ticketNumber = parseInt(this.state.ticketNumber);\n\n    val = parseInt(val);\n    if (\n      isNaN(val) ||\n      val <= 0 ||\n      isNaN(ticketNumber) ||\n      (!cmdPast && (!valIn ||\n      valIn.length === 0))\n    ) {\n      obj.stakeVal = valIn;\n      obj.ticketVal = 0\n      obj.PFSN_Amount = \"-\";\n      obj.FSN_Amount = \"-\";\n      obj.PFSN_Return = \"-\";\n      obj.FSN_Return = \"-\";\n      obj.Total_Amount = \"-\";\n      obj.Total_Return = \"-\";\n      obj.cmd = cmd;\n      this.setState(obj);\n      return;\n    }\n\n    if ( !valIn ) {\n      valIn = val\n    }\n\n    let days = 30;\n    switch (cmd) {\n      default:\n      case \"30d\":\n        days = 30;\n        break;\n      case \"60d\":\n        days = 60;\n        break;\n      case \"90d\":\n        days = 90;\n        break;\n      case \"180d\":\n        days = 180;\n        break;\n      case \"1y\":\n        days = 365;\n        break;\n    }\n\n    //let averageBlockTime = 15;\n    let Total_Tickets = ticketNumber;\n    let User_FSN = val;\n    let User_Tickets = Math.floor(User_FSN / 5000);\n\n    let Time_Invested = days;\n    //let pFsnToFsnExchange = 1;\n\n    let Blocks_Per_Day = 5760;\n    let New_Total_Tickets = Total_Tickets + User_Tickets;\n    let Probability_Reward = User_Tickets / New_Total_Tickets;\n    let PFSN_Reward_Block = 2.5;\n    let FSN_Reward_Block = 0.625;\n    let Total_PFSN_Reward_Day_Possible = PFSN_Reward_Block * Blocks_Per_Day;\n    let Total_FSN_Reward_Day_Possible = Blocks_Per_Day * FSN_Reward_Block;\n    let PFSN_Reward_User =\n      Time_Invested * Probability_Reward * Total_PFSN_Reward_Day_Possible;\n    let ROR_PFSN = PFSN_Reward_User / User_FSN;\n    let FSN_Reward_User =\n      Time_Invested * Probability_Reward * Total_FSN_Reward_Day_Possible;\n    let ROR_FSN = FSN_Reward_User / User_FSN;\n    let FSN_PFSN_Reward_User = PFSN_Reward_User + FSN_Reward_User;\n    let ROR_PFSN_PLUS_FSN = FSN_PFSN_Reward_User / User_FSN;\n\n    obj.PFSN_Amount = formatter.format( PFSN_Reward_User )\n    obj.FSN_Amount = formatter.format( FSN_Reward_User );\n    obj.PFSN_Return = ROR_PFSN * 100;\n    obj.FSN_Return = ROR_FSN * 100;\n    obj.Total_Amount = formatter.format( FSN_PFSN_Reward_User );\n    obj.Total_Return = formatter.format( ROR_PFSN_PLUS_FSN * 100 );\n    obj.stakeVal = \"\" + valIn;\n\n    obj.ticketVal = parseInt( User_Tickets  )\n\n    obj.cmd = cmd;\n    this.setState(obj);\n  }\n\n  ticketNumberChanged(ticketNumber) {\n    this.setState({ ticketNumber });\n    this.calcDisplay(this.state.stakeVal);\n  }\n\n  componentDidMount() {\n    this.intervalTimer = setInterval(() => {\n      this.updateDimensions();\n    }, 250);\n\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.calcDisplay(\"1000\");\n    this.mounted = true;\n    currentDataState.on(\"ticketNumber\", this.ticketNumberChanged);\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.removeEventListener(\"resize\", this.updateDimensions);\n    currentDataState.removeEventListener(\n      \"ticketNumber\",\n      this.ticketNumberChanged\n    );\n    if (this.intervalTimer) {\n      clearInterval(this.intervalTimer);\n      this.intervalTimer = undefined;\n    }\n  }\n\n  updateDimensions() {\n    let newWidth = parseInt(Dimensions.get(\"window\").width);\n    if (newWidth !== this.state.width) {\n      this.setState({ width: newWidth });\n    }\n  }\n\n  render() {\n    let cmd = this.state.cmd;\n\n    let displayWidth = 320;\n    let displayHeight = 280;\n\n    if (this.state.width < displayWidth * 2) {\n      this.stacked = true;\n      this.widthToUse = this.state.width - 64;\n    } else {\n      this.stacked = false;\n      this.widthToUse = 585;\n    }\n\n    return (\n      <View style={styles.container}>\n        <View style={styles.innerContainer}>\n          <View\n            style={{\n              width: displayWidth,\n              height: displayHeight,\n              backgroundColor: colors.tagGrey,\n              paddingTop: 16,\n              paddingBottom: 16,\n              paddingLeft: 24,\n              paddingRight: 24,\n              boxShadow: \"0 6px 12px 0 rgba(0, 15, 33, 0.04)\",\n              overflow: \"visible\"\n            }}\n          >\n            <View\n              style={{\n                backgroundColor: colors.tagGrey\n              }}\n            >\n              <View style={styles.youStakeRowText}>\n                <Text style={styles.youStakeText}>\n                  {\"Active Tickets: \" + this.state.ticketNumber}{\" \"}\n                </Text>\n              </View>\n              <View style={styles.youStakeRowText}>\n                <Text style={styles.youStakeText}>Your Stake</Text>\n              </View>\n              <View style={styles.youStakeRow}>\n                <View>\n                  <View\n                    style={{\n                      width: 125,\n                      borderRadius: 3,\n                      backgroundColor: \"white\",\n                      borderWidth: 1,\n                      height: 36,\n                      flex: 1,\n                      flexBasis : 'auto',\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                      borderColor: colors.orderGrey,\n                    }}\n                  >\n                    <TextInput\n                      style={[styles.stakeQuantityInput]}\n                      placeholder=\"0\"\n                      autoCorrect={false}\n                      placeholderTextColor={colors.orderGrey}\n                      maxLength={10}\n                      value={\"\" + (this.state.stakeVal || \"\")}\n                      onChangeText={val => {\n                        this.calcDisplay(val);\n                      }}\n                    />\n                    <Text style={styles.inputLabel}>FSN</Text>\n                  </View>\n                </View>\n                <Text style={{marginTop:8,marginRight:8,marginLeft:8}}>=</Text>\n                <View>\n                  <View\n                    style={{\n                      width: 125,\n                      borderRadius: 3,\n                      backgroundColor: \"white\",\n                      borderWidth: 1,\n                      height: 36,\n                      flex: \"1 0 0\",\n                      flexDirection: \"row\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                      borderColor: colors.orderGrey,\n                      marginRight: 16\n                    }}\n                  >\n                    <TextInput\n                      style={[styles.stakeQuantityInput]}\n                      placeholder=\"0\"\n                      autoCorrect={false}\n                      placeholderTextColor={colors.orderGrey}\n                      maxLength={10}\n                      value={\"\" + (this.state.ticketVal || \"\")}\n                      onChangeText={val => {\n                        this.calcTicketDisplay(val);\n                      }}\n                    />\n                    <Text style={styles.inputLabel}>Tickets</Text>\n                  </View>\n                </View>\n              </View>\n              <View style={{ marginTop: 32 }}>\n                <Text style={styles.youStakeForText}>Staking Time</Text>\n                <View style={{ height: 8 }} />\n                <View\n                  style={{\n                    flex: 1,\n                    flexDirection: \"row\",\n                    justifyContent: \"flex-start\"\n                    //flexWrap : 'wrap',\n                  }}\n                >\n                  <BigButton\n                    text=\"30d\"\n                    active={cmd === \"30d\"}\n                    onPress={() => {\n                      this.calcDisplay(undefined, \"30d\");\n                    }}\n                  />\n                  <BigButton\n                    text=\"60d\"\n                    active={cmd === \"60d\"}\n                    onPress={() => {\n                      this.calcDisplay(undefined, \"60d\");\n                    }}\n                  />\n                  <BigButton\n                    text=\"90d\"\n                    active={cmd === \"90d\"}\n                    onPress={() => {\n                      this.calcDisplay(undefined, \"90d\");\n                    }}\n                  />\n                  <BigButton\n                    text=\"180d\"\n                    active={cmd === \"180d\"}\n                    onPress={() => {\n                      this.calcDisplay(undefined, \"180d\");\n                    }}\n                  />\n                  <BigButton\n                    text=\"1y\"\n                    active={cmd === \"1y\"}\n                    onPress={() => {\n                      this.calcDisplay(undefined, \"1y\");\n                    }}\n                  />\n                </View>\n                <View style={{ height: 32 }} />\n              </View>\n            </View>\n          </View>\n          <View\n            style={{\n              width: displayWidth,\n              height: displayHeight,\n              backgroundColor: colors.white,\n              paddingTop: 16,\n              paddingBottom: 16,\n              paddingLeft: 24,\n              paddingRight: 24,\n              boxShadow: \"0 6px 12px 0 rgba(0, 15, 33, 0.04)\",\n              overflow: \"visible\"\n            }}\n          >\n            <View\n              style={{\n                backgroundColor: \"white\"\n              }}\n            >\n              <Text\n                style={[\n                  styles.youReceiveText,\n                  { marginTop: this.stacked ? 24 : 0 }\n                ]}\n              >\n                Your Estimated Return\n              </Text>\n              <View style={{ height: 16 }} />\n              <View style={styles.simpleRow}>\n                <Text style={styles.calcAmountText}>\n                  {this.state.PFSN_Amount}\n                </Text>\n                <Text style={styles.smallLabelText}>FSN</Text>\n                <View style={{ width: 32 }} />\n                <Text style={styles.calcReturnText}>\n                  {utils.formatPercent(this.state.PFSN_Return)}\n                </Text>\n                <Text style={styles.smallLabelText}>ROR</Text>\n              </View>\n              {/* <View style={styles.simpleRow}>\n                <Text style={styles.calcAmountText}>\n                  {this.state.FSN_Amount}\n                </Text>\n                <Text style={styles.smallLabelText}>FSN</Text>\n                <View style={{ width: 32 }} />\n                <Text style={styles.calcReturnText}>\n                  {utils.formatPercent(this.state.FSN_Return)}\n                </Text>\n                <Text style={styles.smallLabelText}>ROR</Text>\n              </View> */}\n              <View style={{ height: 48 }} />\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nstyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 0,\n    flexShrink: 0,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: colors.white\n  },\n  innerContainer: {\n    flex: 1,\n    flexGrow: 0,\n    flexShrink: 0,\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n    backgroundColor: colors.white,\n    flexWrap: \"wrap\",\n    marginTop: 32\n  },\n  youStakeRowText: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    marginBottom: 16\n  },\n  youStakeText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 18,\n    color: colors.textBlue,\n    width: 240,\n    fontWeight: constants.regularFont\n  },\n  titleText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 22,\n    color: colors.textBlue,\n    width: 240,\n    fontWeight: constants.mediumFont\n  },\n  youStakeForText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 13,\n    color: colors.texBlue,\n    fontWeight: constants.regularFont\n  },\n  youReceiveText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 18,\n    color: colors.textBlue,\n    fontWeight: constants.regularFont\n  },\n  smallLabelText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    color: colors.textBlue,\n    fontWeight: constants.mediumFont,\n    paddingTop: 9\n  },\n  simpleRow: {\n    marginTop: 16,\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: \"flex-start\"\n  },\n  plusText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 24,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont\n  },\n  calcLabelText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 24,\n    color: colors.textBlue,\n    fontWeight: constants.mediumFont,\n    width: 100\n  },\n  calcAmountText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 22,\n    color: colors.textBlue,\n    fontWeight: constants.mediumFont,\n    marginRight: 4,\n    textAlign: \"left\"\n  },\n  calcReturnText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 14,\n    color: colors.textBlue,\n    fontWeight: constants.mediumFont,\n    marginRight: 4,\n    textAlign: \"left\",\n    paddingTop: 7\n  },\n  youStakeRow: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\"\n  },\n  stakeQuantityInput: {\n    width: 80,\n    fontSize: 14,\n    fontStyle: constants.mediumFont,\n    fontFamily: constants.fontFamily,\n    color: colors.textBlue,\n    height: 36,\n    //alignSelf: \"flex-end\",\n    textAlign: \"left\",\n    paddingRight: 4,\n    paddingLeft: 8,\n    outline: \"none\"\n  },\n  inputLabel : {\n    marginTop: 8,\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    color: colors.textBlue,\n    fontWeight: constants.regularFont,\n    width : 45,\n    height : 20,\n    paddingRight : 4,\n    textAlign : 'right',\n    whiteSpace : 'nowrap'\n  },\n  sectionTitle: {\n    fontSize: 28,\n    color: \"rgba(22,22,22, .5)\"\n  },\n  sectionNumberTitle: {\n    fontSize: 18,\n    color: \"rgb(22,22,22)\",\n    marginTop: 30,\n    marginBottom: 10\n  },\n  bigButtonText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 14,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue,\n    textAlign: \"center\",\n    paddingTop: 10\n  },\n  info: {\n    fontSize: 16,\n    color: \"rgba(22,22,22, .5)\"\n  },\n  imageUploadSection: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"transparent\",\n    marginLeft: 35,\n    marginTop: 15\n  },\n  actionButtonDisabled: {\n    backgroundColor: \"#20C0FF\",\n    height: 35,\n    width: 130,\n    opacity: 0.5,\n    boxShadow: \"5px 10px 18px #888888\"\n  },\n  actionButtonTextDisabled: {\n    color: \"#7f7f7f\",\n    fontSize: 19,\n    marginTop: 7,\n    textAlign: \"center\"\n  },\n  actionButton: {\n    backgroundColor: \"#20C0FF\",\n    height: 35,\n    width: 130,\n    boxShadow: \"5px 10px 18px #888888\"\n  },\n  actionButtonText: {\n    color: \"#FFFFFF\",\n    fontSize: 19,\n    marginTop: 7,\n    textAlign: \"center\"\n  },\n  label: {\n    fontSize: 14,\n    color: \"rgba(22,22,22,.5)\",\n    width: 160,\n    marginBottom: 5\n  },\n  balanceBox: {\n    width: 160,\n    marginBottom: 5,\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    flexBasis: \"100%\"\n  }\n});\n","import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  ActivityIndicator,\n  TouchableOpacity,\n  Dimensions\n} from \"react-native\";\n\nimport \"../App.css\";\nimport colors from \"./colors\";\nimport utils from \"../utils\";\nimport constants from \"./constants\";\nconst rp = require(\"request-promise\");\n\nlet server = utils.getServer()\n\nvar styles;\n\nlet bronze = require(\"../images/Bronze.svg\");\nlet gold = require(\"../images/Gold.svg\");\nlet silver = require(\"../images/Silver.svg\");\n\nvar formatter = (new Intl.NumberFormat(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2}))\n\n\nclass SelectButton extends Component {\n  render() {\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          this.props.onPress();\n        }}\n      >\n        <View\n          style={{\n            width: 110,\n            marginLeft : 4,\n            marginRight: 4,\n            height: 36,\n            overflow: \"visible\",\n            borderRadius: 3,\n            // borderWidth: 1,\n            // borderColor: colors.orderGrey,\n            boxShadow: \"0 6px 12px 0 rgba(189, 196, 206, 0.2)\",\n            backgroundColor: this.props.active\n              ? colors.primaryBlue\n              : colors.white\n          }}\n        >\n          <Text\n            style={[\n              styles.bigButtonText,\n              { color: this.props.active ? colors.white : colors.textBlue }\n            ]}\n          >\n            {this.props.text}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport default class Leaderboard extends Component {\n  state = {\n    loading: true,\n    thisMonth: [],\n    lastMonth: [],\n    lastYear: [],\n    cmd: \"Year To Date\",\n    width: parseInt(Dimensions.get(\"window\").width)\n  };\n\n  constructor(props) {\n    super(props);\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n  render() {\n    let { loading, error, cmd } = this.state;\n\n    if (this.state.width < 640) {\n      this.stacked = true;\n      this.widthToUse = parseInt(Dimensions.get(\"window\").width) - 64;\n    } else {\n      this.stacked = false;\n      this.widthToUse = 585;\n    }\n\n    if (loading) {\n      return (\n        <View\n          style={{\n            flex: 1,\n            flexDirection: \"row\",\n            marginTop: 32,\n            marginLeft: 32\n          }}\n        >\n          <ActivityIndicator size=\"small\" color={colors.primaryBlue} />\n          <Text style={[styles.titleText, { marginTop: 12, marginLeft: 16 }]}>\n            Loading...\n          </Text>\n        </View>\n      );\n    }\n    if (error) {\n      return (\n        <View>\n          <Text style={styles.titleText}>{error}</Text>\n        </View>\n      );\n    }\n    return (\n      <View style={styles.container}>\n        <View style={styles.subContainer}>\n          <Text style={styles.titleText}>Staking Leaderboard</Text>\n          <View\n            style={{\n              flex: 1,\n              flexDirection: \"row\",\n              marginBottom: 16,\n            }}\n          >\n            <SelectButton\n              text=\"Current Month\"\n              active={cmd === \"Current Month\"}\n              onPress={() => {\n                this.setState({ cmd: \"Current Month\" });\n              }}\n            />\n            <SelectButton\n              text=\"Prior Month\"\n              active={cmd === \"Prior Month\"}\n              onPress={() => {\n                this.setState({ cmd: \"Prior Month\" });\n              }}\n            />\n            <SelectButton\n              text=\"Year To Date\"\n              active={cmd === \"Year To Date\"}\n              onPress={() => {\n                this.setState({ cmd: \"Year To Date\" });\n              }}\n            />\n          </View>\n          {this.renderTop3()}\n          <View style={{ height: 20 }} />\n          <View\n            style={{\n              boxShadow: \"0 6px 12px 0 rgba(189, 196, 206, 0.2)\",\n              overflow: \"visible\",\n              paddingTop: 0,\n              paddingRight: this.stacked ? 16 : 32,\n              paddingLeft: this.stacked ? 16 : 32,\n              paddingBottom: 32,\n              borderWidth: 1,\n              borderColor: colors.tagGrey\n            }}\n          >\n            {this.renderTitle()}\n            {this.renderTable()}\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  renderTitle() {\n    if (this.stacked) {\n      return undefined;\n    }\n    return (\n      <View\n        style={{\n          flex: 1,\n          flexDirection: \"row\",\n          justifyContent: \"flex-start\",\n          marginTop: 16,\n          marginBottom: 4\n        }}\n      >\n        <Text style={[styles.headerText, { width: 32 }]}>#</Text>\n        <Text style={[styles.headerText, { width: 372, marginRight: 4 }]}>\n          Address\n        </Text>\n\n        <Text\n          style={[\n            styles.headerText,\n            { textAlign: \"right\", width: 90, marginRight: 4 }\n          ]}\n        >\n          P-FSN\n        </Text>\n        <Text\n          style={[\n            styles.headerText,\n            { textAlign: \"right\", width: 90, marginRight: 4 }\n          ]}\n        >\n          FSN Earned\n        </Text>\n      </View>\n    );\n  }\n\n  renderTop3() {\n    let ret = [];\n\n    let data;\n    switch (this.state.cmd) {\n      case \"Prior Month\":\n        data = this.state.lastMonth;\n        break;\n      case \"Current Month\":\n        data = this.state.thisMonth;\n        break;\n      default:\n        data = this.state.lastYear;\n        break;\n    }\n\n    let datas = [data[1], data[0], data[2]];\n    let heights = [134, 146, 134];\n    let heightDiff = [12, 0, 12];\n    let images = [silver, gold, bronze];\n    let sizes = [52, 64, 40];\n    let sizesStacked = [64, 52, 40];\n    let width = 190;\n    let imagesStacked = [gold, silver, bronze];\n\n    for (let index = 0; index < 3; index++) {\n      let row = this.stacked ? data[index] : datas[index];\n\n      let count , miner\n\n      if ( !row || !row.miner  ) {\n        count = 0\n        miner = \"0x000000000000000000000\"\n        row = { count , miner }\n      } else {\n        count = row[\"count(miner)\"];\n        miner = row.miner.toLowerCase();  \n      }\n\n      if (this.stacked) {\n        ret.push(\n          <View\n            key={\"sep1\" + index}\n            style={{\n              width: this.widthToUse + 32,\n              height: 104,\n              paddingRight: 0,\n              paddingLeft: 0,\n              // flex: 1,\n              flexDirection: \"row\",\n              // justifyContent: \"flex-start\",\n              // alignItems: \"flex-start\",\n              boxShadow: \"0 6px 12px 0 rgba(189, 196, 206, 0.2)\",\n              overflow: \"visible\",\n              borderWidth: 1,\n              borderColor: colors.tagGrey,\n              marginBottom: index === 2 ? 8 : 12\n            }}\n          >\n            <View\n              style={{\n                height: 104,\n                width: 96,\n                justifyContent: \"center\",\n                alignItems: \"center\"\n                // backgroundColor : 'red'\n              }}\n            >\n              <Image\n                source={imagesStacked[index]}\n                resizeMode=\"contain\"\n                style={{\n                  width: sizesStacked[index],\n                  height: sizesStacked[index]\n                }}\n              />\n            </View>\n            <View\n              key={\"sep1b\" + index}\n              style={{\n                width: this.widthToUse - 96,\n                height: 104,\n                justifyContent: \"center\",\n                alignItems: \"flex-start\",\n                marginTop: 28\n              }}\n            >\n              <TouchableOpacity\n                onPress={() => {\n                  window.open(\n                    \"https://blocks.fusionnetwork.io/Addresses/\" + miner\n                  );\n                }}\n              >\n                <Text\n                  style={[\n                    styles.rowText,\n                    { color: colors.linkBlue, marginBottom: 4 }\n                  ]}\n                >\n                  {utils.midHashDisplay(miner)}\n                </Text>\n              </TouchableOpacity>\n              <View\n                style={{\n                  flex: 1,\n                  flexDirection: \"row\"\n                }}\n              >\n                <Text style={[styles.top3Number]}>\n                  {this.pfsnEarned(count)}\n                  <Text style={[styles.top3Text]}>PFSN</Text>\n                </Text>\n                <Text style={[styles.top3Number]}>\n                  {this.fsnEarned(count)}\n                  <Text style={[styles.top3Text]}>FSN</Text>\n                </Text>\n              </View>\n            </View>\n          </View>\n        );\n      } else {\n        ret.push(\n          <View\n            key={\"sep1\" + index}\n            style={{\n              width: width,\n              height: 200,\n              flex: 1,\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n              overflow: \"visible\",\n              marginRight: index === 1 ? 30 : 0,\n              marginLeft: index === 1 ? 30 : 0\n            }}\n          >\n            <View\n              style={{\n                zIndex: 1,\n                height: 32 + heightDiff[index],\n                flex: 1,\n                justifyContent: \"flex-end\",\n                alignItems: \"center\",\n                position: \"relative\",\n                top: sizes[index] / 2\n              }}\n            >\n              <Image\n                source={images[index]}\n                resizeMode=\"contain\"\n                style={{ width: sizes[index], height: sizes[index] }}\n              />\n            </View>\n            <View\n              key={\"sep1\" + row.miner}\n              style={{\n                width: width,\n                height: heights[index],\n                justifyContent: \"center\",\n                borderWidth: 1,\n                borderColor: colors.tagGrey,\n                alignItems: \"center\",\n                boxShadow: \"0 6px 12px 0 rgba(189, 196, 206, 0.2)\",\n                overflow: \"visible\",\n                alignSelf: \"flex-end\",\n                marginTop: 8\n              }}\n            >\n              <TouchableOpacity\n                onPress={() => {\n                  window.open(\n                    \"https://blocks.fusionnetwork.io/Addresses/\" + miner\n                  );\n                }}\n              >\n                <Text\n                  style={[\n                    styles.rowText,\n                    { color: colors.linkBlue, marginBottom: 4 }\n                  ]}\n                >\n                  {utils.midHashDisplay(miner)}\n                </Text>\n              </TouchableOpacity>\n              <Text style={[styles.top3Number]}>\n                {this.pfsnEarned(count)}\n                <Text style={[styles.top3Text]}>PFSN</Text>\n              </Text>\n              <Text style={[styles.top3Number]}>\n                {this.fsnEarned(count)}\n                <Text style={[styles.top3Text]}>FSN</Text>\n              </Text>\n            </View>\n          </View>\n        );\n      }\n    }\n\n    return (\n      <View\n        key=\"top3\"\n        style={{\n          flex: 1,\n          flexDirection: this.stacked ? \"column\" : \"row\"\n        }}\n      >\n        {ret}\n      </View>\n    );\n  }\n\n  renderTable() {\n    let ret = [];\n\n    let data;\n    switch (this.state.cmd) {\n      case \"Prior Month\":\n        data = this.state.lastMonth;\n        break;\n      case \"Current Month\":\n        data = this.state.thisMonth;\n        break;\n      default:\n        data = this.state.lastYear;\n        break;\n    }\n\n    let index = 1;\n\n    for (let row of data) {\n      if (index < 4) {\n        index++;\n        continue;\n      }\n\n      let count, miner\n\n      if ( !row || !row.miner  ) {\n        count = 0\n        miner = \"0x000000000000000000000\"\n        row = { count , miner }\n      } else {\n        count = row[\"count(miner)\"];\n        miner = row.miner.toLowerCase();  \n      }\n\n      if (!this.stacked | (index > 4)) {\n        ret.push(\n          <View\n            key={\"sep\" + index}\n            style={{\n              marginTop: 8,\n              marginBottom: 8,\n              width: this.widthToUse,\n              height: 1,\n              backgroundColor: \"#bdc4ce\"\n            }}\n          />\n        );\n      } else {\n        ret.push(\n          <View\n            key={\"sep1\" + index}\n            style={{\n              marginTop: 8,\n              marginBottom: 8,\n              width: this.widthToUse,\n              height: 1\n            }}\n          />\n        );\n      }\n\n      ret.push(\n        <View\n          key={\"se11m\"+index}\n          style={{\n            flex: 1,\n            flexDirection: this.stacked ? \"column\" : \"row\",\n            justifyContent: \"flex-start\",\n            marginBottom: 4\n          }}\n        >\n          <View\n            style={{\n              flex: 1,\n              flexDirection: \"row\"\n            }}\n          >\n            <Text style={[styles.headerText, { width: 32 }]}>{index}</Text>\n            <TouchableOpacity\n              onPress={() => {\n                window.open(\n                  \"https://blocks.fusionnetwork.io/Addresses/\" + miner\n                );\n              }}\n            >\n              <Text\n                style={[\n                  styles.rowText,\n                  { color: colors.linkBlue, width: 340, marginRight: 4 }\n                ]}\n              >\n                {miner}\n              </Text>\n            </TouchableOpacity>\n          </View>\n          <Text\n            style={[\n              styles.rowText,\n              {\n                textAlign: this.stacked ? \"left\" : \"right\",\n                width: this.stacked ? 300 : 90,\n                marginRight: 4,\n                marginLeft: this.stacked ? 32 : 0\n              }\n            ]}\n          >\n            {this.pfsnEarned(count)}\n            {this.stacked && (\n              <Text style={[styles.headerText, { textAlign: \"left\" }]}>\n                P-FSN\n              </Text>\n            )}\n          </Text>\n          <Text\n            style={[\n              styles.rowText,\n              {\n                textAlign: this.stacked ? \"left\" : \"right\",\n                width: this.stacked ? 300 : 90,\n                marginRight: 4,\n                marginLeft: this.stacked ? 32 : 0\n              }\n            ]}\n          >\n            {this.fsnEarned(count)}\n            {this.stacked && (\n              <Text style={[styles.headerText, { textAlign: \"left\" }]}>\n                FSN Earned\n              </Text>\n            )}\n          </Text>\n        </View>\n      );\n      index++;\n    }\n\n    return ret;\n  }\n\n  pfsnEarned(count) {\n    return formatter.format(count * 2.5)\n  }\n\n  fsnEarned(count) {\n    return formatter.format(count * 0.625)\n  }\n\n  componentDidMount() {\n    this.intervalTimer = setInterval( ()=> {\n        this.updateDimensions()\n    }, 250 )\n\n    window.addEventListener(\"resize\", this.updateDimensions);\n    this.mounted = true;\n\n    const requestOptions = {\n      method: \"GET\",\n      uri: server + \"/leaderboard\",\n      qs: {},\n      headers: {\n        \"X-Content-Type-Options\": \"nosniff\"\n      },\n      json: true,\n      gzip: true\n    };\n\n    rp(requestOptions)\n      .then(response => {\n        if (response) {\n          if (this.mounted) {\n            this.setState({\n              loading: false,\n              lastMonth: response.lastMonth,\n              lastYear: response.lastYear,\n              thisMonth: response.thisMonth\n            });\n          }\n        }\n      })\n      .catch(err => {\n        console.log(\"API call error:\", err.message);\n        this.setState({\n          error: \"Unable to load, please refresh the page\",\n          loading: false\n        });\n      });\n  }\n\n  updateDimensions() {\n    let newWidth = parseInt(Dimensions.get(\"window\").width)\n    if ( newWidth !== this.state.width ) {\n      this.setState({ width: newWidth });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n    window.removeEventListener(\"resize\", this.updateDimensions);\n    if ( this.intervalTimer ) {\n      clearInterval( this.intervalTimer )\n      this.intervalTimer = undefined\n    }\n  }\n}\n\nstyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexGrow: 0,\n    flexShrink: 0,\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    backgroundColor: colors.white,\n    padding: 32,\n    height: \"100%\",\n    width: \"100%\"\n  },\n  subContainer: {\n    flex: 1,\n    flexGrow: 0,\n    flexShrink: 0,\n    flexDirection: \"column\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    backgroundColor: colors.white\n  },\n  titleText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 32,\n    color: colors.textBlue,\n    fontWeight: constants.boldFont,\n    marginBottom: 16\n  },\n  headerText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 13,\n    color: colors.labelGrey,\n    fontWeight: constants.mediumFont,\n    backgroundColor: colors.white,\n    padding: 4\n  },\n  rowText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 14,\n    color: colors.labelGrey,\n    fontWeight: constants.mediumFont,\n    backgroundColor: colors.white,\n    padding: 4\n  },\n  top3Number: {\n    fontFamily: constants.fontFamily,\n    fontSize: 16,\n    color: colors.darkBlue,\n    fontWeight: constants.boldFont,\n    padding: 4\n  },\n  top3Text: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    color: colors.darkBlue,\n    fontWeight: constants.mediumFont,\n    padding: 4\n  },\n  youStakeRowText: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    marginBottom: 16\n  },\n  youStakeText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 20,\n    color: colors.white,\n    width: 240,\n    fontWeight: constants.mediumFont\n  },\n  youStakeForText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 20,\n    color: colors.white,\n    fontWeight: constants.mediumFont\n  },\n  youReceiveText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 18,\n    color: colors.white,\n    fontWeight: constants.mediumFont\n  },\n  smallLabelText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 12,\n    color: colors.white,\n    fontWeight: constants.mediumFont\n  },\n  simpleRow: {\n    marginTop: 16,\n    flexDirection: \"row\",\n    flex: 1,\n    justifyContent: \"flex-start\"\n  },\n  plusText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 24,\n    color: colors.white,\n    fontWeight: constants.boldFont\n  },\n  calcLabelText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 24,\n    color: colors.white,\n    fontWeight: constants.mediumFont,\n    width: 200\n  },\n  calcAmountText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 24,\n    color: colors.white,\n    fontWeight: constants.mediumFont,\n    width: 200\n  },\n  calcReturnText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 24,\n    color: colors.white,\n    fontWeight: constants.mediumFont\n  },\n  youStakeRow: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\"\n  },\n  stakeQuantityInput: {\n    width: 200,\n    borderColor: colors.orderGrey,\n    borderRadius: 3,\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    fontSize: 18,\n    fontFamily: constants.mediumFont,\n    color: colors.labelGrey,\n    height: 48,\n    textAlign: \"right\",\n    paddingRight: 4,\n    paddingLeft: 4,\n    outline: \"none\",\n    alignSelf: \"flex-start\"\n  },\n  sectionTitle: {\n    fontSize: 28,\n    color: \"rgba(22,22,22, .5)\"\n  },\n  sectionNumberTitle: {\n    fontSize: 18,\n    color: \"rgb(22,22,22)\",\n    marginTop: 30,\n    marginBottom: 10\n  },\n  bigButtonText: {\n    fontFamily: constants.fontFamily,\n    fontSize: 14,\n    fontWeight: constants.regularFont,\n    color: colors.textBlue,\n    textAlign: \"center\",\n    padding: 8\n  },\n  info: {\n    fontSize: 16,\n    color: \"rgba(22,22,22, .5)\"\n  },\n  imageUploadSection: {\n    flex: 1,\n    flexGrow: 1,\n    flexShrink: 0,\n    flexBasis: \"auto\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"flex-start\",\n    backgroundColor: \"transparent\",\n    marginLeft: 35,\n    marginTop: 15\n  },\n  actionButtonDisabled: {\n    backgroundColor: \"#20C0FF\",\n    height: 35,\n    width: 130,\n    opacity: 0.5,\n    boxShadow: \"5px 10px 18px #888888\"\n  },\n  actionButtonTextDisabled: {\n    color: \"#7f7f7f\",\n    fontSize: 19,\n    marginTop: 7,\n    textAlign: \"center\"\n  },\n  actionButton: {\n    backgroundColor: \"#20C0FF\",\n    height: 35,\n    width: 130,\n    boxShadow: \"5px 10px 18px #888888\"\n  },\n  actionButtonText: {\n    color: \"#FFFFFF\",\n    fontSize: 19,\n    marginTop: 7,\n    textAlign: \"center\"\n  },\n  label: {\n    fontSize: 14,\n    color: \"rgba(22,22,22,.5)\",\n    width: 160,\n    marginBottom: 5\n  },\n  balanceBox: {\n    width: 160,\n    marginBottom: 5,\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    flexBasis: \"100%\"\n  }\n});\n","import React, { Component } from \"react\";\nimport { View } from \"react-native\";\nimport \"./App.css\";\nimport history from \"./history.js\";\nimport UnlockAccount from \"./Components/UnlockAccount.js\";\nimport PurchaseTicket from \"./Components/PurchaseTicket.js\";\nimport Status from \"./Components/Status.js\";\nimport Header from \"./Components/Header/Header.js\";\nimport BlockDisplayer from \"./Components/BlockDisplayer\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport AppSelect from \"./Components/Header/AppSelect.js\";\nimport Staking from \"./Components/Staking.js\";\nimport { Route, Router } from \"react-router-dom\";\nimport Leaderboard from \"./Components/Leaderboard.js\";\n\nclass App extends Component {\n  render() {\n    if (false) {\n      return <UnlockAccount />;\n    }\n    if (window.location.href.toLowerCase().indexOf( \"staking\") > 0  ) {\n      return <Staking></Staking>\n    }\n    if (window.location.href.toLowerCase().indexOf( \"leaderboard\") > 0  ) {\n      return <Leaderboard/>\n    }\n    return (\n      <View>\n        {/* <Header title=\"Auto Buy Stake\" titleWidth={150} version=\"2.00.00\" nodeSelect={true}/> */}\n        <Router history={history}>\n            <div>\n              <Route exact path=\"/\" component={Staking} />\n              {/* <Route exact path=\"/\" component={UnlockAccount} /> */}\n              {/* <Route path=\"/Status\" component={Status} />          */}\n              {/* <Route path=\"/UnlockAccount\" component={UnlockAccount} />\n              <Route path=\"/PurchaseTicket\" component={PurchaseTicket} />\n              <Route path=\"/Block/:blockNumber\" component={BlockDisplayer} /> */}\n              <Route path=\"/Staking\" component={Staking} />\n            </div>\n          </Router>\n          <AppSelect/>\n      </View>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}